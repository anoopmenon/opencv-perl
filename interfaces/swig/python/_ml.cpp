/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#ifdef __cplusplus
template<typename T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif
/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif


/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif


/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);
    PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}



#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         PySwigClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* PySwigClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} PySwigClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  PySwigClientData *data = (PySwigClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  PySwigClientData *data = desc ? (PySwigClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME PySwigClientData * 
PySwigClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    PySwigClientData *data = (PySwigClientData *)malloc(sizeof(PySwigClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
PySwigClientData_Del(PySwigClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== PySwigObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} PySwigObject;

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0) {
      PyObject *ofmt = PyString_FromString(fmt);
      if (ofmt) {
	res = PyString_Format(ofmt,args);
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
PySwigObject_repr(PySwigObject *v)
#else
PySwigObject_repr(PySwigObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = PySwigObject_hex(v);    
  PyObject *repr = PyString_FromFormat("<Swig Object of type '%s' at 0x%s>", name, PyString_AsString(hex));
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next);
#else
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next, args);
#endif
    PyString_ConcatAndDel(&repr,nrep);
  }
  return repr;  
}

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
#ifdef METH_NOARGS
  PyObject *repr = PySwigObject_repr(v);
#else
  PyObject *repr = PySwigObject_repr(v, NULL);
#endif
  if (repr) {
    fputs(PyString_AsString(repr), fp);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type())
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
PySwigObject_dealloc(PyObject *v)
{
  PySwigObject *sobj = (PySwigObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = PySwigObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
PySwigObject_append(PyObject* v, PyObject* next)
{
  PySwigObject *sobj = (PySwigObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!PySwigObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
PySwigObject_next(PyObject* v)
#else
PySwigObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_disown(PyObject *v)
#else
PySwigObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_acquire(PyObject *v)
#else
PySwigObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
PySwigObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      PySwigObject *sobj = (PySwigObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v);
	} else {
	  PySwigObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v,args);
	} else {
	  PySwigObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
PySwigObject_getattr(PySwigObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
	(char *)"PySwigObject",		    /* tp_name */
	sizeof(PySwigObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)PySwigObject_dealloc,   /* tp_dealloc */
	(printfunc)PySwigObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)PySwigObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
	(cmpfunc)PySwigObject_compare,	    /* tp_compare */ 
	(reprfunc)PySwigObject_repr,	    /* tp_repr */    
	&PySwigObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)PySwigObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigobject_type = tmp;
    pyswigobject_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own)
{
  PySwigObject *sobj = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->ty->name);
  } else {
    return PyString_FromString(v->ty->name);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

SWIGRUNTIME void
PySwigPacked_dealloc(PyObject *v)
{
  if (PySwigPacked_Check(v)) {
    PySwigPacked *sobj = (PySwigPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */	
	(char *)"PySwigPacked",		    /* tp_name */	
	sizeof(PySwigPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)PySwigPacked_dealloc,   /* tp_dealloc */	
	(printfunc)PySwigPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
	(cmpfunc)PySwigPacked_compare,	    /* tp_compare */ 	
	(reprfunc)PySwigPacked_repr,	    /* tp_repr */    	
	0,	                            /* tp_as_number */	
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */	
	(hashfunc)0,			    /* tp_hash */	
	(ternaryfunc)0,			    /* tp_call */	
	(reprfunc)PySwigPacked_str,	    /* tp_str */	
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigpacked_type = tmp;
    pyswigpacked_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  PySwigPacked *sobj = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (PySwigPacked_Check(obj)) {
    PySwigPacked *sobj = (PySwigPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
  return PyString_FromString("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

SWIGRUNTIME PySwigObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (PySwigObject_Check(pyobj)) {
    return (PySwigObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !PySwigObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 PySwigObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (PySwigObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (own)
      *own = 0;
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (PySwigObject *)sobj->next;
	  } else {
	    if (ptr) {
              int newmemory = 0;
              *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
              if (newmemory == SWIG_CAST_NEW_MEMORY) {
                assert(own);
                if (own)
                  *own = *own | SWIG_CAST_NEW_MEMORY;
              }
            }
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      PySwigObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = PySwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    PySwigObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      PySwigObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = PySwigObject_New(ptr, type, own);
    PySwigClientData *clientdata = type ? (PySwigClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? PySwigPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      PySwigClientData *data = (PySwigClientData *) ty->clientdata;
      if (data) PySwigClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = PyString_FromString(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  PySwigObject *v = (PySwigObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* define the PyAPI_FUNC macro if it doesn't exist, for example with Python
   version below 2.3... But not really tested... */
#ifndef PyAPI_FUNC
#       define PyAPI_FUNC(RTYPE) RTYPE
#endif

/* remove the PyInt_AS_LONG if defined, as this cause problems on RedHat */
#ifdef PyInt_AS_LONG
#undef PyInt_AS_LONG
#endif

/* wrapper to the better function PyInt_AsLong, removing problems
   with RedHat (I hope) */
static PyAPI_FUNC(long) PyInt_AS_LONG (PyObject *obj) {
    return PyInt_AsLong (obj);
}

/* remove the PyFloat_AS_DOUBLE if defined, to prevent errors */
#ifdef PyFloat_AS_DOUBLE
#undef PyFloat_AS_DOUBLE
#endif

/* wrapper to the better function PyFloat_AS_DOUBLE, to prevent errors */
static PyAPI_FUNC(double) PyFloat_AS_DOUBLE (PyObject *obj) {
    return PyFloat_AsDouble (obj);
}


  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void swig_types[0]
#define SWIGTYPE_m_CvSVMSolver__f_int_p_float_p_float_bool__p_float swig_types[1]
#define SWIGTYPE_m_CvSVMSolver__f_r_double_r_double__void swig_types[2]
#define SWIGTYPE_m_CvSVMSolver__f_r_int_r_int__bool swig_types[3]
#define SWIGTYPE_p_Calc swig_types[4]
#define SWIGTYPE_p_CalcRho swig_types[5]
#define SWIGTYPE_p_Cv32suf swig_types[6]
#define SWIGTYPE_p_Cv64suf swig_types[7]
#define SWIGTYPE_p_CvANN_MLP swig_types[8]
#define SWIGTYPE_p_CvANN_MLP_TrainParams swig_types[9]
#define SWIGTYPE_p_CvAttrList swig_types[10]
#define SWIGTYPE_p_CvAvgComp swig_types[11]
#define SWIGTYPE_p_CvBoost swig_types[12]
#define SWIGTYPE_p_CvBoostParams swig_types[13]
#define SWIGTYPE_p_CvBoostTree swig_types[14]
#define SWIGTYPE_p_CvBox2D swig_types[15]
#define SWIGTYPE_p_CvChain swig_types[16]
#define SWIGTYPE_p_CvChainPtReader swig_types[17]
#define SWIGTYPE_p_CvConDensation swig_types[18]
#define SWIGTYPE_p_CvConnectedComp swig_types[19]
#define SWIGTYPE_p_CvContour swig_types[20]
#define SWIGTYPE_p_CvContourTree swig_types[21]
#define SWIGTYPE_p_CvConvexityDefect swig_types[22]
#define SWIGTYPE_p_CvDTree swig_types[23]
#define SWIGTYPE_p_CvDTreeNode swig_types[24]
#define SWIGTYPE_p_CvDTreeParams swig_types[25]
#define SWIGTYPE_p_CvDTreeSplit swig_types[26]
#define SWIGTYPE_p_CvDTreeTrainData swig_types[27]
#define SWIGTYPE_p_CvEM swig_types[28]
#define SWIGTYPE_p_CvEMParams swig_types[29]
#define SWIGTYPE_p_CvFileNode swig_types[30]
#define SWIGTYPE_p_CvFileStorage swig_types[31]
#define SWIGTYPE_p_CvFilter swig_types[32]
#define SWIGTYPE_p_CvFont swig_types[33]
#define SWIGTYPE_p_CvForestTree swig_types[34]
#define SWIGTYPE_p_CvGenericHash swig_types[35]
#define SWIGTYPE_p_CvGraph swig_types[36]
#define SWIGTYPE_p_CvGraphEdge swig_types[37]
#define SWIGTYPE_p_CvGraphScanner swig_types[38]
#define SWIGTYPE_p_CvGraphVtx swig_types[39]
#define SWIGTYPE_p_CvGraphVtx2D swig_types[40]
#define SWIGTYPE_p_CvHaarClassifier swig_types[41]
#define SWIGTYPE_p_CvHaarClassifierCascade swig_types[42]
#define SWIGTYPE_p_CvHaarFeature swig_types[43]
#define SWIGTYPE_p_CvHaarStageClassifier swig_types[44]
#define SWIGTYPE_p_CvHidHaarClassifierCascade swig_types[45]
#define SWIGTYPE_p_CvHistogram swig_types[46]
#define SWIGTYPE_p_CvHuMoments swig_types[47]
#define SWIGTYPE_p_CvKNearest swig_types[48]
#define SWIGTYPE_p_CvKalman swig_types[49]
#define SWIGTYPE_p_CvLineIterator swig_types[50]
#define SWIGTYPE_p_CvMat swig_types[51]
#define SWIGTYPE_p_CvMatND swig_types[52]
#define SWIGTYPE_p_CvMatrix3 swig_types[53]
#define SWIGTYPE_p_CvMemBlock swig_types[54]
#define SWIGTYPE_p_CvMemStorage swig_types[55]
#define SWIGTYPE_p_CvMemStoragePos swig_types[56]
#define SWIGTYPE_p_CvModuleInfo swig_types[57]
#define SWIGTYPE_p_CvMoments swig_types[58]
#define SWIGTYPE_p_CvNArrayIterator swig_types[59]
#define SWIGTYPE_p_CvNextEdgeType swig_types[60]
#define SWIGTYPE_p_CvNormalBayesClassifier swig_types[61]
#define SWIGTYPE_p_CvPOSITObject swig_types[62]
#define SWIGTYPE_p_CvPair32s32f swig_types[63]
#define SWIGTYPE_p_CvParamGrid swig_types[64]
#define SWIGTYPE_p_CvPluginFuncInfo swig_types[65]
#define SWIGTYPE_p_CvPoint swig_types[66]
#define SWIGTYPE_p_CvPoint2D32f swig_types[67]
#define SWIGTYPE_p_CvPoint2D64f swig_types[68]
#define SWIGTYPE_p_CvPoint3D32f swig_types[69]
#define SWIGTYPE_p_CvPoint3D64f swig_types[70]
#define SWIGTYPE_p_CvQuadEdge2D swig_types[71]
#define SWIGTYPE_p_CvRNG_Wrapper swig_types[72]
#define SWIGTYPE_p_CvRTParams swig_types[73]
#define SWIGTYPE_p_CvRTrees swig_types[74]
#define SWIGTYPE_p_CvRect swig_types[75]
#define SWIGTYPE_p_CvSURFParams swig_types[76]
#define SWIGTYPE_p_CvSURFPoint swig_types[77]
#define SWIGTYPE_p_CvSVM swig_types[78]
#define SWIGTYPE_p_CvSVMDecisionFunc swig_types[79]
#define SWIGTYPE_p_CvSVMKernel swig_types[80]
#define SWIGTYPE_p_CvSVMKernelRow swig_types[81]
#define SWIGTYPE_p_CvSVMParams swig_types[82]
#define SWIGTYPE_p_CvSVMSolutionInfo swig_types[83]
#define SWIGTYPE_p_CvSVMSolver swig_types[84]
#define SWIGTYPE_p_CvScalar swig_types[85]
#define SWIGTYPE_p_CvSeq swig_types[86]
#define SWIGTYPE_p_CvSeqBlock swig_types[87]
#define SWIGTYPE_p_CvSeqReader swig_types[88]
#define SWIGTYPE_p_CvSeqWriter swig_types[89]
#define SWIGTYPE_p_CvSet swig_types[90]
#define SWIGTYPE_p_CvSetElem swig_types[91]
#define SWIGTYPE_p_CvSize swig_types[92]
#define SWIGTYPE_p_CvSize2D32f swig_types[93]
#define SWIGTYPE_p_CvSlice swig_types[94]
#define SWIGTYPE_p_CvSparseMat swig_types[95]
#define SWIGTYPE_p_CvSparseMatIterator swig_types[96]
#define SWIGTYPE_p_CvSparseNode swig_types[97]
#define SWIGTYPE_p_CvStatModel swig_types[98]
#define SWIGTYPE_p_CvStereoBMState swig_types[99]
#define SWIGTYPE_p_CvStereoGCState swig_types[100]
#define SWIGTYPE_p_CvString swig_types[101]
#define SWIGTYPE_p_CvStringHashNode swig_types[102]
#define SWIGTYPE_p_CvSubdiv2D swig_types[103]
#define SWIGTYPE_p_CvSubdiv2DEdge_Wrapper swig_types[104]
#define SWIGTYPE_p_CvSubdiv2DPoint swig_types[105]
#define SWIGTYPE_p_CvSubdiv2DPointLocation swig_types[106]
#define SWIGTYPE_p_CvTermCriteria swig_types[107]
#define SWIGTYPE_p_CvTreeNodeIterator swig_types[108]
#define SWIGTYPE_p_CvTypeInfo swig_types[109]
#define SWIGTYPE_p_CvVectors swig_types[110]
#define SWIGTYPE_p_CvVectors_data swig_types[111]
#define SWIGTYPE_p_GetRow swig_types[112]
#define SWIGTYPE_p_SelectWorkingSet swig_types[113]
#define SWIGTYPE_p__IplConvKernel swig_types[114]
#define SWIGTYPE_p__IplConvKernelFP swig_types[115]
#define SWIGTYPE_p__IplImage swig_types[116]
#define SWIGTYPE_p__IplROI swig_types[117]
#define SWIGTYPE_p__IplTileInfo swig_types[118]
#define SWIGTYPE_p_bool swig_types[119]
#define SWIGTYPE_p_char swig_types[120]
#define SWIGTYPE_p_double swig_types[121]
#define SWIGTYPE_p_float swig_types[122]
#define SWIGTYPE_p_int swig_types[123]
#define SWIGTYPE_p_long_long swig_types[124]
#define SWIGTYPE_p_p_CvMat swig_types[125]
#define SWIGTYPE_p_p_double swig_types[126]
#define SWIGTYPE_p_p_float swig_types[127]
#define SWIGTYPE_p_p_unsigned_char swig_types[128]
#define SWIGTYPE_p_signed_char swig_types[129]
#define SWIGTYPE_p_size_t swig_types[130]
#define SWIGTYPE_p_unsigned_char swig_types[131]
#define SWIGTYPE_p_unsigned_long_long swig_types[132]
#define SWIGTYPE_p_unsigned_short swig_types[133]
#define SWIGTYPE_p_void swig_types[134]
static swig_type_info *swig_types[136];
static swig_module_info swig_module = {swig_types, 135, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _ml.so
  ------------------------------------------------*/
#define SWIG_init    init_ml

#define SWIG_name    "_ml"

#define SWIGVERSION 0x010336 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class PyObject_ptr {
  protected:
    PyObject *_obj;

  public:
    PyObject_ptr() :_obj(0)
    {
    }

    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    PyObject_ptr & operator=(const PyObject_ptr& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~PyObject_ptr() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct PyObject_var : PyObject_ptr {
    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }
    
    PyObject_var & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


  #include <ml.h>
	#include <cxtypes.h>
	#include <cv.h>
	#include <highgui.h>
	#include "pyhelpers.h"
	#include "pycvseq.hpp"



static CvArr * PyObject_to_CvArr(PyObject * obj, bool * freearg);
static CvArr * PySequence_to_CvArr( PyObject * obj );

// convert a python sequence/array/list object into a c-array
#define PyObject_AsArrayImpl(func, ctype, ptype)                              \
	int func(PyObject * obj, ctype * array, int len){                         \
	void * mat_vptr=NULL;                                                     \
	void * im_vptr=NULL;                                                      \
	if(PyNumber_Check(obj)){                                                  \
		memset( array, 0, sizeof(ctype)*len );                                \
		array[0] = PyObject_As##ptype( obj );                                 \
	}                                                                         \
	else if(PyList_Check(obj) || PyTuple_Check(obj)){                         \
		int seqsize = PySequence_Size(obj);                                   \
		for(int i=0; i<len && i<seqsize; i++){                                \
			if(i<seqsize){                                                    \
	            array[i] =  PyObject_As##ptype( PySequence_GetItem(obj, i) ); \
			}                                                                 \
			else{                                                             \
				array[i] = 0;                                                 \
			}                                                                 \
		}                                                                     \
	}                                                                         \
	else if( SWIG_ConvertPtr(obj, &mat_vptr, SWIGTYPE_p_CvMat, 0)!=-1 ||      \
	         SWIG_ConvertPtr(obj, &im_vptr, SWIGTYPE_p__IplImage, 0)!=-1)     \
	{                                                                         \
		CvMat * mat = (CvMat *) mat_vptr;                                     \
		CvMat stub;                                                           \
		if(im_vptr) mat = cvGetMat(im_vptr, &stub);                           \
		if( mat->rows!=1 && mat->cols!=1 ){                                   \
			PyErr_SetString( PyExc_TypeError,                                 \
			     "PyObject_As*Array: CvArr must be row or column vector" );   \
			return -1;                                                        \
		}                                                                     \
		if( mat->rows==1 && mat->cols==1 ){                                   \
			CvScalar val;                                                     \
			if( len!=CV_MAT_CN(mat->type) ){                                  \
				PyErr_SetString( PyExc_TypeError,                             \
				"PyObject_As*Array: CvArr channels != length" );              \
				return -1;                                                    \
			}                                                                 \
			val = cvGet1D(mat, 0);                                            \
			for(int i=0; i<len; i++){                                         \
				array[i] = (ctype) val.val[i];                                \
			}                                                                 \
		}                                                                     \
		else{                                                                 \
			mat = cvReshape(mat, &stub, -1, mat->rows*mat->cols);             \
			if( mat->rows != len ){                                           \
				PyErr_SetString( PyExc_TypeError,                             \
				 "PyObject_As*Array: CvArr rows or cols must equal length" ); \
				 return -1;                                                   \
			}                                                                 \
			for(int i=0; i<len; i++){                                         \
				CvScalar val = cvGet1D(mat, i);                               \
				array[i] = (ctype) val.val[0];                                \
			}                                                                 \
		}                                                                     \
	}                                                                         \
	else{                                                                     \
		PyErr_SetString( PyExc_TypeError,                                     \
				"PyObject_As*Array: Expected a number, sequence or CvArr" );  \
		return -1;                                                            \
	}                                                                         \
	return 0;                                                                 \
}

PyObject_AsArrayImpl( PyObject_AsFloatArray, float, Double );
PyObject_AsArrayImpl( PyObject_AsDoubleArray, double, Double );
PyObject_AsArrayImpl( PyObject_AsLongArray, int, Long );

static CvPoint PyObject_to_CvPoint(PyObject * obj){
	CvPoint val;
	CvPoint *ptr;
	CvPoint2D32f * ptr2D32f;
	CvScalar * scalar;

	if( SWIG_ConvertPtr(obj, (void**)&ptr, SWIGTYPE_p_CvPoint, 0) != -1) {
		return *ptr;
	}
	if( SWIG_ConvertPtr(obj, (void**)&ptr2D32f, SWIGTYPE_p_CvPoint2D32f, 0) != -1) {
		return cvPointFrom32f( *ptr2D32f );
	}
	if( SWIG_ConvertPtr(obj, (void**)&scalar, SWIGTYPE_p_CvScalar, 0) != -1) {
		return cvPointFrom32f(cvPoint2D32f( scalar->val[0], scalar->val[1] ));
	}
	if(PyObject_AsLongArray(obj, (int *) &val, 2) != -1){
		return val;
	}

	PyErr_SetString( PyExc_TypeError, "could not convert to CvPoint");
	return cvPoint(0,0);
}

static CvPoint2D32f PyObject_to_CvPoint2D32f(PyObject * obj){
    CvPoint2D32f val;
    CvPoint2D32f *ptr2D32f;
	CvPoint *ptr;
	CvScalar * scalar;
    if( SWIG_ConvertPtr(obj, (void**)&ptr2D32f, SWIGTYPE_p_CvPoint2D32f, 0) != -1) {
		return *ptr2D32f;
	}
	if( SWIG_ConvertPtr(obj, (void**)&ptr, SWIGTYPE_p_CvPoint, 0) != -1) {
		return cvPointTo32f(*ptr);
	}
	if( SWIG_ConvertPtr(obj, (void**)&scalar, SWIGTYPE_p_CvScalar, 0) != -1) {
		return cvPoint2D32f( scalar->val[0], scalar->val[1] );
	}
	if(PyObject_AsFloatArray(obj, (float *) &val, 2) != -1){
		return val;
	}
	PyErr_SetString(PyExc_TypeError, "could not convert to CvPoint2D32f");
	return cvPoint2D32f(0,0);
}

/* Check if this object can be interpreted as a CvScalar */
static bool CvScalar_Check(PyObject * obj){
	void * vptr;
    CvScalar val;
	return SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvScalar,     0 ) != -1 ||
	       SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvPoint2D32f, 0 ) != -1 ||
           SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvPoint,      0 ) != -1 ||
	       PyObject_AsDoubleArray(obj, val.val, 4) !=-1;
}

static CvScalar PyObject_to_CvScalar(PyObject * obj){
	CvScalar val;
	CvScalar * ptr;
    CvPoint2D32f *ptr2D32f;
	CvPoint *pt_ptr;
	void * vptr;
	if( SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvScalar, 0 ) != -1)
	{
		ptr = (CvScalar *) vptr;
		return *ptr;
	}
	if( SWIG_ConvertPtr(obj, (void**)&ptr2D32f, SWIGTYPE_p_CvPoint2D32f, 0) != -1) {
        return cvScalar(ptr2D32f->x, ptr2D32f->y);
    }
    if( SWIG_ConvertPtr(obj, (void**)&pt_ptr, SWIGTYPE_p_CvPoint, 0) != -1) {
        return cvScalar(pt_ptr->x, pt_ptr->y);
    }
	if(PyObject_AsDoubleArray(obj, val.val, 4)!=-1){
		return val;
	}
	return cvScalar(-1,-1,-1,-1); 
}

/* if python sequence type, convert to CvMat or CvMatND */
static CvArr * PyObject_to_CvArr(PyObject * obj, bool * freearg){
	CvArr * cvarr;
	*freearg = false;

	// check if OpenCV type
	if( PySwigObject_Check(obj) ){
		SWIG_ConvertPtr(obj, &cvarr, 0, SWIG_POINTER_EXCEPTION);
	}
	else if(PyList_Check(obj) || PyTuple_Check(obj)){
		cvarr = PySequence_to_CvArr( obj );
		*freearg = (cvarr != NULL);
	}
	else if(PyLong_Check(obj) && PyLong_AsLong(obj)==0){
		return NULL;
	}
	else {
		SWIG_ConvertPtr(obj, (void**)&cvarr, 0, SWIG_POINTER_EXCEPTION);
	}
	return cvarr;
}

static int PyObject_GetElemType(PyObject * obj){
	void *vptr;
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvPoint, 0) != -1) return CV_32SC2;	
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvSize, 0) != -1) return CV_32SC2;	
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvRect, 0) != -1) return CV_32SC4;	
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvSize2D32f, 0) != -1) return CV_32FC2;	
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvPoint2D32f, 0) != -1) return CV_32FC2;	
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvPoint3D32f, 0) != -1) return CV_32FC3;	
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvPoint2D64f, 0) != -1) return CV_64FC2;	
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvPoint3D64f, 0) != -1) return CV_64FC3;	
	if(SWIG_ConvertPtr(obj, &vptr, SWIGTYPE_p_CvScalar, 0) != -1) return CV_64FC4;	
	if(PyTuple_Check(obj) || PyList_Check(obj)) return CV_MAKE_TYPE(CV_32F, PySequence_Size( obj ));
	if(PyLong_Check(obj)) return CV_32S;
	return CV_32F;
}

// Would like this to convert Python lists to CvMat
// Also lists of CvPoints, CvScalars, CvMats? etc
static CvArr * PySequence_to_CvArr( PyObject * obj ){
	int dims[CV_MAX_DIM] = {1,1,1};
	int ndim=0;
	int cvtype;
	PyObject * item;
	
	// figure out dimensions
	for(item = obj; 
		(PyTuple_Check(item) || PyList_Check(item));
		item = PySequence_GetItem(item, 0))
	{
		dims[ndim] = PySequence_Size( item ); 
		ndim++;
	}

	
	if(ndim==0){
		PyErr_SetString(PyExc_TypeError, "Cannot convert an empty python object to a CvArr");
		return NULL;
	}
	
	cvtype = PyObject_GetElemType(item);
	// collapse last dim into NCH if we found a single channel, but the last dim is <=3
	if(CV_MAT_CN(cvtype)==1 && dims[ndim-1]>1 && dims[ndim-1]<4){
		cvtype=CV_MAKE_TYPE(cvtype, dims[ndim-1]);
		dims[ndim-1]=1;	
		ndim--;
	}
	
	if(cvtype==-1){
		PyErr_SetString(PyExc_TypeError, "Could not determine OpenCV element type of Python sequence");
		return NULL;
	}
	
	// CvMat
	if(ndim<=2){
		CvMat *m = cvCreateMat(dims[0], dims[1], cvtype);
		for(int i=0; i<dims[0]; i++){
			PyObject * rowobj = PySequence_GetItem(obj, i);
			if( dims[1] > 1 ){
				// double check size
				assert((PyTuple_Check(rowobj) || PyList_Check(rowobj)) && 
						PySequence_Size(rowobj) == dims[1]);

				for(int j=0; j<dims[1]; j++){
					PyObject * colobj = PySequence_GetItem(rowobj, j);
					cvSet2D( m, i, j, PyObject_to_CvScalar( colobj ) );
				}
			}
			else{
				cvSet1D(m, i, PyObject_to_CvScalar( rowobj ) );
			}
		}
		return (CvArr *) m;
	}

	// CvMatND
	PyErr_SetString(PyExc_TypeError, "Cannot convert Python Object to CvArr -- ndim > 3");
	return NULL;
	
}


// Wrapper class
class CvRNG_Wrapper {
private:
	CvRNG m_val;
public:
	CvRNG_Wrapper( const CvRNG & val ) :
		m_val(val)
	{
	}
	CvRNG * ptr() { return &m_val; }
	CvRNG & ref() { return m_val; }
	bool operator==(const CvRNG_Wrapper & x){
		return m_val==x.m_val;
	}
	bool operator!=(const CvRNG_Wrapper & x){
		return m_val!=x.m_val;
	}
};


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


// Wrapper class
class CvSubdiv2DEdge_Wrapper {
private:
	CvSubdiv2DEdge m_val;
public:
	CvSubdiv2DEdge_Wrapper( const CvSubdiv2DEdge & val ) :
		m_val(val)
	{
	}
	CvSubdiv2DEdge * ptr() { return &m_val; }
	CvSubdiv2DEdge & ref() { return m_val; }
	bool operator==(const CvSubdiv2DEdge_Wrapper & x){
		return m_val==x.m_val;
	}
	bool operator!=(const CvSubdiv2DEdge_Wrapper & x){
		return m_val!=x.m_val;
	}
};


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


typedef union {
        uchar** ptr;
        float** fl;
        double** db;
    } CvVectors_data;



SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
  if (PyString_Check(obj)) {
    char *cstr; Py_ssize_t len;
    PyString_AsStringAndSize(obj, &cstr, &len);
    if (cptr)  {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
	*cptr = PyString_AsString(obj);
      }
    }
    if (psize) *psize = len + 1;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}

SWIGINTERN PyObject *CvEM_get_covs(CvEM *self){
       CvMat ** pointers = const_cast<CvMat **> (self->get_covs());
       int n = self->get_nclusters();

       PyObject * result = PyTuple_New(n);
       for (int i=0; i<n; ++i)
       {
           PyObject * obj = SWIG_NewPointerObj(pointers[i], SWIGTYPE_p_CvMat, 0);
           PyTuple_SetItem(result, i, obj);
           //Py_DECREF(obj);
       }
       
       return result;
   }

SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_new_CvRNG_Wrapper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRNG *arg1 = 0 ;
  CvRNG temp1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CvRNG_Wrapper *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CvRNG_Wrapper",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvRNG_Wrapper" "', argument " "1"" of type '" "CvRNG""'");
  } 
  temp1 = static_cast< CvRNG >(val1);
  arg1 = &temp1;
  result = (CvRNG_Wrapper *)new CvRNG_Wrapper((CvRNG const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvRNG_Wrapper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRNG_Wrapper_ptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRNG_Wrapper *arg1 = (CvRNG_Wrapper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvRNG *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRNG_Wrapper_ptr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRNG_Wrapper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRNG_Wrapper_ptr" "', argument " "1"" of type '" "CvRNG_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvRNG_Wrapper * >(argp1);
  result = (CvRNG *)(arg1)->ptr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRNG_Wrapper_ref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRNG_Wrapper *arg1 = (CvRNG_Wrapper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvRNG *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRNG_Wrapper_ref",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRNG_Wrapper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRNG_Wrapper_ref" "', argument " "1"" of type '" "CvRNG_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvRNG_Wrapper * >(argp1);
  {
    CvRNG &_result_ref = (arg1)->ref();
    result = (CvRNG *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRNG_Wrapper___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRNG_Wrapper *arg1 = (CvRNG_Wrapper *) 0 ;
  CvRNG_Wrapper *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvRNG_Wrapper___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRNG_Wrapper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRNG_Wrapper___eq__" "', argument " "1"" of type '" "CvRNG_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvRNG_Wrapper * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CvRNG_Wrapper,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRNG_Wrapper___eq__" "', argument " "2"" of type '" "CvRNG_Wrapper const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvRNG_Wrapper___eq__" "', argument " "2"" of type '" "CvRNG_Wrapper const &""'"); 
  }
  arg2 = reinterpret_cast< CvRNG_Wrapper * >(argp2);
  result = (bool)(arg1)->operator ==((CvRNG_Wrapper const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRNG_Wrapper___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRNG_Wrapper *arg1 = (CvRNG_Wrapper *) 0 ;
  CvRNG_Wrapper *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvRNG_Wrapper___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRNG_Wrapper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRNG_Wrapper___ne__" "', argument " "1"" of type '" "CvRNG_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvRNG_Wrapper * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CvRNG_Wrapper,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRNG_Wrapper___ne__" "', argument " "2"" of type '" "CvRNG_Wrapper const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvRNG_Wrapper___ne__" "', argument " "2"" of type '" "CvRNG_Wrapper const &""'"); 
  }
  arg2 = reinterpret_cast< CvRNG_Wrapper * >(argp2);
  result = (bool)(arg1)->operator !=((CvRNG_Wrapper const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvRNG_Wrapper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRNG_Wrapper *arg1 = (CvRNG_Wrapper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvRNG_Wrapper",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRNG_Wrapper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvRNG_Wrapper" "', argument " "1"" of type '" "CvRNG_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvRNG_Wrapper * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvRNG_Wrapper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvRNG_Wrapper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvSubdiv2DEdge_Wrapper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSubdiv2DEdge *arg1 = 0 ;
  CvSubdiv2DEdge temp1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSubdiv2DEdge_Wrapper *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CvSubdiv2DEdge_Wrapper",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvSubdiv2DEdge_Wrapper" "', argument " "1"" of type '" "CvSubdiv2DEdge""'");
  } 
  temp1 = static_cast< CvSubdiv2DEdge >(val1);
  arg1 = &temp1;
  result = (CvSubdiv2DEdge_Wrapper *)new CvSubdiv2DEdge_Wrapper((CvSubdiv2DEdge const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSubdiv2DEdge_Wrapper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSubdiv2DEdge_Wrapper_ptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSubdiv2DEdge_Wrapper *arg1 = (CvSubdiv2DEdge_Wrapper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSubdiv2DEdge *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSubdiv2DEdge_Wrapper_ptr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSubdiv2DEdge_Wrapper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSubdiv2DEdge_Wrapper_ptr" "', argument " "1"" of type '" "CvSubdiv2DEdge_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvSubdiv2DEdge_Wrapper * >(argp1);
  result = (CvSubdiv2DEdge *)(arg1)->ptr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_size_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSubdiv2DEdge_Wrapper_ref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSubdiv2DEdge_Wrapper *arg1 = (CvSubdiv2DEdge_Wrapper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSubdiv2DEdge *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSubdiv2DEdge_Wrapper_ref",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSubdiv2DEdge_Wrapper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSubdiv2DEdge_Wrapper_ref" "', argument " "1"" of type '" "CvSubdiv2DEdge_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvSubdiv2DEdge_Wrapper * >(argp1);
  {
    CvSubdiv2DEdge &_result_ref = (arg1)->ref();
    result = (CvSubdiv2DEdge *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_size_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSubdiv2DEdge_Wrapper___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSubdiv2DEdge_Wrapper *arg1 = (CvSubdiv2DEdge_Wrapper *) 0 ;
  CvSubdiv2DEdge_Wrapper *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSubdiv2DEdge_Wrapper___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSubdiv2DEdge_Wrapper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSubdiv2DEdge_Wrapper___eq__" "', argument " "1"" of type '" "CvSubdiv2DEdge_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvSubdiv2DEdge_Wrapper * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CvSubdiv2DEdge_Wrapper,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSubdiv2DEdge_Wrapper___eq__" "', argument " "2"" of type '" "CvSubdiv2DEdge_Wrapper const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSubdiv2DEdge_Wrapper___eq__" "', argument " "2"" of type '" "CvSubdiv2DEdge_Wrapper const &""'"); 
  }
  arg2 = reinterpret_cast< CvSubdiv2DEdge_Wrapper * >(argp2);
  result = (bool)(arg1)->operator ==((CvSubdiv2DEdge_Wrapper const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSubdiv2DEdge_Wrapper___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSubdiv2DEdge_Wrapper *arg1 = (CvSubdiv2DEdge_Wrapper *) 0 ;
  CvSubdiv2DEdge_Wrapper *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSubdiv2DEdge_Wrapper___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSubdiv2DEdge_Wrapper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSubdiv2DEdge_Wrapper___ne__" "', argument " "1"" of type '" "CvSubdiv2DEdge_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvSubdiv2DEdge_Wrapper * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CvSubdiv2DEdge_Wrapper,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSubdiv2DEdge_Wrapper___ne__" "', argument " "2"" of type '" "CvSubdiv2DEdge_Wrapper const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSubdiv2DEdge_Wrapper___ne__" "', argument " "2"" of type '" "CvSubdiv2DEdge_Wrapper const &""'"); 
  }
  arg2 = reinterpret_cast< CvSubdiv2DEdge_Wrapper * >(argp2);
  result = (bool)(arg1)->operator !=((CvSubdiv2DEdge_Wrapper const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvSubdiv2DEdge_Wrapper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSubdiv2DEdge_Wrapper *arg1 = (CvSubdiv2DEdge_Wrapper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvSubdiv2DEdge_Wrapper",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSubdiv2DEdge_Wrapper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvSubdiv2DEdge_Wrapper" "', argument " "1"" of type '" "CvSubdiv2DEdge_Wrapper *""'"); 
  }
  arg1 = reinterpret_cast< CvSubdiv2DEdge_Wrapper * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvSubdiv2DEdge_Wrapper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvSubdiv2DEdge_Wrapper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvVectors_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvVectors_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_type_set" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvVectors_type_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvVectors_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_type_get" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  result = (int) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_dims_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvVectors_dims_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_dims_set" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvVectors_dims_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->dims = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_dims_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvVectors_dims_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_dims_get" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  result = (int) ((arg1)->dims);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvVectors_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_count_set" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvVectors_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvVectors_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_count_get" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  result = (int) ((arg1)->count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_next_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  CvVectors *arg2 = (CvVectors *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvVectors_next_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_next_set" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvVectors, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvVectors_next_set" "', argument " "2"" of type '" "CvVectors *""'"); 
  }
  arg2 = reinterpret_cast< CvVectors * >(argp2);
  if (arg1) (arg1)->next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_next_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvVectors *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvVectors_next_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_next_get" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  result = (CvVectors *) ((arg1)->next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvVectors, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_data_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvVectors_data *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvVectors_data_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_data_get" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  result = (CvVectors_data *)& ((arg1)->data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvVectors_data, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvVectors")) SWIG_fail;
  {
    try {
      result = (CvVectors *)new CvVectors(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvVectors, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors *arg1 = (CvVectors *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvVectors",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvVectors" "', argument " "1"" of type '" "CvVectors *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvVectors_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvVectors, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvVectors_data_ptr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors_data *arg1 = (CvVectors_data *) 0 ;
  uchar **arg2 = (uchar **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvVectors_data_ptr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_data_ptr_set" "', argument " "1"" of type '" "CvVectors_data *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvVectors_data_ptr_set" "', argument " "2"" of type '" "uchar **""'"); 
  }
  arg2 = reinterpret_cast< uchar ** >(argp2);
  if (arg1) (arg1)->ptr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_data_ptr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors_data *arg1 = (CvVectors_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uchar **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvVectors_data_ptr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_data_ptr_get" "', argument " "1"" of type '" "CvVectors_data *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors_data * >(argp1);
  result = (uchar **) ((arg1)->ptr);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_data_fl_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors_data *arg1 = (CvVectors_data *) 0 ;
  float **arg2 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *vptr2 ;
  float *buffer2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvVectors_data_fl_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_data_fl_set" "', argument " "1"" of type '" "CvVectors_data *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors_data * >(argp1);
  {
    if ((SWIG_ConvertPtr(obj1, &vptr2, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer2 = (float *) vptr2;
    arg2=&buffer2;
  }
  if (arg1) (arg1)->fl = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_data_fl_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors_data *arg1 = (CvVectors_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvVectors_data_fl_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_data_fl_get" "', argument " "1"" of type '" "CvVectors_data *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors_data * >(argp1);
  result = (float **) ((arg1)->fl);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_data_db_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors_data *arg1 = (CvVectors_data *) 0 ;
  double **arg2 = (double **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvVectors_data_db_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_data_db_set" "', argument " "1"" of type '" "CvVectors_data *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvVectors_data_db_set" "', argument " "2"" of type '" "double **""'"); 
  }
  arg2 = reinterpret_cast< double ** >(argp2);
  if (arg1) (arg1)->db = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvVectors_data_db_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors_data *arg1 = (CvVectors_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvVectors_data_db_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvVectors_data_db_get" "', argument " "1"" of type '" "CvVectors_data *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors_data * >(argp1);
  result = (double **) ((arg1)->db);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvVectors_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors_data *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvVectors_data")) SWIG_fail;
  {
    try {
      result = (CvVectors_data *)new CvVectors_data(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvVectors_data, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvVectors_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvVectors_data *arg1 = (CvVectors_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvVectors_data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvVectors_data, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvVectors_data" "', argument " "1"" of type '" "CvVectors_data *""'"); 
  }
  arg1 = reinterpret_cast< CvVectors_data * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvVectors_data_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvVectors_data, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvStatModel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvStatModel")) SWIG_fail;
  {
    try {
      result = (CvStatModel *)new CvStatModel(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvStatModel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvStatModel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *arg1 = (CvStatModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvStatModel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvStatModel, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvStatModel" "', argument " "1"" of type '" "CvStatModel *""'"); 
  }
  arg1 = reinterpret_cast< CvStatModel * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *arg1 = (CvStatModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvStatModel_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvStatModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvStatModel_clear" "', argument " "1"" of type '" "CvStatModel *""'"); 
  }
  arg1 = reinterpret_cast< CvStatModel * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_save__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *arg1 = (CvStatModel *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvStatModel_save",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvStatModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvStatModel_save" "', argument " "1"" of type '" "CvStatModel *""'"); 
  }
  arg1 = reinterpret_cast< CvStatModel * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvStatModel_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvStatModel_save" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->save((char const *)arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_save__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *arg1 = (CvStatModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvStatModel_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvStatModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvStatModel_save" "', argument " "1"" of type '" "CvStatModel *""'"); 
  }
  arg1 = reinterpret_cast< CvStatModel * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvStatModel_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_save(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvStatModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvStatModel_save__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvStatModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvStatModel_save__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvStatModel_save'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    save(CvStatModel *,char const *,char const *)\n"
    "    save(CvStatModel *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_load__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *arg1 = (CvStatModel *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvStatModel_load",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvStatModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvStatModel_load" "', argument " "1"" of type '" "CvStatModel *""'"); 
  }
  arg1 = reinterpret_cast< CvStatModel * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvStatModel_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvStatModel_load" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->load((char const *)arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_load__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *arg1 = (CvStatModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvStatModel_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvStatModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvStatModel_load" "', argument " "1"" of type '" "CvStatModel *""'"); 
  }
  arg1 = reinterpret_cast< CvStatModel * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvStatModel_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_load(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvStatModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvStatModel_load__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvStatModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvStatModel_load__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvStatModel_load'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    load(CvStatModel *,char const *,char const *)\n"
    "    load(CvStatModel *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *arg1 = (CvStatModel *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvStatModel_write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvStatModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvStatModel_write" "', argument " "1"" of type '" "CvStatModel *""'"); 
  }
  arg1 = reinterpret_cast< CvStatModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvStatModel_write" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvStatModel_write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->write(arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvStatModel_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvStatModel *arg1 = (CvStatModel *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvStatModel_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvStatModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvStatModel_read" "', argument " "1"" of type '" "CvStatModel *""'"); 
  }
  arg1 = reinterpret_cast< CvStatModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvStatModel_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvStatModel_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvStatModel_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvStatModel, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvParamGrid__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvParamGrid")) SWIG_fail;
  {
    try {
      result = (CvParamGrid *)new CvParamGrid(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvParamGrid, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvParamGrid__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvParamGrid *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvParamGrid",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvParamGrid" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvParamGrid" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvParamGrid" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (CvParamGrid *)new CvParamGrid(arg1,arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvParamGrid, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvParamGrid(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvParamGrid__SWIG_0(self, args);
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CvParamGrid__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvParamGrid'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvParamGrid()\n"
    "    CvParamGrid(double,double,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvParamGrid_check(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *arg1 = (CvParamGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvParamGrid_check",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvParamGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvParamGrid_check" "', argument " "1"" of type '" "CvParamGrid const *""'"); 
  }
  arg1 = reinterpret_cast< CvParamGrid * >(argp1);
  {
    try {
      result = (bool)((CvParamGrid const *)arg1)->check(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvParamGrid_min_val_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *arg1 = (CvParamGrid *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvParamGrid_min_val_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvParamGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvParamGrid_min_val_set" "', argument " "1"" of type '" "CvParamGrid *""'"); 
  }
  arg1 = reinterpret_cast< CvParamGrid * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvParamGrid_min_val_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->min_val = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvParamGrid_min_val_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *arg1 = (CvParamGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvParamGrid_min_val_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvParamGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvParamGrid_min_val_get" "', argument " "1"" of type '" "CvParamGrid *""'"); 
  }
  arg1 = reinterpret_cast< CvParamGrid * >(argp1);
  result = (double) ((arg1)->min_val);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvParamGrid_max_val_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *arg1 = (CvParamGrid *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvParamGrid_max_val_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvParamGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvParamGrid_max_val_set" "', argument " "1"" of type '" "CvParamGrid *""'"); 
  }
  arg1 = reinterpret_cast< CvParamGrid * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvParamGrid_max_val_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->max_val = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvParamGrid_max_val_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *arg1 = (CvParamGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvParamGrid_max_val_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvParamGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvParamGrid_max_val_get" "', argument " "1"" of type '" "CvParamGrid *""'"); 
  }
  arg1 = reinterpret_cast< CvParamGrid * >(argp1);
  result = (double) ((arg1)->max_val);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvParamGrid_step_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *arg1 = (CvParamGrid *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvParamGrid_step_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvParamGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvParamGrid_step_set" "', argument " "1"" of type '" "CvParamGrid *""'"); 
  }
  arg1 = reinterpret_cast< CvParamGrid * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvParamGrid_step_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->step = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvParamGrid_step_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *arg1 = (CvParamGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvParamGrid_step_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvParamGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvParamGrid_step_get" "', argument " "1"" of type '" "CvParamGrid *""'"); 
  }
  arg1 = reinterpret_cast< CvParamGrid * >(argp1);
  result = (double) ((arg1)->step);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvParamGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvParamGrid *arg1 = (CvParamGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvParamGrid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvParamGrid, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvParamGrid" "', argument " "1"" of type '" "CvParamGrid *""'"); 
  }
  arg1 = reinterpret_cast< CvParamGrid * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvParamGrid_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvParamGrid, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvNormalBayesClassifier__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvNormalBayesClassifier")) SWIG_fail;
  {
    try {
      result = (CvNormalBayesClassifier *)new CvNormalBayesClassifier(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvNormalBayesClassifier, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvNormalBayesClassifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvNormalBayesClassifier",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvNormalBayesClassifier" "', argument " "1"" of type '" "CvNormalBayesClassifier *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvNormalBayesClassifier__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvNormalBayesClassifier *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvNormalBayesClassifier",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvNormalBayesClassifier" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvNormalBayesClassifier" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvNormalBayesClassifier" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvNormalBayesClassifier" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (CvNormalBayesClassifier *)new CvNormalBayesClassifier((CvMat const *)arg1,(CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvNormalBayesClassifier, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvNormalBayesClassifier__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvNormalBayesClassifier *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvNormalBayesClassifier",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvNormalBayesClassifier" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvNormalBayesClassifier" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvNormalBayesClassifier" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (CvNormalBayesClassifier *)new CvNormalBayesClassifier((CvMat const *)arg1,(CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvNormalBayesClassifier, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvNormalBayesClassifier__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvNormalBayesClassifier *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CvNormalBayesClassifier",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvNormalBayesClassifier" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvNormalBayesClassifier" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (CvNormalBayesClassifier *)new CvNormalBayesClassifier((CvMat const *)arg1,(CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvNormalBayesClassifier, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvNormalBayesClassifier(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvNormalBayesClassifier__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CvNormalBayesClassifier__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CvNormalBayesClassifier__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_CvNormalBayesClassifier__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvNormalBayesClassifier'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvNormalBayesClassifier()\n"
    "    CvNormalBayesClassifier(CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvNormalBayesClassifier(CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvNormalBayesClassifier(CvMat const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvNormalBayesClassifier_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_train" "', argument " "1"" of type '" "CvNormalBayesClassifier *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvNormalBayesClassifier_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvNormalBayesClassifier_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvNormalBayesClassifier_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvNormalBayesClassifier_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CvNormalBayesClassifier_train" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvNormalBayesClassifier_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_train" "', argument " "1"" of type '" "CvNormalBayesClassifier *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvNormalBayesClassifier_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvNormalBayesClassifier_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvNormalBayesClassifier_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvNormalBayesClassifier_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvNormalBayesClassifier_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_train" "', argument " "1"" of type '" "CvNormalBayesClassifier *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvNormalBayesClassifier_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvNormalBayesClassifier_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvNormalBayesClassifier_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvNormalBayesClassifier_train",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_train" "', argument " "1"" of type '" "CvNormalBayesClassifier *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvNormalBayesClassifier_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvNormalBayesClassifier_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvNormalBayesClassifier, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvNormalBayesClassifier_train__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvNormalBayesClassifier, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvNormalBayesClassifier_train__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvNormalBayesClassifier, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvNormalBayesClassifier_train__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvNormalBayesClassifier, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_CvNormalBayesClassifier_train__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvNormalBayesClassifier_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvNormalBayesClassifier *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,bool)\n"
    "    train(CvNormalBayesClassifier *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvNormalBayesClassifier *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvNormalBayesClassifier *,CvMat const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_predict__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvNormalBayesClassifier_predict",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_predict" "', argument " "1"" of type '" "CvNormalBayesClassifier const *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvNormalBayesClassifier_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvNormalBayesClassifier_predict" "', argument " "3"" of type '" "CvMat *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (float)((CvNormalBayesClassifier const *)arg1)->predict((CvMat const *)arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_predict__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvNormalBayesClassifier_predict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_predict" "', argument " "1"" of type '" "CvNormalBayesClassifier const *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvNormalBayesClassifier_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (float)((CvNormalBayesClassifier const *)arg1)->predict((CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_predict(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvNormalBayesClassifier, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvNormalBayesClassifier_predict__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvNormalBayesClassifier, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvNormalBayesClassifier_predict__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvNormalBayesClassifier_predict'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    predict(CvNormalBayesClassifier const *,CvMat const *,CvMat *)\n"
    "    predict(CvNormalBayesClassifier const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvNormalBayesClassifier_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_clear" "', argument " "1"" of type '" "CvNormalBayesClassifier *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvNormalBayesClassifier_write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_write" "', argument " "1"" of type '" "CvNormalBayesClassifier *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvNormalBayesClassifier_write" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvNormalBayesClassifier_write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->write(arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvNormalBayesClassifier_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvNormalBayesClassifier *arg1 = (CvNormalBayesClassifier *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvNormalBayesClassifier_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvNormalBayesClassifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvNormalBayesClassifier_read" "', argument " "1"" of type '" "CvNormalBayesClassifier *""'"); 
  }
  arg1 = reinterpret_cast< CvNormalBayesClassifier * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvNormalBayesClassifier_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvNormalBayesClassifier_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvNormalBayesClassifier_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvNormalBayesClassifier, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvKNearest__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvKNearest")) SWIG_fail;
  {
    try {
      result = (CvKNearest *)new CvKNearest(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvKNearest, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvKNearest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvKNearest",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvKNearest" "', argument " "1"" of type '" "CvKNearest *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvKNearest__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  bool arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CvKNearest *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CvKNearest",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvKNearest" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvKNearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvKNearest" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CvKNearest" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CvKNearest" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (CvKNearest *)new CvKNearest((CvMat const *)arg1,(CvMat const *)arg2,(CvMat const *)arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvKNearest, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvKNearest__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvKNearest *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvKNearest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvKNearest" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvKNearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvKNearest" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CvKNearest" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = (CvKNearest *)new CvKNearest((CvMat const *)arg1,(CvMat const *)arg2,(CvMat const *)arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvKNearest, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvKNearest__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvKNearest *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvKNearest",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvKNearest" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvKNearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvKNearest" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (CvKNearest *)new CvKNearest((CvMat const *)arg1,(CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvKNearest, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvKNearest__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvKNearest *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CvKNearest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvKNearest" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvKNearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (CvKNearest *)new CvKNearest((CvMat const *)arg1,(CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvKNearest, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvKNearest(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvKNearest__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CvKNearest__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CvKNearest__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_CvKNearest__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_CvKNearest__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvKNearest'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvKNearest()\n"
    "    CvKNearest(CvMat const *,CvMat const *,CvMat const *,bool,int)\n"
    "    CvKNearest(CvMat const *,CvMat const *,CvMat const *,bool)\n"
    "    CvKNearest(CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvKNearest(CvMat const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  bool arg5 ;
  int arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvKNearest_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_train" "', argument " "1"" of type '" "CvKNearest *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvKNearest_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvKNearest_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvKNearest_train" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CvKNearest_train" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvKNearest_train" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,arg5,arg6,arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  bool arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvKNearest_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_train" "', argument " "1"" of type '" "CvKNearest *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvKNearest_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvKNearest_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvKNearest_train" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CvKNearest_train" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvKNearest_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_train" "', argument " "1"" of type '" "CvKNearest *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvKNearest_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvKNearest_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvKNearest_train" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvKNearest_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_train" "', argument " "1"" of type '" "CvKNearest *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvKNearest_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvKNearest_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_train__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvKNearest_train",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_train" "', argument " "1"" of type '" "CvKNearest *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvKNearest_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 7); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvKNearest_train__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvKNearest_train__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CvKNearest_train__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_CvKNearest_train__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_CvKNearest_train__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvKNearest_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvKNearest *,CvMat const *,CvMat const *,CvMat const *,bool,int,bool)\n"
    "    train(CvKNearest *,CvMat const *,CvMat const *,CvMat const *,bool,int)\n"
    "    train(CvKNearest *,CvMat const *,CvMat const *,CvMat const *,bool)\n"
    "    train(CvKNearest *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvKNearest *,CvMat const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_find_nearest__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  float **arg5 = (float **) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *vptr5 ;
  float *buffer5 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvKNearest_find_nearest",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_find_nearest" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_find_nearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvKNearest_find_nearest" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvKNearest_find_nearest" "', argument " "4"" of type '" "CvMat *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    if ((SWIG_ConvertPtr(obj4, &vptr5, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer5 = (float *) vptr5;
    arg5=&buffer5;
  }
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvKNearest_find_nearest" "', argument " "6"" of type '" "CvMat *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvKNearest_find_nearest" "', argument " "7"" of type '" "CvMat *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (float)((CvKNearest const *)arg1)->find_nearest((CvMat const *)arg2,arg3,arg4,(float const **)arg5,arg6,arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_find_nearest__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  float **arg5 = (float **) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *vptr5 ;
  float *buffer5 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvKNearest_find_nearest",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_find_nearest" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_find_nearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvKNearest_find_nearest" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvKNearest_find_nearest" "', argument " "4"" of type '" "CvMat *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    if ((SWIG_ConvertPtr(obj4, &vptr5, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer5 = (float *) vptr5;
    arg5=&buffer5;
  }
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvKNearest_find_nearest" "', argument " "6"" of type '" "CvMat *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (float)((CvKNearest const *)arg1)->find_nearest((CvMat const *)arg2,arg3,arg4,(float const **)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_find_nearest__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  float **arg5 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *vptr5 ;
  float *buffer5 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvKNearest_find_nearest",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_find_nearest" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_find_nearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvKNearest_find_nearest" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvKNearest_find_nearest" "', argument " "4"" of type '" "CvMat *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    if ((SWIG_ConvertPtr(obj4, &vptr5, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer5 = (float *) vptr5;
    arg5=&buffer5;
  }
  {
    try {
      result = (float)((CvKNearest const *)arg1)->find_nearest((CvMat const *)arg2,arg3,arg4,(float const **)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_find_nearest__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvKNearest_find_nearest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_find_nearest" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_find_nearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvKNearest_find_nearest" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvKNearest_find_nearest" "', argument " "4"" of type '" "CvMat *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (float)((CvKNearest const *)arg1)->find_nearest((CvMat const *)arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_find_nearest__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvKNearest_find_nearest",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_find_nearest" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvKNearest_find_nearest" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvKNearest_find_nearest" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (float)((CvKNearest const *)arg1)->find_nearest((CvMat const *)arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_find_nearest(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 7); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CvKNearest_find_nearest__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvKNearest_find_nearest__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvKNearest_find_nearest__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvKNearest_find_nearest__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvKNearest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CvKNearest_find_nearest__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvKNearest_find_nearest'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    find_nearest(CvKNearest const *,CvMat const *,int,CvMat *,float const **,CvMat *,CvMat *)\n"
    "    find_nearest(CvKNearest const *,CvMat const *,int,CvMat *,float const **,CvMat *)\n"
    "    find_nearest(CvKNearest const *,CvMat const *,int,CvMat *,float const **)\n"
    "    find_nearest(CvKNearest const *,CvMat const *,int,CvMat *)\n"
    "    find_nearest(CvKNearest const *,CvMat const *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvKNearest_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_clear" "', argument " "1"" of type '" "CvKNearest *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_get_max_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvKNearest_get_max_k",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_get_max_k" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  {
    try {
      result = (int)((CvKNearest const *)arg1)->get_max_k(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_get_var_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvKNearest_get_var_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_get_var_count" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  {
    try {
      result = (int)((CvKNearest const *)arg1)->get_var_count(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_get_sample_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvKNearest_get_sample_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_get_sample_count" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  {
    try {
      result = (int)((CvKNearest const *)arg1)->get_sample_count(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvKNearest_is_regression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvKNearest *arg1 = (CvKNearest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvKNearest_is_regression",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvKNearest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvKNearest_is_regression" "', argument " "1"" of type '" "CvKNearest const *""'"); 
  }
  arg1 = reinterpret_cast< CvKNearest * >(argp1);
  {
    try {
      result = (bool)((CvKNearest const *)arg1)->is_regression(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvKNearest_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvKNearest, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvSVMParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvSVMParams")) SWIG_fail;
  {
    try {
      result = (CvSVMParams *)new CvSVMParams(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  CvMat *arg9 = (CvMat *) 0 ;
  CvTermCriteria arg10 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  void *argp10 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  CvSVMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:new_CvSVMParams",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvSVMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvSVMParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvSVMParams" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CvSVMParams" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CvSVMParams" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_CvSVMParams" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_CvSVMParams" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_CvSVMParams" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_CvSVMParams" "', argument " "9"" of type '" "CvMat *""'"); 
  }
  arg9 = reinterpret_cast< CvMat * >(argp9);
  {
    res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_CvTermCriteria,  0  | 0);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "new_CvSVMParams" "', argument " "10"" of type '" "CvTermCriteria""'"); 
    }  
    if (!argp10) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvSVMParams" "', argument " "10"" of type '" "CvTermCriteria""'");
    } else {
      CvTermCriteria * temp = reinterpret_cast< CvTermCriteria * >(argp10);
      arg10 = *temp;
      if (SWIG_IsNewObj(res10)) delete temp;
    }
  }
  {
    try {
      result = (CvSVMParams *)new CvSVMParams(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[11];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 10); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvSVMParams__SWIG_0(self, args);
  }
  if (argc == 10) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_CvMat, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_CvTermCriteria, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        return _wrap_new_CvSVMParams__SWIG_1(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvSVMParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvSVMParams()\n"
    "    CvSVMParams(int,int,double,double,double,double,double,double,CvMat *,CvTermCriteria)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_svm_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_svm_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_svm_type_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMParams_svm_type_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->svm_type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_svm_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_svm_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_svm_type_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (int) ((arg1)->svm_type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_kernel_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_kernel_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_kernel_type_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMParams_kernel_type_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->kernel_type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_kernel_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_kernel_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_kernel_type_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (int) ((arg1)->kernel_type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_degree_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_degree_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_degree_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMParams_degree_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->degree = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_degree_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_degree_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_degree_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (double) ((arg1)->degree);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_gamma_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_gamma_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_gamma_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMParams_gamma_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->gamma = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_gamma_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_gamma_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_gamma_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (double) ((arg1)->gamma);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_coef0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_coef0_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_coef0_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMParams_coef0_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->coef0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_coef0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_coef0_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_coef0_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (double) ((arg1)->coef0);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_C_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_C_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_C_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMParams_C_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->C = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_C_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_C_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_C_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (double) ((arg1)->C);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_nu_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_nu_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_nu_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMParams_nu_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->nu = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_nu_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_nu_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_nu_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (double) ((arg1)->nu);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_p_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_p_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_p_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMParams_p_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->p = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_p_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_p_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_p_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (double) ((arg1)->p);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_class_weights_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_class_weights_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_class_weights_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMParams_class_weights_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->class_weights = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_class_weights_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_class_weights_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_class_weights_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (CvMat *) ((arg1)->class_weights);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_term_crit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  CvTermCriteria *arg2 = (CvTermCriteria *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMParams_term_crit_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_term_crit_set" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvTermCriteria, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMParams_term_crit_set" "', argument " "2"" of type '" "CvTermCriteria *""'"); 
  }
  arg2 = reinterpret_cast< CvTermCriteria * >(argp2);
  if (arg1) (arg1)->term_crit = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMParams_term_crit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvTermCriteria *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMParams_term_crit_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMParams_term_crit_get" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  result = (CvTermCriteria *)& ((arg1)->term_crit);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvTermCriteria, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvSVMParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvSVMParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvSVMParams" "', argument " "1"" of type '" "CvSVMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvSVMParams_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvSVMParams, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvSVMKernel__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvSVMKernel")) SWIG_fail;
  {
    try {
      result = (CvSVMKernel *)new CvSVMKernel(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMKernel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMKernel__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMParams *arg1 = (CvSVMParams *) 0 ;
  CvSVMKernel::Calc arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvSVMKernel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CvSVMKernel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvSVMKernel" "', argument " "1"" of type '" "CvSVMParams const *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMParams * >(argp1);
  {
    int res = SWIG_ConvertMember(obj1, SWIG_as_voidptr(&arg2), sizeof(CvSVMKernel::Calc),SWIGTYPE_m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "new_CvSVMKernel" "', argument " "2"" of type '" "CvSVMKernel::Calc""'"); 
    }
  }
  {
    try {
      result = (CvSVMKernel *)new CvSVMKernel((CvSVMParams const *)arg1,arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMKernel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMKernel(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvSVMKernel__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVMParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CvSVMKernel__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvSVMKernel'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvSVMKernel()\n"
    "    CvSVMKernel(CvSVMParams const *,CvSVMKernel::Calc)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  CvSVMParams *arg2 = (CvSVMParams *) 0 ;
  CvSVMKernel::Calc arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVMKernel_create",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_create" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvSVMParams, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMKernel_create" "', argument " "2"" of type '" "CvSVMParams const *""'"); 
  }
  arg2 = reinterpret_cast< CvSVMParams * >(argp2);
  {
    int res = SWIG_ConvertMember(obj2, SWIG_as_voidptr(&arg3), sizeof(CvSVMKernel::Calc),SWIGTYPE_m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CvSVMKernel_create" "', argument " "3"" of type '" "CvSVMKernel::Calc""'"); 
    }
  }
  {
    try {
      result = (bool)(arg1)->create((CvSVMParams const *)arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvSVMKernel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvSVMKernel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvSVMKernel" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMKernel_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_clear" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_calc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  float *arg5 = (float *) 0 ;
  float *arg6 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvSVMKernel_calc",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_calc" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMKernel_calc" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMKernel_calc" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMKernel_calc" "', argument " "5"" of type '" "float const *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMKernel_calc" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      (arg1)->calc(arg2,arg3,(float const **)arg4,(float const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_params_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  CvSVMParams *arg2 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMKernel_params_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_params_set" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvSVMParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMKernel_params_set" "', argument " "2"" of type '" "CvSVMParams const *""'"); 
  }
  arg2 = reinterpret_cast< CvSVMParams * >(argp2);
  if (arg1) (arg1)->params = (CvSVMParams const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_params_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMKernel_params_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_params_get" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  result = (CvSVMParams *) ((arg1)->params);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_calc_func_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  CvSVMKernel::Calc arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMKernel_calc_func_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_calc_func_set" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  {
    int res = SWIG_ConvertMember(obj1, SWIG_as_voidptr(&arg2), sizeof(CvSVMKernel::Calc),SWIGTYPE_m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CvSVMKernel_calc_func_set" "', argument " "2"" of type '" "CvSVMKernel::Calc""'"); 
    }
  }
  if (arg1) (arg1)->calc_func = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_calc_func_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMKernel::Calc result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMKernel_calc_func_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_calc_func_get" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  result = (CvSVMKernel::Calc) ((arg1)->calc_func);
  resultobj = SWIG_NewMemberObj(SWIG_as_voidptr(&result), sizeof(CvSVMKernel::Calc), SWIGTYPE_m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_calc_non_rbf_base(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  float *arg5 = (float *) 0 ;
  float *arg6 = (float *) 0 ;
  double arg7 ;
  double arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvSVMKernel_calc_non_rbf_base",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_calc_non_rbf_base" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMKernel_calc_non_rbf_base" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMKernel_calc_non_rbf_base" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMKernel_calc_non_rbf_base" "', argument " "5"" of type '" "float const *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMKernel_calc_non_rbf_base" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVMKernel_calc_non_rbf_base" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CvSVMKernel_calc_non_rbf_base" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      (arg1)->calc_non_rbf_base(arg2,arg3,(float const **)arg4,(float const *)arg5,arg6,arg7,arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_calc_linear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  float *arg5 = (float *) 0 ;
  float *arg6 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvSVMKernel_calc_linear",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_calc_linear" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMKernel_calc_linear" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMKernel_calc_linear" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMKernel_calc_linear" "', argument " "5"" of type '" "float const *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMKernel_calc_linear" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      (arg1)->calc_linear(arg2,arg3,(float const **)arg4,(float const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_calc_rbf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  float *arg5 = (float *) 0 ;
  float *arg6 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvSVMKernel_calc_rbf",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_calc_rbf" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMKernel_calc_rbf" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMKernel_calc_rbf" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMKernel_calc_rbf" "', argument " "5"" of type '" "float const *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMKernel_calc_rbf" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      (arg1)->calc_rbf(arg2,arg3,(float const **)arg4,(float const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_calc_poly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  float *arg5 = (float *) 0 ;
  float *arg6 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvSVMKernel_calc_poly",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_calc_poly" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMKernel_calc_poly" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMKernel_calc_poly" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMKernel_calc_poly" "', argument " "5"" of type '" "float const *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMKernel_calc_poly" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      (arg1)->calc_poly(arg2,arg3,(float const **)arg4,(float const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernel_calc_sigmoid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernel *arg1 = (CvSVMKernel *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  float *arg5 = (float *) 0 ;
  float *arg6 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvSVMKernel_calc_sigmoid",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernel_calc_sigmoid" "', argument " "1"" of type '" "CvSVMKernel *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernel * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMKernel_calc_sigmoid" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMKernel_calc_sigmoid" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMKernel_calc_sigmoid" "', argument " "5"" of type '" "float const *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMKernel_calc_sigmoid" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      (arg1)->calc_sigmoid(arg2,arg3,(float const **)arg4,(float const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvSVMKernel_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvSVMKernel, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvSVMKernelRow_prev_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernelRow *arg1 = (CvSVMKernelRow *) 0 ;
  CvSVMKernelRow *arg2 = (CvSVMKernelRow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMKernelRow_prev_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernelRow_prev_set" "', argument " "1"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernelRow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvSVMKernelRow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMKernelRow_prev_set" "', argument " "2"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg2 = reinterpret_cast< CvSVMKernelRow * >(argp2);
  if (arg1) (arg1)->prev = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernelRow_prev_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernelRow *arg1 = (CvSVMKernelRow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMKernelRow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMKernelRow_prev_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernelRow_prev_get" "', argument " "1"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernelRow * >(argp1);
  result = (CvSVMKernelRow *) ((arg1)->prev);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernelRow_next_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernelRow *arg1 = (CvSVMKernelRow *) 0 ;
  CvSVMKernelRow *arg2 = (CvSVMKernelRow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMKernelRow_next_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernelRow_next_set" "', argument " "1"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernelRow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvSVMKernelRow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMKernelRow_next_set" "', argument " "2"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg2 = reinterpret_cast< CvSVMKernelRow * >(argp2);
  if (arg1) (arg1)->next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernelRow_next_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernelRow *arg1 = (CvSVMKernelRow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMKernelRow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMKernelRow_next_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernelRow_next_get" "', argument " "1"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernelRow * >(argp1);
  result = (CvSVMKernelRow *) ((arg1)->next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernelRow_data_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernelRow *arg1 = (CvSVMKernelRow *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMKernelRow_data_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernelRow_data_set" "', argument " "1"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernelRow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMKernelRow_data_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->data = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMKernelRow_data_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernelRow *arg1 = (CvSVMKernelRow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMKernelRow_data_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMKernelRow_data_get" "', argument " "1"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernelRow * >(argp1);
  result = (float *) ((arg1)->data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMKernelRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernelRow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvSVMKernelRow")) SWIG_fail;
  {
    try {
      result = (CvSVMKernelRow *)new CvSVMKernelRow(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMKernelRow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvSVMKernelRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMKernelRow *arg1 = (CvSVMKernelRow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvSVMKernelRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMKernelRow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvSVMKernelRow" "', argument " "1"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMKernelRow * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvSVMKernelRow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvSVMKernelRow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_obj_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolutionInfo_obj_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_obj_set" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolutionInfo_obj_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->obj = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_obj_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolutionInfo_obj_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_obj_get" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  result = (double) ((arg1)->obj);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_rho_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolutionInfo_rho_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_rho_set" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolutionInfo_rho_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->rho = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_rho_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolutionInfo_rho_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_rho_get" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  result = (double) ((arg1)->rho);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_upper_bound_p_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolutionInfo_upper_bound_p_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_upper_bound_p_set" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolutionInfo_upper_bound_p_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->upper_bound_p = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_upper_bound_p_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolutionInfo_upper_bound_p_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_upper_bound_p_get" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  result = (double) ((arg1)->upper_bound_p);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_upper_bound_n_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolutionInfo_upper_bound_n_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_upper_bound_n_set" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolutionInfo_upper_bound_n_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->upper_bound_n = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_upper_bound_n_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolutionInfo_upper_bound_n_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_upper_bound_n_get" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  result = (double) ((arg1)->upper_bound_n);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_r_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolutionInfo_r_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_r_set" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolutionInfo_r_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->r = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolutionInfo_r_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolutionInfo_r_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolutionInfo_r_get" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  result = (double) ((arg1)->r);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMSolutionInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvSVMSolutionInfo")) SWIG_fail;
  {
    try {
      result = (CvSVMSolutionInfo *)new CvSVMSolutionInfo(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMSolutionInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvSVMSolutionInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolutionInfo *arg1 = (CvSVMSolutionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvSVMSolutionInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolutionInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvSVMSolutionInfo" "', argument " "1"" of type '" "CvSVMSolutionInfo *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolutionInfo * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvSVMSolutionInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvSVMSolutionInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvSVMSolver__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvSVMSolver")) SWIG_fail;
  {
    try {
      result = (CvSVMSolver *)new CvSVMSolver(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMSolver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMSolver__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  float **arg3 = (float **) 0 ;
  schar *arg4 = (schar *) 0 ;
  int arg5 ;
  double *arg6 = (double *) 0 ;
  double arg7 ;
  double arg8 ;
  CvMemStorage *arg9 = (CvMemStorage *) 0 ;
  CvSVMKernel *arg10 = (CvSVMKernel *) 0 ;
  CvSVMSolver::GetRow arg11 ;
  CvSVMSolver::SelectWorkingSet arg12 ;
  CvSVMSolver::CalcRho arg13 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *vptr3 ;
  float *buffer3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  CvSVMSolver *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOO:new_CvSVMSolver",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvSVMSolver" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvSVMSolver" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    if ((SWIG_ConvertPtr(obj2, &vptr3, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer3 = (float *) vptr3;
    arg3=&buffer3;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_signed_char, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvSVMSolver" "', argument " "4"" of type '" "schar *""'"); 
  }
  arg4 = reinterpret_cast< schar * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CvSVMSolver" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvSVMSolver" "', argument " "6"" of type '" "double *""'"); 
  }
  arg6 = reinterpret_cast< double * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_CvSVMSolver" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_CvSVMSolver" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_CvMemStorage, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_CvSVMSolver" "', argument " "9"" of type '" "CvMemStorage *""'"); 
  }
  arg9 = reinterpret_cast< CvMemStorage * >(argp9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "new_CvSVMSolver" "', argument " "10"" of type '" "CvSVMKernel *""'"); 
  }
  arg10 = reinterpret_cast< CvSVMKernel * >(argp10);
  {
    int res = SWIG_ConvertMember(obj10, SWIG_as_voidptr(&arg11), sizeof(CvSVMSolver::GetRow),SWIGTYPE_m_CvSVMSolver__f_int_p_float_p_float_bool__p_float);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "new_CvSVMSolver" "', argument " "11"" of type '" "CvSVMSolver::GetRow""'"); 
    }
  }
  {
    int res = SWIG_ConvertMember(obj11, SWIG_as_voidptr(&arg12), sizeof(CvSVMSolver::SelectWorkingSet),SWIGTYPE_m_CvSVMSolver__f_r_int_r_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "new_CvSVMSolver" "', argument " "12"" of type '" "CvSVMSolver::SelectWorkingSet""'"); 
    }
  }
  {
    int res = SWIG_ConvertMember(obj12, SWIG_as_voidptr(&arg13), sizeof(CvSVMSolver::CalcRho),SWIGTYPE_m_CvSVMSolver__f_r_double_r_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "new_CvSVMSolver" "', argument " "13"" of type '" "CvSVMSolver::CalcRho""'"); 
    }
  }
  {
    try {
      result = (CvSVMSolver *)new CvSVMSolver(arg1,arg2,(float const **)arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMSolver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMSolver(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[14];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 13); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvSVMSolver__SWIG_0(self, args);
  }
  if (argc == 13) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_signed_char, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_double, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_CvMemStorage, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      void *vptr = 0;
                      int res = SWIG_ConvertPtr(argv[9], &vptr, SWIGTYPE_p_CvSVMKernel, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        void *vptr = 0;
                        int res = SWIG_ConvertPtr(argv[10], &vptr, SWIGTYPE_m_CvSVMSolver__f_int_p_float_p_float_bool__p_float, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          void *vptr = 0;
                          int res = SWIG_ConvertPtr(argv[11], &vptr, SWIGTYPE_m_CvSVMSolver__f_r_int_r_int__bool, 0);
                          _v = SWIG_CheckState(res);
                          if (_v) {
                            void *vptr = 0;
                            int res = SWIG_ConvertPtr(argv[12], &vptr, SWIGTYPE_m_CvSVMSolver__f_r_double_r_double__void, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              return _wrap_new_CvSVMSolver__SWIG_1(self, args);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvSVMSolver'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvSVMSolver()\n"
    "    CvSVMSolver(int,int,float const **,schar *,int,double *,double,double,CvMemStorage *,CvSVMKernel *,CvSVMSolver::GetRow,CvSVMSolver::SelectWorkingSet,CvSVMSolver::CalcRho)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  schar *arg5 = (schar *) 0 ;
  int arg6 ;
  double *arg7 = (double *) 0 ;
  double arg8 ;
  double arg9 ;
  CvMemStorage *arg10 = (CvMemStorage *) 0 ;
  CvSVMKernel *arg11 = (CvSVMKernel *) 0 ;
  CvSVMSolver::GetRow arg12 ;
  CvSVMSolver::SelectWorkingSet arg13 ;
  CvSVMSolver::CalcRho arg14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  void *argp11 = 0 ;
  int res11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOO:CvSVMSolver_create",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_create" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_create" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMSolver_create" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_signed_char, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMSolver_create" "', argument " "5"" of type '" "schar *""'"); 
  }
  arg5 = reinterpret_cast< schar * >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CvSVMSolver_create" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvSVMSolver_create" "', argument " "7"" of type '" "double *""'"); 
  }
  arg7 = reinterpret_cast< double * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CvSVMSolver_create" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "CvSVMSolver_create" "', argument " "9"" of type '" "double""'");
  } 
  arg9 = static_cast< double >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_CvMemStorage, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "CvSVMSolver_create" "', argument " "10"" of type '" "CvMemStorage *""'"); 
  }
  arg10 = reinterpret_cast< CvMemStorage * >(argp10);
  res11 = SWIG_ConvertPtr(obj10, &argp11,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "CvSVMSolver_create" "', argument " "11"" of type '" "CvSVMKernel *""'"); 
  }
  arg11 = reinterpret_cast< CvSVMKernel * >(argp11);
  {
    int res = SWIG_ConvertMember(obj11, SWIG_as_voidptr(&arg12), sizeof(CvSVMSolver::GetRow),SWIGTYPE_m_CvSVMSolver__f_int_p_float_p_float_bool__p_float);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CvSVMSolver_create" "', argument " "12"" of type '" "CvSVMSolver::GetRow""'"); 
    }
  }
  {
    int res = SWIG_ConvertMember(obj12, SWIG_as_voidptr(&arg13), sizeof(CvSVMSolver::SelectWorkingSet),SWIGTYPE_m_CvSVMSolver__f_r_int_r_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CvSVMSolver_create" "', argument " "13"" of type '" "CvSVMSolver::SelectWorkingSet""'"); 
    }
  }
  {
    int res = SWIG_ConvertMember(obj13, SWIG_as_voidptr(&arg14), sizeof(CvSVMSolver::CalcRho),SWIGTYPE_m_CvSVMSolver__f_r_double_r_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CvSVMSolver_create" "', argument " "14"" of type '" "CvSVMSolver::CalcRho""'"); 
    }
  }
  {
    try {
      result = (bool)(arg1)->create(arg2,arg3,(float const **)arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvSVMSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvSVMSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvSVMSolver" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_clear" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_solve_generic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvSVMSolutionInfo *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_solve_generic",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_solve_generic" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CvSVMSolutionInfo,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_solve_generic" "', argument " "2"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_solve_generic" "', argument " "2"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  arg2 = reinterpret_cast< CvSVMSolutionInfo * >(argp2);
  {
    try {
      result = (bool)(arg1)->solve_generic(*arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_solve_c_svc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  schar *arg5 = (schar *) 0 ;
  double arg6 ;
  double arg7 ;
  CvMemStorage *arg8 = (CvMemStorage *) 0 ;
  CvSVMKernel *arg9 = (CvSVMKernel *) 0 ;
  double *arg10 = (double *) 0 ;
  CvSVMSolutionInfo *arg11 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  void *argp11 = 0 ;
  int res11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:CvSVMSolver_solve_c_svc",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_signed_char, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "5"" of type '" "schar *""'"); 
  }
  arg5 = reinterpret_cast< schar * >(argp5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMemStorage, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "8"" of type '" "CvMemStorage *""'"); 
  }
  arg8 = reinterpret_cast< CvMemStorage * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "9"" of type '" "CvSVMKernel *""'"); 
  }
  arg9 = reinterpret_cast< CvSVMKernel * >(argp9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "10"" of type '" "double *""'"); 
  }
  arg10 = reinterpret_cast< double * >(argp10);
  res11 = SWIG_ConvertPtr(obj10, &argp11, SWIGTYPE_p_CvSVMSolutionInfo,  0 );
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "CvSVMSolver_solve_c_svc" "', argument " "11"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  if (!argp11) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_solve_c_svc" "', argument " "11"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  arg11 = reinterpret_cast< CvSVMSolutionInfo * >(argp11);
  {
    try {
      result = (bool)(arg1)->solve_c_svc(arg2,arg3,(float const **)arg4,arg5,arg6,arg7,arg8,arg9,arg10,*arg11); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_solve_nu_svc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  schar *arg5 = (schar *) 0 ;
  CvMemStorage *arg6 = (CvMemStorage *) 0 ;
  CvSVMKernel *arg7 = (CvSVMKernel *) 0 ;
  double *arg8 = (double *) 0 ;
  CvSVMSolutionInfo *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvSVMSolver_solve_nu_svc",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_signed_char, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "5"" of type '" "schar *""'"); 
  }
  arg5 = reinterpret_cast< schar * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMemStorage, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "6"" of type '" "CvMemStorage *""'"); 
  }
  arg6 = reinterpret_cast< CvMemStorage * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "7"" of type '" "CvSVMKernel *""'"); 
  }
  arg7 = reinterpret_cast< CvSVMKernel * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "8"" of type '" "double *""'"); 
  }
  arg8 = reinterpret_cast< double * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvSVMSolutionInfo,  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "9"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_solve_nu_svc" "', argument " "9"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  arg9 = reinterpret_cast< CvSVMSolutionInfo * >(argp9);
  {
    try {
      result = (bool)(arg1)->solve_nu_svc(arg2,arg3,(float const **)arg4,arg5,arg6,arg7,arg8,*arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_solve_one_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  CvMemStorage *arg5 = (CvMemStorage *) 0 ;
  CvSVMKernel *arg6 = (CvSVMKernel *) 0 ;
  double *arg7 = (double *) 0 ;
  CvSVMSolutionInfo *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvSVMSolver_solve_one_class",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_solve_one_class" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_solve_one_class" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMSolver_solve_one_class" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMemStorage, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMSolver_solve_one_class" "', argument " "5"" of type '" "CvMemStorage *""'"); 
  }
  arg5 = reinterpret_cast< CvMemStorage * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMSolver_solve_one_class" "', argument " "6"" of type '" "CvSVMKernel *""'"); 
  }
  arg6 = reinterpret_cast< CvSVMKernel * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvSVMSolver_solve_one_class" "', argument " "7"" of type '" "double *""'"); 
  }
  arg7 = reinterpret_cast< double * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvSVMSolutionInfo,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVMSolver_solve_one_class" "', argument " "8"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_solve_one_class" "', argument " "8"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  arg8 = reinterpret_cast< CvSVMSolutionInfo * >(argp8);
  {
    try {
      result = (bool)(arg1)->solve_one_class(arg2,arg3,(float const **)arg4,arg5,arg6,arg7,*arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_solve_eps_svr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  float *arg5 = (float *) 0 ;
  CvMemStorage *arg6 = (CvMemStorage *) 0 ;
  CvSVMKernel *arg7 = (CvSVMKernel *) 0 ;
  double *arg8 = (double *) 0 ;
  CvSVMSolutionInfo *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvSVMSolver_solve_eps_svr",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "5"" of type '" "float const *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMemStorage, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "6"" of type '" "CvMemStorage *""'"); 
  }
  arg6 = reinterpret_cast< CvMemStorage * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "7"" of type '" "CvSVMKernel *""'"); 
  }
  arg7 = reinterpret_cast< CvSVMKernel * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "8"" of type '" "double *""'"); 
  }
  arg8 = reinterpret_cast< double * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvSVMSolutionInfo,  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "9"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_solve_eps_svr" "', argument " "9"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  arg9 = reinterpret_cast< CvSVMSolutionInfo * >(argp9);
  {
    try {
      result = (bool)(arg1)->solve_eps_svr(arg2,arg3,(float const **)arg4,(float const *)arg5,arg6,arg7,arg8,*arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_solve_nu_svr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  float *arg5 = (float *) 0 ;
  CvMemStorage *arg6 = (CvMemStorage *) 0 ;
  CvSVMKernel *arg7 = (CvSVMKernel *) 0 ;
  double *arg8 = (double *) 0 ;
  CvSVMSolutionInfo *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *vptr4 ;
  float *buffer4 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvSVMSolver_solve_nu_svr",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    if ((SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer4 = (float *) vptr4;
    arg4=&buffer4;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "5"" of type '" "float const *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMemStorage, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "6"" of type '" "CvMemStorage *""'"); 
  }
  arg6 = reinterpret_cast< CvMemStorage * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "7"" of type '" "CvSVMKernel *""'"); 
  }
  arg7 = reinterpret_cast< CvSVMKernel * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "8"" of type '" "double *""'"); 
  }
  arg8 = reinterpret_cast< double * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvSVMSolutionInfo,  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "9"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_solve_nu_svr" "', argument " "9"" of type '" "CvSVMSolutionInfo &""'"); 
  }
  arg9 = reinterpret_cast< CvSVMSolutionInfo * >(argp9);
  {
    try {
      result = (bool)(arg1)->solve_nu_svr(arg2,arg3,(float const **)arg4,(float const *)arg5,arg6,arg7,arg8,*arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_get_row_base(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  bool *arg3 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVMSolver_get_row_base",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_get_row_base" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_get_row_base" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_get_row_base" "', argument " "3"" of type '" "bool *""'"); 
  }
  arg3 = reinterpret_cast< bool * >(argp3);
  {
    try {
      result = (float *)(arg1)->get_row_base(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_get_row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVMSolver_get_row",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_get_row" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_get_row" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_get_row" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  {
    try {
      result = (float *)(arg1)->get_row(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_sample_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_sample_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_sample_count_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_sample_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sample_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_sample_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_sample_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_sample_count_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (int) ((arg1)->sample_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_var_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_var_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_var_count_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_var_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->var_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_var_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_var_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_var_count_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (int) ((arg1)->var_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_cache_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_cache_size_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_cache_size_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_cache_size_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->cache_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_cache_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_cache_size_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_cache_size_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (int) ((arg1)->cache_size);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_cache_line_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_cache_line_size_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_cache_line_size_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_cache_line_size_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->cache_line_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_cache_line_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_cache_line_size_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_cache_line_size_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (int) ((arg1)->cache_line_size);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_samples_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  float **arg2 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *vptr2 ;
  float *buffer2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_samples_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_samples_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  {
    if ((SWIG_ConvertPtr(obj1, &vptr2, SWIGTYPE_p_float, 1)) == -1){
      SWIG_fail;
    }
    buffer2 = (float *) vptr2;
    arg2=&buffer2;
  }
  if (arg1) (arg1)->samples = (float const **)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_samples_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_samples_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_samples_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (float **) ((arg1)->samples);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_params_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvSVMParams *arg2 = (CvSVMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_params_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_params_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvSVMParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_params_set" "', argument " "2"" of type '" "CvSVMParams const *""'"); 
  }
  arg2 = reinterpret_cast< CvSVMParams * >(argp2);
  if (arg1) (arg1)->params = (CvSVMParams const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_params_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_params_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_params_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (CvSVMParams *) ((arg1)->params);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_storage_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvMemStorage *arg2 = (CvMemStorage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_storage_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_storage_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMemStorage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_storage_set" "', argument " "2"" of type '" "CvMemStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvMemStorage * >(argp2);
  if (arg1) (arg1)->storage = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_storage_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMemStorage *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_storage_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_storage_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (CvMemStorage *) ((arg1)->storage);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMemStorage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_lru_list_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvSVMKernelRow *arg2 = (CvSVMKernelRow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_lru_list_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_lru_list_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_lru_list_set" "', argument " "2"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg2 = reinterpret_cast< CvSVMKernelRow * >(argp2);
  if (arg1) (arg1)->lru_list = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_lru_list_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMKernelRow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_lru_list_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_lru_list_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (CvSVMKernelRow *)& ((arg1)->lru_list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_rows_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvSVMKernelRow *arg2 = (CvSVMKernelRow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_rows_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_rows_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvSVMKernelRow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_rows_set" "', argument " "2"" of type '" "CvSVMKernelRow *""'"); 
  }
  arg2 = reinterpret_cast< CvSVMKernelRow * >(argp2);
  if (arg1) (arg1)->rows = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_rows_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMKernelRow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_rows_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_rows_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (CvSVMKernelRow *) ((arg1)->rows);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMKernelRow, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_alpha_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_alpha_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_alpha_count_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_alpha_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->alpha_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_alpha_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_alpha_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_alpha_count_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (int) ((arg1)->alpha_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_G_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_G_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_G_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_G_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->G = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_G_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_G_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_G_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (double *) ((arg1)->G);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_alpha_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_alpha_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_alpha_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_alpha_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->alpha = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_alpha_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_alpha_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_alpha_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (double *) ((arg1)->alpha);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_alpha_status_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  schar *arg2 = (schar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_alpha_status_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_alpha_status_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_signed_char, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_alpha_status_set" "', argument " "2"" of type '" "schar *""'"); 
  }
  arg2 = reinterpret_cast< schar * >(argp2);
  if (arg1) (arg1)->alpha_status = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_alpha_status_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schar *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_alpha_status_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_alpha_status_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (schar *) ((arg1)->alpha_status);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_signed_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  schar *arg2 = (schar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_y_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_signed_char, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_y_set" "', argument " "2"" of type '" "schar *""'"); 
  }
  arg2 = reinterpret_cast< schar * >(argp2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schar *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_y_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (schar *) ((arg1)->y);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_signed_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_b_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_b_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_b_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_b_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->b = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_b_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_b_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_b_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (double *) ((arg1)->b);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_buf_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_buf_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_buf_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_buf_set" "', argument " "2"" of type '" "float *[2]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)2; ++ii) arg1->buf[ii] = arg2[ii];
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""buf""' of type '""float *[2]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_buf_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_buf_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_buf_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (float **)(float **) ((arg1)->buf);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_eps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_eps_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_eps_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_eps_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->eps = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_eps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_eps_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_eps_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (double) ((arg1)->eps);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_max_iter_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_max_iter_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_max_iter_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_max_iter_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->max_iter = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_max_iter_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_max_iter_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_max_iter_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (int) ((arg1)->max_iter);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_C_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  double *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_C_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_C_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_C_set" "', argument " "2"" of type '" "double [2]""'"); 
  } 
  arg2 = reinterpret_cast< double * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)2; ++ii) arg1->C[ii] = arg2[ii];
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""C""' of type '""double [2]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_C_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_C_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_C_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (double *)(double *) ((arg1)->C);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_kernel_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvSVMKernel *arg2 = (CvSVMKernel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_kernel_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_kernel_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvSVMKernel, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_kernel_set" "', argument " "2"" of type '" "CvSVMKernel *""'"); 
  }
  arg2 = reinterpret_cast< CvSVMKernel * >(argp2);
  if (arg1) (arg1)->kernel = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_kernel_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMKernel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_kernel_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_kernel_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (CvSVMKernel *) ((arg1)->kernel);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMKernel, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_select_working_set_func_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvSVMSolver::SelectWorkingSet arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_select_working_set_func_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_select_working_set_func_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  {
    int res = SWIG_ConvertMember(obj1, SWIG_as_voidptr(&arg2), sizeof(CvSVMSolver::SelectWorkingSet),SWIGTYPE_m_CvSVMSolver__f_r_int_r_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CvSVMSolver_select_working_set_func_set" "', argument " "2"" of type '" "CvSVMSolver::SelectWorkingSet""'"); 
    }
  }
  if (arg1) (arg1)->select_working_set_func = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_select_working_set_func_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMSolver::SelectWorkingSet result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_select_working_set_func_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_select_working_set_func_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (CvSVMSolver::SelectWorkingSet) ((arg1)->select_working_set_func);
  resultobj = SWIG_NewMemberObj(SWIG_as_voidptr(&result), sizeof(CvSVMSolver::SelectWorkingSet), SWIGTYPE_m_CvSVMSolver__f_r_int_r_int__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_calc_rho_func_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvSVMSolver::CalcRho arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_calc_rho_func_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_calc_rho_func_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  {
    int res = SWIG_ConvertMember(obj1, SWIG_as_voidptr(&arg2), sizeof(CvSVMSolver::CalcRho),SWIGTYPE_m_CvSVMSolver__f_r_double_r_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CvSVMSolver_calc_rho_func_set" "', argument " "2"" of type '" "CvSVMSolver::CalcRho""'"); 
    }
  }
  if (arg1) (arg1)->calc_rho_func = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_calc_rho_func_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMSolver::CalcRho result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_calc_rho_func_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_calc_rho_func_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (CvSVMSolver::CalcRho) ((arg1)->calc_rho_func);
  resultobj = SWIG_NewMemberObj(SWIG_as_voidptr(&result), sizeof(CvSVMSolver::CalcRho), SWIGTYPE_m_CvSVMSolver__f_r_double_r_double__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_get_row_func_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  CvSVMSolver::GetRow arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMSolver_get_row_func_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_get_row_func_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  {
    int res = SWIG_ConvertMember(obj1, SWIG_as_voidptr(&arg2), sizeof(CvSVMSolver::GetRow),SWIGTYPE_m_CvSVMSolver__f_int_p_float_p_float_bool__p_float);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CvSVMSolver_get_row_func_set" "', argument " "2"" of type '" "CvSVMSolver::GetRow""'"); 
    }
  }
  if (arg1) (arg1)->get_row_func = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_get_row_func_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMSolver::GetRow result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMSolver_get_row_func_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_get_row_func_get" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  result = (CvSVMSolver::GetRow) ((arg1)->get_row_func);
  resultobj = SWIG_NewMemberObj(SWIG_as_voidptr(&result), sizeof(CvSVMSolver::GetRow), SWIGTYPE_m_CvSVMSolver__f_int_p_float_p_float_bool__p_float);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_select_working_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int *arg2 = 0 ;
  int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVMSolver_select_working_set",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_select_working_set" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_select_working_set" "', argument " "2"" of type '" "int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_select_working_set" "', argument " "2"" of type '" "int &""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_select_working_set" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_select_working_set" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  {
    try {
      result = (bool)(arg1)->select_working_set(*arg2,*arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_select_working_set_nu_svm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int *arg2 = 0 ;
  int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVMSolver_select_working_set_nu_svm",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_select_working_set_nu_svm" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_select_working_set_nu_svm" "', argument " "2"" of type '" "int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_select_working_set_nu_svm" "', argument " "2"" of type '" "int &""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_select_working_set_nu_svm" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_select_working_set_nu_svm" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  {
    try {
      result = (bool)(arg1)->select_working_set_nu_svm(*arg2,*arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_calc_rho(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  double *arg2 = 0 ;
  double *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVMSolver_calc_rho",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_calc_rho" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_calc_rho" "', argument " "2"" of type '" "double &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_calc_rho" "', argument " "2"" of type '" "double &""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_calc_rho" "', argument " "3"" of type '" "double &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_calc_rho" "', argument " "3"" of type '" "double &""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  {
    try {
      (arg1)->calc_rho(*arg2,*arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_calc_rho_nu_svm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  double *arg2 = 0 ;
  double *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVMSolver_calc_rho_nu_svm",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_calc_rho_nu_svm" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMSolver_calc_rho_nu_svm" "', argument " "2"" of type '" "double &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_calc_rho_nu_svm" "', argument " "2"" of type '" "double &""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_calc_rho_nu_svm" "', argument " "3"" of type '" "double &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVMSolver_calc_rho_nu_svm" "', argument " "3"" of type '" "double &""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  {
    try {
      (arg1)->calc_rho_nu_svm(*arg2,*arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_get_row_svc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvSVMSolver_get_row_svc",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_get_row_svc" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_get_row_svc" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_get_row_svc" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVMSolver_get_row_svc" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvSVMSolver_get_row_svc" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (float *)(arg1)->get_row_svc(arg2,arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_get_row_one_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvSVMSolver_get_row_one_class",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_get_row_one_class" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_get_row_one_class" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_get_row_one_class" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVMSolver_get_row_one_class" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvSVMSolver_get_row_one_class" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (float *)(arg1)->get_row_one_class(arg2,arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMSolver_get_row_svr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMSolver *arg1 = (CvSVMSolver *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvSVMSolver_get_row_svr",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMSolver_get_row_svr" "', argument " "1"" of type '" "CvSVMSolver *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMSolver_get_row_svr" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVMSolver_get_row_svr" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVMSolver_get_row_svr" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvSVMSolver_get_row_svr" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (float *)(arg1)->get_row_svr(arg2,arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvSVMSolver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvSVMSolver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvSVMDecisionFunc_rho_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMDecisionFunc_rho_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMDecisionFunc_rho_set" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMDecisionFunc_rho_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->rho = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMDecisionFunc_rho_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMDecisionFunc_rho_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMDecisionFunc_rho_get" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  result = (double) ((arg1)->rho);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMDecisionFunc_sv_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMDecisionFunc_sv_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMDecisionFunc_sv_count_set" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVMDecisionFunc_sv_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sv_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMDecisionFunc_sv_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMDecisionFunc_sv_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMDecisionFunc_sv_count_get" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  result = (int) ((arg1)->sv_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMDecisionFunc_alpha_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMDecisionFunc_alpha_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMDecisionFunc_alpha_set" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMDecisionFunc_alpha_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->alpha = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMDecisionFunc_alpha_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMDecisionFunc_alpha_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMDecisionFunc_alpha_get" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  result = (double *) ((arg1)->alpha);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMDecisionFunc_sv_index_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVMDecisionFunc_sv_index_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMDecisionFunc_sv_index_set" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVMDecisionFunc_sv_index_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->sv_index = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVMDecisionFunc_sv_index_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVMDecisionFunc_sv_index_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVMDecisionFunc_sv_index_get" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  result = (int *) ((arg1)->sv_index);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVMDecisionFunc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvSVMDecisionFunc")) SWIG_fail;
  {
    try {
      result = (CvSVMDecisionFunc *)new CvSVMDecisionFunc(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVMDecisionFunc, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvSVMDecisionFunc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVMDecisionFunc *arg1 = (CvSVMDecisionFunc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvSVMDecisionFunc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVMDecisionFunc, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvSVMDecisionFunc" "', argument " "1"" of type '" "CvSVMDecisionFunc *""'"); 
  }
  arg1 = reinterpret_cast< CvSVMDecisionFunc * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvSVMDecisionFunc_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvSVMDecisionFunc, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvSVM__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvSVM")) SWIG_fail;
  {
    try {
      result = (CvSVM *)new CvSVM(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvSVM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvSVM",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvSVM" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVM__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvSVMParams arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CvSVM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CvSVM",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvSVM" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvSVM" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvSVM" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvSVM" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvSVM" "', argument " "5"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvSVM" "', argument " "5"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      result = (CvSVM *)new CvSVM((CvMat const *)arg1,(CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVM__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvSVM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvSVM",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvSVM" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvSVM" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvSVM" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvSVM" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (CvSVM *)new CvSVM((CvMat const *)arg1,(CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVM__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvSVM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvSVM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvSVM" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvSVM" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvSVM" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (CvSVM *)new CvSVM((CvMat const *)arg1,(CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVM__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvSVM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CvSVM",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvSVM" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvSVM" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (CvSVM *)new CvSVM((CvMat const *)arg1,(CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSVM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvSVM(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvSVM__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CvSVM__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CvSVM__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_CvSVM__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_CvSVMParams, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_CvSVM__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvSVM'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvSVM()\n"
    "    CvSVM(CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams)\n"
    "    CvSVM(CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvSVM(CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvSVM(CvMat const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvSVM_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvSVM_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvSVM_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVM_train",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvSVM_train__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvSVM_train__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvSVM_train__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvSVM_train__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvSVM_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams)\n"
    "    train(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvSVM *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvSVM *,CvMat const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  int arg7 ;
  CvParamGrid arg8 ;
  CvParamGrid arg9 ;
  CvParamGrid arg10 ;
  CvParamGrid arg11 ;
  CvParamGrid arg12 ;
  CvParamGrid arg13 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  void *argp10 ;
  int res10 = 0 ;
  void *argp11 ;
  int res11 = 0 ;
  void *argp12 ;
  int res12 = 0 ;
  void *argp13 ;
  int res13 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOO:CvSVM_train_auto",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train_auto" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train_auto" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train_auto" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train_auto" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train_auto" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVM_train_auto" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp8);
      arg8 = *temp;
      if (SWIG_IsNewObj(res8)) delete temp;
    }
  }
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "CvSVM_train_auto" "', argument " "10"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp10) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "10"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp10);
      arg10 = *temp;
      if (SWIG_IsNewObj(res10)) delete temp;
    }
  }
  {
    res11 = SWIG_ConvertPtr(obj10, &argp11, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res11)) {
      SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "CvSVM_train_auto" "', argument " "11"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp11) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "11"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp11);
      arg11 = *temp;
      if (SWIG_IsNewObj(res11)) delete temp;
    }
  }
  {
    res12 = SWIG_ConvertPtr(obj11, &argp12, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res12)) {
      SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "CvSVM_train_auto" "', argument " "12"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp12) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "12"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp12);
      arg12 = *temp;
      if (SWIG_IsNewObj(res12)) delete temp;
    }
  }
  {
    res13 = SWIG_ConvertPtr(obj12, &argp13, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res13)) {
      SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "CvSVM_train_auto" "', argument " "13"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp13) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "13"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp13);
      arg13 = *temp;
      if (SWIG_IsNewObj(res13)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train_auto((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  int arg7 ;
  CvParamGrid arg8 ;
  CvParamGrid arg9 ;
  CvParamGrid arg10 ;
  CvParamGrid arg11 ;
  CvParamGrid arg12 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  void *argp10 ;
  int res10 = 0 ;
  void *argp11 ;
  int res11 = 0 ;
  void *argp12 ;
  int res12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:CvSVM_train_auto",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train_auto" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train_auto" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train_auto" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train_auto" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train_auto" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVM_train_auto" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp8);
      arg8 = *temp;
      if (SWIG_IsNewObj(res8)) delete temp;
    }
  }
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "CvSVM_train_auto" "', argument " "10"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp10) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "10"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp10);
      arg10 = *temp;
      if (SWIG_IsNewObj(res10)) delete temp;
    }
  }
  {
    res11 = SWIG_ConvertPtr(obj10, &argp11, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res11)) {
      SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "CvSVM_train_auto" "', argument " "11"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp11) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "11"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp11);
      arg11 = *temp;
      if (SWIG_IsNewObj(res11)) delete temp;
    }
  }
  {
    res12 = SWIG_ConvertPtr(obj11, &argp12, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res12)) {
      SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "CvSVM_train_auto" "', argument " "12"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp12) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "12"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp12);
      arg12 = *temp;
      if (SWIG_IsNewObj(res12)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train_auto((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  int arg7 ;
  CvParamGrid arg8 ;
  CvParamGrid arg9 ;
  CvParamGrid arg10 ;
  CvParamGrid arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  void *argp10 ;
  int res10 = 0 ;
  void *argp11 ;
  int res11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:CvSVM_train_auto",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train_auto" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train_auto" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train_auto" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train_auto" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train_auto" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVM_train_auto" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp8);
      arg8 = *temp;
      if (SWIG_IsNewObj(res8)) delete temp;
    }
  }
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "CvSVM_train_auto" "', argument " "10"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp10) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "10"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp10);
      arg10 = *temp;
      if (SWIG_IsNewObj(res10)) delete temp;
    }
  }
  {
    res11 = SWIG_ConvertPtr(obj10, &argp11, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res11)) {
      SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "CvSVM_train_auto" "', argument " "11"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp11) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "11"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp11);
      arg11 = *temp;
      if (SWIG_IsNewObj(res11)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train_auto((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6,arg7,arg8,arg9,arg10,arg11); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  int arg7 ;
  CvParamGrid arg8 ;
  CvParamGrid arg9 ;
  CvParamGrid arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  void *argp10 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:CvSVM_train_auto",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train_auto" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train_auto" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train_auto" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train_auto" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train_auto" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVM_train_auto" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp8);
      arg8 = *temp;
      if (SWIG_IsNewObj(res8)) delete temp;
    }
  }
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "CvSVM_train_auto" "', argument " "10"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp10) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "10"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp10);
      arg10 = *temp;
      if (SWIG_IsNewObj(res10)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train_auto((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6,arg7,arg8,arg9,arg10); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  int arg7 ;
  CvParamGrid arg8 ;
  CvParamGrid arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvSVM_train_auto",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train_auto" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train_auto" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train_auto" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train_auto" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train_auto" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVM_train_auto" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp8);
      arg8 = *temp;
      if (SWIG_IsNewObj(res8)) delete temp;
    }
  }
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "9"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train_auto((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6,arg7,arg8,arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  int arg7 ;
  CvParamGrid arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvSVM_train_auto",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train_auto" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train_auto" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train_auto" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train_auto" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train_auto" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVM_train_auto" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvParamGrid,  0  | 0);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'"); 
    }  
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "8"" of type '" "CvParamGrid""'");
    } else {
      CvParamGrid * temp = reinterpret_cast< CvParamGrid * >(argp8);
      arg8 = *temp;
      if (SWIG_IsNewObj(res8)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train_auto((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6,arg7,arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvSVM_train_auto",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train_auto" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train_auto" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train_auto" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train_auto" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train_auto" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvSVM_train_auto" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (bool)(arg1)->train_auto((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6,arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvSVMParams arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvSVM_train_auto",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_train_auto" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_train_auto" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_train_auto" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvSVM_train_auto" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvSVM_train_auto" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvSVMParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvSVM_train_auto" "', argument " "6"" of type '" "CvSVMParams""'");
    } else {
      CvSVMParams * temp = reinterpret_cast< CvSVMParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train_auto((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_train_auto(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[14];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 13); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvSVM_train_auto__SWIG_7(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_CvSVM_train_auto__SWIG_6(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvParamGrid, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_CvSVM_train_auto__SWIG_5(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvParamGrid, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvParamGrid, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_CvSVM_train_auto__SWIG_4(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvParamGrid, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvParamGrid, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_CvParamGrid, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        return _wrap_CvSVM_train_auto__SWIG_3(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvParamGrid, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvParamGrid, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_CvParamGrid, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        int res = SWIG_ConvertPtr(argv[10], 0, SWIGTYPE_p_CvParamGrid, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          return _wrap_CvSVM_train_auto__SWIG_2(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvParamGrid, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvParamGrid, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_CvParamGrid, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        int res = SWIG_ConvertPtr(argv[10], 0, SWIGTYPE_p_CvParamGrid, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          int res = SWIG_ConvertPtr(argv[11], 0, SWIGTYPE_p_CvParamGrid, 0);
                          _v = SWIG_CheckState(res);
                          if (_v) {
                            return _wrap_CvSVM_train_auto__SWIG_1(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvSVM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvSVMParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvParamGrid, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvParamGrid, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_CvParamGrid, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        int res = SWIG_ConvertPtr(argv[10], 0, SWIGTYPE_p_CvParamGrid, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          int res = SWIG_ConvertPtr(argv[11], 0, SWIGTYPE_p_CvParamGrid, 0);
                          _v = SWIG_CheckState(res);
                          if (_v) {
                            int res = SWIG_ConvertPtr(argv[12], 0, SWIGTYPE_p_CvParamGrid, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              return _wrap_CvSVM_train_auto__SWIG_0(self, args);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvSVM_train_auto'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train_auto(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams,int,CvParamGrid,CvParamGrid,CvParamGrid,CvParamGrid,CvParamGrid,CvParamGrid)\n"
    "    train_auto(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams,int,CvParamGrid,CvParamGrid,CvParamGrid,CvParamGrid,CvParamGrid)\n"
    "    train_auto(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams,int,CvParamGrid,CvParamGrid,CvParamGrid,CvParamGrid)\n"
    "    train_auto(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams,int,CvParamGrid,CvParamGrid,CvParamGrid)\n"
    "    train_auto(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams,int,CvParamGrid,CvParamGrid)\n"
    "    train_auto(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams,int,CvParamGrid)\n"
    "    train_auto(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams,int)\n"
    "    train_auto(CvSVM *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvSVMParams)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_predict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVM_predict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_predict" "', argument " "1"" of type '" "CvSVM const *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (float)((CvSVM const *)arg1)->predict((CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_get_support_vector_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVM_get_support_vector_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_get_support_vector_count" "', argument " "1"" of type '" "CvSVM const *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  {
    try {
      result = (int)((CvSVM const *)arg1)->get_support_vector_count(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_get_support_vector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvSVM_get_support_vector",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_get_support_vector" "', argument " "1"" of type '" "CvSVM const *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvSVM_get_support_vector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (float *)((CvSVM const *)arg1)->get_support_vector(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_get_params(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSVMParams result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVM_get_params",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_get_params" "', argument " "1"" of type '" "CvSVM const *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  {
    try {
      result = ((CvSVM const *)arg1)->get_params(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj((new CvSVMParams(static_cast< const CvSVMParams& >(result))), SWIGTYPE_p_CvSVMParams, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVM_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_clear" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_get_default_grid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CvParamGrid result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVM_get_default_grid",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CvSVM_get_default_grid" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = CvSVM::get_default_grid(arg1); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj((new CvParamGrid(static_cast< const CvParamGrid& >(result))), SWIGTYPE_p_CvParamGrid, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVM_write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_write" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_write" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->write(arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvSVM_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_read" "', argument " "1"" of type '" "CvSVM *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvSVM_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvSVM_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvSVM_get_var_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvSVM *arg1 = (CvSVM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvSVM_get_var_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvSVM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvSVM_get_var_count" "', argument " "1"" of type '" "CvSVM const *""'"); 
  }
  arg1 = reinterpret_cast< CvSVM * >(argp1);
  {
    try {
      result = (int)((CvSVM const *)arg1)->get_var_count(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvSVM_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvSVM, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvEMParams")) SWIG_fail;
  {
    try {
      result = (CvEMParams *)new CvEMParams(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  CvTermCriteria arg4 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat **arg8 = (CvMat **) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_CvEMParams",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvEMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvEMParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvEMParams" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CvTermCriteria,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'");
    } else {
      CvTermCriteria * temp = reinterpret_cast< CvTermCriteria * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvEMParams" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvEMParams" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_CvEMParams" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_CvEMParams" "', argument " "8"" of type '" "CvMat const **""'"); 
  }
  arg8 = reinterpret_cast< CvMat ** >(argp8);
  {
    try {
      result = (CvEMParams *)new CvEMParams(arg1,arg2,arg3,arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const **)arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  CvTermCriteria arg4 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_CvEMParams",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvEMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvEMParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvEMParams" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CvTermCriteria,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'");
    } else {
      CvTermCriteria * temp = reinterpret_cast< CvTermCriteria * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvEMParams" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvEMParams" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_CvEMParams" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (CvEMParams *)new CvEMParams(arg1,arg2,arg3,arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  CvTermCriteria arg4 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_CvEMParams",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvEMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvEMParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvEMParams" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CvTermCriteria,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'");
    } else {
      CvTermCriteria * temp = reinterpret_cast< CvTermCriteria * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvEMParams" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvEMParams" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (CvEMParams *)new CvEMParams(arg1,arg2,arg3,arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  CvTermCriteria arg4 ;
  CvMat *arg5 = (CvMat *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CvEMParams",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvEMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvEMParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvEMParams" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CvTermCriteria,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'");
    } else {
      CvTermCriteria * temp = reinterpret_cast< CvTermCriteria * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvEMParams" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (CvEMParams *)new CvEMParams(arg1,arg2,arg3,arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  CvTermCriteria arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvEMParams",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvEMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvEMParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvEMParams" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CvTermCriteria,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvEMParams" "', argument " "4"" of type '" "CvTermCriteria""'");
    } else {
      CvTermCriteria * temp = reinterpret_cast< CvTermCriteria * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    try {
      result = (CvEMParams *)new CvEMParams(arg1,arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvEMParams",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvEMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvEMParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvEMParams" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (CvEMParams *)new CvEMParams(arg1,arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CvEMParams",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvEMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvEMParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (CvEMParams *)new CvEMParams(arg1,arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CvEMParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CvEMParams",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvEMParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = (CvEMParams *)new CvEMParams(arg1); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEMParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEMParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 8); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvEMParams__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_CvEMParams__SWIG_8(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_CvEMParams__SWIG_7(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CvEMParams__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_CvTermCriteria, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_CvEMParams__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_CvTermCriteria, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_CvEMParams__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_CvTermCriteria, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_CvEMParams__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_CvTermCriteria, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_CvEMParams__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_CvTermCriteria, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_new_CvEMParams__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvEMParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvEMParams()\n"
    "    CvEMParams(int,int,int,CvTermCriteria,CvMat const *,CvMat const *,CvMat const *,CvMat const **)\n"
    "    CvEMParams(int,int,int,CvTermCriteria,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvEMParams(int,int,int,CvTermCriteria,CvMat const *,CvMat const *)\n"
    "    CvEMParams(int,int,int,CvTermCriteria,CvMat const *)\n"
    "    CvEMParams(int,int,int,CvTermCriteria)\n"
    "    CvEMParams(int,int,int)\n"
    "    CvEMParams(int,int)\n"
    "    CvEMParams(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_nclusters_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEMParams_nclusters_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_nclusters_set" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvEMParams_nclusters_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->nclusters = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_nclusters_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEMParams_nclusters_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_nclusters_get" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  result = (int) ((arg1)->nclusters);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_cov_mat_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEMParams_cov_mat_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_cov_mat_type_set" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvEMParams_cov_mat_type_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->cov_mat_type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_cov_mat_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEMParams_cov_mat_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_cov_mat_type_get" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  result = (int) ((arg1)->cov_mat_type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_start_step_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEMParams_start_step_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_start_step_set" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvEMParams_start_step_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->start_step = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_start_step_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEMParams_start_step_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_start_step_get" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  result = (int) ((arg1)->start_step);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_probs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEMParams_probs_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_probs_set" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEMParams_probs_set" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->probs = (CvMat const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_probs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEMParams_probs_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_probs_get" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  result = (CvMat *) ((arg1)->probs);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_weights_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEMParams_weights_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_weights_set" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEMParams_weights_set" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->weights = (CvMat const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_weights_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEMParams_weights_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_weights_get" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  result = (CvMat *) ((arg1)->weights);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_means_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEMParams_means_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_means_set" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEMParams_means_set" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->means = (CvMat const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_means_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEMParams_means_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_means_get" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  result = (CvMat *) ((arg1)->means);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_covs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  CvMat **arg2 = (CvMat **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEMParams_covs_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_covs_set" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEMParams_covs_set" "', argument " "2"" of type '" "CvMat const **""'"); 
  }
  arg2 = reinterpret_cast< CvMat ** >(argp2);
  if (arg1) (arg1)->covs = (CvMat const **)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_covs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEMParams_covs_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_covs_get" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  result = (CvMat **) ((arg1)->covs);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_term_crit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  CvTermCriteria *arg2 = (CvTermCriteria *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEMParams_term_crit_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_term_crit_set" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvTermCriteria, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEMParams_term_crit_set" "', argument " "2"" of type '" "CvTermCriteria *""'"); 
  }
  arg2 = reinterpret_cast< CvTermCriteria * >(argp2);
  if (arg1) (arg1)->term_crit = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEMParams_term_crit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvTermCriteria *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEMParams_term_crit_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEMParams_term_crit_get" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  result = (CvTermCriteria *)& ((arg1)->term_crit);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvTermCriteria, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvEMParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEMParams *arg1 = (CvEMParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvEMParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEMParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvEMParams" "', argument " "1"" of type '" "CvEMParams *""'"); 
  }
  arg1 = reinterpret_cast< CvEMParams * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvEMParams_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvEMParams, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvEM__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvEM")) SWIG_fail;
  {
    try {
      result = (CvEM *)new CvEM(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEM__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvEMParams arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvEM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvEM",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvEM" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvEM" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CvEMParams,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvEM" "', argument " "3"" of type '" "CvEMParams""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvEM" "', argument " "3"" of type '" "CvEMParams""'");
    } else {
      CvEMParams * temp = reinterpret_cast< CvEMParams * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvEM" "', argument " "4"" of type '" "CvMat *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (CvEM *)new CvEM((CvMat const *)arg1,(CvMat const *)arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEM__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvEMParams arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvEM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvEM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvEM" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvEM" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CvEMParams,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvEM" "', argument " "3"" of type '" "CvEMParams""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvEM" "', argument " "3"" of type '" "CvEMParams""'");
    } else {
      CvEMParams * temp = reinterpret_cast< CvEMParams * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      result = (CvEM *)new CvEM((CvMat const *)arg1,(CvMat const *)arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEM__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvEM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CvEM",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvEM" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CvEM" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (CvEM *)new CvEM((CvMat const *)arg1,(CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEM__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvEM *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CvEM",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvEM" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  {
    try {
      result = (CvEM *)new CvEM((CvMat const *)arg1); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvEM, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvEM(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvEM__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CvEM__SWIG_4(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CvEM__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CvEMParams, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CvEM__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CvEMParams, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_CvEM__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvEM'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvEM()\n"
    "    CvEM(CvMat const *,CvMat const *,CvEMParams,CvMat *)\n"
    "    CvEM(CvMat const *,CvMat const *,CvEMParams)\n"
    "    CvEM(CvMat const *,CvMat const *)\n"
    "    CvEM(CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvEM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvEM",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvEM" "', argument " "1"" of type '" "CvEM *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvEMParams arg4 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvEM_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_train" "', argument " "1"" of type '" "CvEM *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEM_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvEM_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CvEMParams,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvEM_train" "', argument " "4"" of type '" "CvEMParams""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvEM_train" "', argument " "4"" of type '" "CvEMParams""'");
    } else {
      CvEMParams * temp = reinterpret_cast< CvEMParams * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvEM_train" "', argument " "5"" of type '" "CvMat *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvEMParams arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvEM_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_train" "', argument " "1"" of type '" "CvEM *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEM_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvEM_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CvEMParams,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvEM_train" "', argument " "4"" of type '" "CvEMParams""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvEM_train" "', argument " "4"" of type '" "CvEMParams""'");
    } else {
      CvEMParams * temp = reinterpret_cast< CvEMParams * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvEM_train",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_train" "', argument " "1"" of type '" "CvEM *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEM_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvEM_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvEM_train",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_train" "', argument " "1"" of type '" "CvEM *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEM_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvEM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvEM_train__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvEM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvEM_train__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvEM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_CvEMParams, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvEM_train__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvEM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_CvEMParams, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvEM_train__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvEM_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvEM *,CvMat const *,CvMat const *,CvEMParams,CvMat *)\n"
    "    train(CvEM *,CvMat const *,CvMat const *,CvEMParams)\n"
    "    train(CvEM *,CvMat const *,CvMat const *)\n"
    "    train(CvEM *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_predict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvEM_predict",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_predict" "', argument " "1"" of type '" "CvEM const *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvEM_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvEM_predict" "', argument " "3"" of type '" "CvMat *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (float)((CvEM const *)arg1)->predict((CvMat const *)arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEM_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_clear" "', argument " "1"" of type '" "CvEM *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_get_nclusters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEM_get_nclusters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_get_nclusters" "', argument " "1"" of type '" "CvEM const *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  {
    try {
      result = (int)((CvEM const *)arg1)->get_nclusters(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_get_means(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEM_get_means",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_get_means" "', argument " "1"" of type '" "CvEM const *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  {
    try {
      result = (CvMat *)((CvEM const *)arg1)->get_means(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_get_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEM_get_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_get_weights" "', argument " "1"" of type '" "CvEM const *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  {
    try {
      result = (CvMat *)((CvEM const *)arg1)->get_weights(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_get_probs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEM_get_probs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_get_probs" "', argument " "1"" of type '" "CvEM const *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  {
    try {
      result = (CvMat *)((CvEM const *)arg1)->get_probs(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_get_log_likelihood(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEM_get_log_likelihood",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_get_log_likelihood" "', argument " "1"" of type '" "CvEM const *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  {
    try {
      result = (double)((CvEM const *)arg1)->get_log_likelihood(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvEM_get_covs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvEM *arg1 = (CvEM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvEM_get_covs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvEM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvEM_get_covs" "', argument " "1"" of type '" "CvEM *""'"); 
  }
  arg1 = reinterpret_cast< CvEM * >(argp1);
  {
    try {
      result = (PyObject *)CvEM_get_covs(arg1); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvEM_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvEM, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvPair32s32f_i_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvPair32s32f *arg1 = (CvPair32s32f *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvPair32s32f_i_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvPair32s32f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvPair32s32f_i_set" "', argument " "1"" of type '" "CvPair32s32f *""'"); 
  }
  arg1 = reinterpret_cast< CvPair32s32f * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvPair32s32f_i_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->i = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvPair32s32f_i_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvPair32s32f *arg1 = (CvPair32s32f *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvPair32s32f_i_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvPair32s32f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvPair32s32f_i_get" "', argument " "1"" of type '" "CvPair32s32f *""'"); 
  }
  arg1 = reinterpret_cast< CvPair32s32f * >(argp1);
  result = (int) ((arg1)->i);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvPair32s32f_val_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvPair32s32f *arg1 = (CvPair32s32f *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvPair32s32f_val_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvPair32s32f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvPair32s32f_val_set" "', argument " "1"" of type '" "CvPair32s32f *""'"); 
  }
  arg1 = reinterpret_cast< CvPair32s32f * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvPair32s32f_val_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->val = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvPair32s32f_val_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvPair32s32f *arg1 = (CvPair32s32f *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvPair32s32f_val_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvPair32s32f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvPair32s32f_val_get" "', argument " "1"" of type '" "CvPair32s32f *""'"); 
  }
  arg1 = reinterpret_cast< CvPair32s32f * >(argp1);
  result = (float) ((arg1)->val);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvPair32s32f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvPair32s32f *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvPair32s32f")) SWIG_fail;
  {
    try {
      result = (CvPair32s32f *)new CvPair32s32f(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvPair32s32f, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvPair32s32f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvPair32s32f *arg1 = (CvPair32s32f *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvPair32s32f",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvPair32s32f, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvPair32s32f" "', argument " "1"" of type '" "CvPair32s32f *""'"); 
  }
  arg1 = reinterpret_cast< CvPair32s32f * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvPair32s32f_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvPair32s32f, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvDTreeSplit_var_idx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeSplit_var_idx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeSplit_var_idx_set" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeSplit_var_idx_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->var_idx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeSplit_var_idx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeSplit_var_idx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeSplit_var_idx_get" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  result = (int) ((arg1)->var_idx);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeSplit_inversed_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeSplit_inversed_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeSplit_inversed_set" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeSplit_inversed_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->inversed = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeSplit_inversed_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeSplit_inversed_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeSplit_inversed_get" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  result = (int) ((arg1)->inversed);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeSplit_quality_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeSplit_quality_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeSplit_quality_set" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeSplit_quality_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->quality = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeSplit_quality_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeSplit_quality_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeSplit_quality_get" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  result = (float) ((arg1)->quality);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeSplit_next_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  CvDTreeSplit *arg2 = (CvDTreeSplit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeSplit_next_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeSplit_next_set" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeSplit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeSplit_next_set" "', argument " "2"" of type '" "CvDTreeSplit *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeSplit * >(argp2);
  if (arg1) (arg1)->next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeSplit_next_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeSplit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeSplit_next_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeSplit_next_get" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  result = (CvDTreeSplit *) ((arg1)->next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeSplit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvDTreeSplit")) SWIG_fail;
  {
    try {
      result = (CvDTreeSplit *)new CvDTreeSplit(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeSplit, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvDTreeSplit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeSplit *arg1 = (CvDTreeSplit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvDTreeSplit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeSplit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvDTreeSplit" "', argument " "1"" of type '" "CvDTreeSplit *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeSplit * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvDTreeSplit_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvDTreeSplit, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvDTreeNode_class_idx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_class_idx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_class_idx_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_class_idx_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->class_idx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_class_idx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_class_idx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_class_idx_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int) ((arg1)->class_idx);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_Tn_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_Tn_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_Tn_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_Tn_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Tn = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_Tn_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_Tn_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_Tn_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int) ((arg1)->Tn);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_value_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_value_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_value_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->value = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_value_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_value_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (double) ((arg1)->value);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_parent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_parent_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_parent_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeNode_parent_set" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  if (arg1) (arg1)->parent = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_parent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_parent_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_parent_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (CvDTreeNode *) ((arg1)->parent);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_left_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_left_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_left_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeNode_left_set" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  if (arg1) (arg1)->left = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_left_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_left_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_left_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (CvDTreeNode *) ((arg1)->left);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_right_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_right_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_right_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeNode_right_set" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  if (arg1) (arg1)->right = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_right_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_right_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_right_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (CvDTreeNode *) ((arg1)->right);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_split_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  CvDTreeSplit *arg2 = (CvDTreeSplit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_split_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_split_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeSplit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeNode_split_set" "', argument " "2"" of type '" "CvDTreeSplit *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeSplit * >(argp2);
  if (arg1) (arg1)->split = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_split_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeSplit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_split_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_split_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (CvDTreeSplit *) ((arg1)->split);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_sample_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_sample_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_sample_count_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_sample_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sample_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_sample_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_sample_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_sample_count_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int) ((arg1)->sample_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_depth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_depth_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_depth_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_depth_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->depth = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_depth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_depth_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_depth_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int) ((arg1)->depth);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_num_valid_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_num_valid_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_num_valid_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeNode_num_valid_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->num_valid = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_num_valid_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_num_valid_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_num_valid_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int *) ((arg1)->num_valid);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_offset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_offset_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_offset_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_offset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->offset = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_offset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_offset_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_offset_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int) ((arg1)->offset);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_buf_idx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_buf_idx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_buf_idx_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_buf_idx_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->buf_idx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_buf_idx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_buf_idx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_buf_idx_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int) ((arg1)->buf_idx);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_maxlr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_maxlr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_maxlr_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_maxlr_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->maxlr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_maxlr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_maxlr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_maxlr_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (double) ((arg1)->maxlr);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_complexity_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_complexity_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_complexity_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_complexity_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->complexity = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_complexity_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_complexity_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_complexity_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int) ((arg1)->complexity);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_alpha_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_alpha_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_alpha_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_alpha_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->alpha = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_alpha_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_alpha_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_alpha_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (double) ((arg1)->alpha);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_node_risk_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_node_risk_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_node_risk_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_node_risk_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->node_risk = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_node_risk_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_node_risk_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_node_risk_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (double) ((arg1)->node_risk);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_tree_risk_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_tree_risk_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_tree_risk_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_tree_risk_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->tree_risk = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_tree_risk_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_tree_risk_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_tree_risk_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (double) ((arg1)->tree_risk);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_tree_error_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_tree_error_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_tree_error_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_tree_error_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->tree_error = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_tree_error_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_tree_error_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_tree_error_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (double) ((arg1)->tree_error);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_cv_Tn_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_cv_Tn_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_cv_Tn_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeNode_cv_Tn_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->cv_Tn = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_cv_Tn_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_cv_Tn_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_cv_Tn_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (int *) ((arg1)->cv_Tn);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_cv_node_risk_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_cv_node_risk_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_cv_node_risk_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeNode_cv_node_risk_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->cv_node_risk = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_cv_node_risk_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_cv_node_risk_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_cv_node_risk_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (double *) ((arg1)->cv_node_risk);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_cv_node_error_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_cv_node_error_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_cv_node_error_set" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeNode_cv_node_error_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->cv_node_error = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_cv_node_error_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeNode_cv_node_error_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_cv_node_error_get" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  result = (double *) ((arg1)->cv_node_error);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_get_num_valid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeNode_get_num_valid",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_get_num_valid" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_get_num_valid" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->get_num_valid(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeNode_set_num_valid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTreeNode_set_num_valid",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeNode_set_num_valid" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeNode_set_num_valid" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeNode_set_num_valid" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      (arg1)->set_num_valid(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvDTreeNode")) SWIG_fail;
  {
    try {
      result = (CvDTreeNode *)new CvDTreeNode(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvDTreeNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeNode *arg1 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvDTreeNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvDTreeNode" "', argument " "1"" of type '" "CvDTreeNode *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeNode * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvDTreeNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvDTreeNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvDTreeParams_max_categories_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_max_categories_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_max_categories_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeParams_max_categories_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->max_categories = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_max_categories_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_max_categories_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_max_categories_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (int) ((arg1)->max_categories);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_max_depth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_max_depth_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_max_depth_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeParams_max_depth_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->max_depth = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_max_depth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_max_depth_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_max_depth_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (int) ((arg1)->max_depth);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_min_sample_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_min_sample_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_min_sample_count_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeParams_min_sample_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->min_sample_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_min_sample_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_min_sample_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_min_sample_count_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (int) ((arg1)->min_sample_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_cv_folds_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_cv_folds_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_cv_folds_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeParams_cv_folds_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->cv_folds = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_cv_folds_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_cv_folds_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_cv_folds_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (int) ((arg1)->cv_folds);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_use_surrogates_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_use_surrogates_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_use_surrogates_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeParams_use_surrogates_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->use_surrogates = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_use_surrogates_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_use_surrogates_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_use_surrogates_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (bool) ((arg1)->use_surrogates);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_use_1se_rule_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_use_1se_rule_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_use_1se_rule_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeParams_use_1se_rule_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->use_1se_rule = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_use_1se_rule_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_use_1se_rule_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_use_1se_rule_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (bool) ((arg1)->use_1se_rule);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_truncate_pruned_tree_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_truncate_pruned_tree_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_truncate_pruned_tree_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeParams_truncate_pruned_tree_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->truncate_pruned_tree = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_truncate_pruned_tree_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_truncate_pruned_tree_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_truncate_pruned_tree_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (bool) ((arg1)->truncate_pruned_tree);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_regression_accuracy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_regression_accuracy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_regression_accuracy_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeParams_regression_accuracy_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->regression_accuracy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_regression_accuracy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_regression_accuracy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_regression_accuracy_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (float) ((arg1)->regression_accuracy);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_priors_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeParams_priors_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_priors_set" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeParams_priors_set" "', argument " "2"" of type '" "float const *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->priors = (float const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeParams_priors_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeParams_priors_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeParams_priors_get" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  result = (float *) ((arg1)->priors);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvDTreeParams")) SWIG_fail;
  {
    try {
      result = (CvDTreeParams *)new CvDTreeParams(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  float arg3 ;
  bool arg4 ;
  int arg5 ;
  int arg6 ;
  bool arg7 ;
  bool arg8 ;
  float *arg9 = (float *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  CvDTreeParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_CvDTreeParams",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvDTreeParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvDTreeParams" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CvDTreeParams" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CvDTreeParams" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_CvDTreeParams" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_CvDTreeParams" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_CvDTreeParams" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_CvDTreeParams" "', argument " "9"" of type '" "float const *""'"); 
  }
  arg9 = reinterpret_cast< float * >(argp9);
  {
    try {
      result = (CvDTreeParams *)new CvDTreeParams(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,(float const *)arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvDTreeParams__SWIG_0(self, args);
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_float, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_new_CvDTreeParams__SWIG_1(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvDTreeParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvDTreeParams()\n"
    "    CvDTreeParams(int,int,float,bool,int,int,bool,bool,float const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvDTreeParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeParams *arg1 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvDTreeParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvDTreeParams" "', argument " "1"" of type '" "CvDTreeParams *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeParams * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvDTreeParams_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvDTreeParams, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvDTreeTrainData")) SWIG_fail;
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvDTreeParams *arg8 = 0 ;
  bool arg9 ;
  bool arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:new_CvDTreeTrainData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvDTreeTrainData" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeTrainData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvDTreeTrainData" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvDTreeTrainData" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvDTreeTrainData" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvDTreeTrainData" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_CvDTreeTrainData" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvDTreeParams,  0  | 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_CvDTreeTrainData" "', argument " "8"" of type '" "CvDTreeParams const &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvDTreeTrainData" "', argument " "8"" of type '" "CvDTreeParams const &""'"); 
  }
  arg8 = reinterpret_cast< CvDTreeParams * >(argp8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_CvDTreeTrainData" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_CvDTreeTrainData" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvDTreeParams const &)*arg8,arg9,arg10); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvDTreeParams *arg8 = 0 ;
  bool arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_CvDTreeTrainData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvDTreeTrainData" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeTrainData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvDTreeTrainData" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvDTreeTrainData" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvDTreeTrainData" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvDTreeTrainData" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_CvDTreeTrainData" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvDTreeParams,  0  | 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_CvDTreeTrainData" "', argument " "8"" of type '" "CvDTreeParams const &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvDTreeTrainData" "', argument " "8"" of type '" "CvDTreeParams const &""'"); 
  }
  arg8 = reinterpret_cast< CvDTreeParams * >(argp8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_CvDTreeTrainData" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvDTreeParams const &)*arg8,arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvDTreeParams *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_CvDTreeTrainData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvDTreeTrainData" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeTrainData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvDTreeTrainData" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvDTreeTrainData" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvDTreeTrainData" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvDTreeTrainData" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_CvDTreeTrainData" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvDTreeParams,  0  | 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_CvDTreeTrainData" "', argument " "8"" of type '" "CvDTreeParams const &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvDTreeTrainData" "', argument " "8"" of type '" "CvDTreeParams const &""'"); 
  }
  arg8 = reinterpret_cast< CvDTreeParams * >(argp8);
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvDTreeParams const &)*arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_CvDTreeTrainData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvDTreeTrainData" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeTrainData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvDTreeTrainData" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvDTreeTrainData" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvDTreeTrainData" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvDTreeTrainData" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_CvDTreeTrainData" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_CvDTreeTrainData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvDTreeTrainData" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeTrainData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvDTreeTrainData" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvDTreeTrainData" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvDTreeTrainData" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvDTreeTrainData" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CvDTreeTrainData",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvDTreeTrainData" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeTrainData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvDTreeTrainData" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvDTreeTrainData" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvDTreeTrainData" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvDTreeTrainData",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvDTreeTrainData" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeTrainData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvDTreeTrainData" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvDTreeTrainData" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvDTreeTrainData",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvDTreeTrainData" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvDTreeTrainData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvDTreeTrainData" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (CvDTreeTrainData *)new CvDTreeTrainData((CvMat const *)arg1,arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvDTreeTrainData(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[11];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 10); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvDTreeTrainData__SWIG_0(self, args);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CvDTreeTrainData__SWIG_8(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_CvDTreeTrainData__SWIG_7(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_CvDTreeTrainData__SWIG_6(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_CvDTreeTrainData__SWIG_5(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_CvDTreeTrainData__SWIG_4(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvDTreeParams, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_new_CvDTreeTrainData__SWIG_3(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvDTreeParams, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_CvDTreeTrainData__SWIG_2(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvDTreeParams, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_new_CvDTreeTrainData__SWIG_1(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvDTreeTrainData'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvDTreeTrainData()\n"
    "    CvDTreeTrainData(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams const &,bool,bool)\n"
    "    CvDTreeTrainData(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams const &,bool)\n"
    "    CvDTreeTrainData(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams const &)\n"
    "    CvDTreeTrainData(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvDTreeTrainData(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvDTreeTrainData(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvDTreeTrainData(CvMat const *,int,CvMat const *,CvMat const *)\n"
    "    CvDTreeTrainData(CvMat const *,int,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvDTreeTrainData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvDTreeTrainData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvDTreeTrainData" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvDTreeParams *arg9 = 0 ;
  bool arg10 ;
  bool arg11 ;
  bool arg12 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  bool val11 ;
  int ecode11 = 0 ;
  bool val12 ;
  int ecode12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_set_data" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTreeTrainData_set_data" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTreeTrainData_set_data" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvDTreeTrainData_set_data" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvDTreeParams,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvDTreeTrainData_set_data" "', argument " "9"" of type '" "CvDTreeParams const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvDTreeTrainData_set_data" "', argument " "9"" of type '" "CvDTreeParams const &""'"); 
  }
  arg9 = reinterpret_cast< CvDTreeParams * >(argp9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "CvDTreeTrainData_set_data" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  ecode11 = SWIG_AsVal_bool(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "CvDTreeTrainData_set_data" "', argument " "11"" of type '" "bool""'");
  } 
  arg11 = static_cast< bool >(val11);
  ecode12 = SWIG_AsVal_bool(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "CvDTreeTrainData_set_data" "', argument " "12"" of type '" "bool""'");
  } 
  arg12 = static_cast< bool >(val12);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,(CvDTreeParams const &)*arg9,arg10,arg11,arg12); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvDTreeParams *arg9 = 0 ;
  bool arg10 ;
  bool arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  bool val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_set_data" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTreeTrainData_set_data" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTreeTrainData_set_data" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvDTreeTrainData_set_data" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvDTreeParams,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvDTreeTrainData_set_data" "', argument " "9"" of type '" "CvDTreeParams const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvDTreeTrainData_set_data" "', argument " "9"" of type '" "CvDTreeParams const &""'"); 
  }
  arg9 = reinterpret_cast< CvDTreeParams * >(argp9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "CvDTreeTrainData_set_data" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  ecode11 = SWIG_AsVal_bool(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "CvDTreeTrainData_set_data" "', argument " "11"" of type '" "bool""'");
  } 
  arg11 = static_cast< bool >(val11);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,(CvDTreeParams const &)*arg9,arg10,arg11); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvDTreeParams *arg9 = 0 ;
  bool arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_set_data" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTreeTrainData_set_data" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTreeTrainData_set_data" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvDTreeTrainData_set_data" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvDTreeParams,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvDTreeTrainData_set_data" "', argument " "9"" of type '" "CvDTreeParams const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvDTreeTrainData_set_data" "', argument " "9"" of type '" "CvDTreeParams const &""'"); 
  }
  arg9 = reinterpret_cast< CvDTreeParams * >(argp9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "CvDTreeTrainData_set_data" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,(CvDTreeParams const &)*arg9,arg10); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvDTreeParams *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_set_data" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTreeTrainData_set_data" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTreeTrainData_set_data" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvDTreeTrainData_set_data" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvDTreeParams,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvDTreeTrainData_set_data" "', argument " "9"" of type '" "CvDTreeParams const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvDTreeTrainData_set_data" "', argument " "9"" of type '" "CvDTreeParams const &""'"); 
  }
  arg9 = reinterpret_cast< CvDTreeParams * >(argp9);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,(CvDTreeParams const &)*arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_set_data" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTreeTrainData_set_data" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTreeTrainData_set_data" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvDTreeTrainData_set_data" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_set_data" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTreeTrainData_set_data" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTreeTrainData_set_data" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_set_data" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTreeTrainData_set_data" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_set_data" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvDTreeTrainData_set_data",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_set_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_set_data" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      (arg1)->set_data((CvMat const *)arg2,arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_data(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[13];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 12); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvDTreeTrainData_set_data__SWIG_8(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvDTreeTrainData_set_data__SWIG_7(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvDTreeTrainData_set_data__SWIG_6(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CvDTreeTrainData_set_data__SWIG_5(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_CvDTreeTrainData_set_data__SWIG_4(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvDTreeParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_CvDTreeTrainData_set_data__SWIG_3(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvDTreeParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_CvDTreeTrainData_set_data__SWIG_2(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvDTreeParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_bool(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_CvDTreeTrainData_set_data__SWIG_1(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvDTreeParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_bool(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_bool(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            return _wrap_CvDTreeTrainData_set_data__SWIG_0(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvDTreeTrainData_set_data'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams const &,bool,bool,bool)\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams const &,bool,bool)\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams const &,bool)\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams const &)\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *)\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *,CvMat const *)\n"
    "    set_data(CvDTreeTrainData *,CvMat const *,int,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_vectors__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  float *arg3 = (float *) 0 ;
  uchar *arg4 = (uchar *) 0 ;
  float *arg5 = (float *) 0 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvDTreeTrainData_get_vectors",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "4"" of type '" "uchar *""'"); 
  }
  arg4 = reinterpret_cast< uchar * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    try {
      (arg1)->get_vectors((CvMat const *)arg2,arg3,arg4,arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_vectors__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  float *arg3 = (float *) 0 ;
  uchar *arg4 = (uchar *) 0 ;
  float *arg5 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvDTreeTrainData_get_vectors",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "4"" of type '" "uchar *""'"); 
  }
  arg4 = reinterpret_cast< uchar * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTreeTrainData_get_vectors" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  {
    try {
      (arg1)->get_vectors((CvMat const *)arg2,arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_vectors(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_unsigned_char, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvDTreeTrainData_get_vectors__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_unsigned_char, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_CvDTreeTrainData_get_vectors__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvDTreeTrainData_get_vectors'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    get_vectors(CvDTreeTrainData *,CvMat const *,float *,uchar *,float *,bool)\n"
    "    get_vectors(CvDTreeTrainData *,CvMat const *,float *,uchar *,float *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_subsample_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_subsample_data",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_subsample_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_subsample_data" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (CvDTreeNode *)(arg1)->subsample_data((CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_write_params(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_write_params",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_write_params" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_write_params" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  {
    try {
      (arg1)->write_params(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_read_params(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTreeTrainData_read_params",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_read_params" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_read_params" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTreeTrainData_read_params" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read_params(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_clear" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_num_classes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_get_num_classes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_num_classes" "', argument " "1"" of type '" "CvDTreeTrainData const *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    try {
      result = (int)((CvDTreeTrainData const *)arg1)->get_num_classes(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_var_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_get_var_type",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_var_type" "', argument " "1"" of type '" "CvDTreeTrainData const *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_get_var_type" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)((CvDTreeTrainData const *)arg1)->get_var_type(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_work_var_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_get_work_var_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_work_var_count" "', argument " "1"" of type '" "CvDTreeTrainData const *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    try {
      result = (int)((CvDTreeTrainData const *)arg1)->get_work_var_count(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_class_labels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_get_class_labels",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_class_labels" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_get_class_labels" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  {
    try {
      result = (int *)(arg1)->get_class_labels(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_ord_responses(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_get_ord_responses",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_ord_responses" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_get_ord_responses" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  {
    try {
      result = (float *)(arg1)->get_ord_responses(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_labels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_get_labels",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_labels" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_get_labels" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  {
    try {
      result = (int *)(arg1)->get_labels(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_cat_var_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTreeTrainData_get_cat_var_data",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_cat_var_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_get_cat_var_data" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_get_cat_var_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int *)(arg1)->get_cat_var_data(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_ord_var_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvPair32s32f *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTreeTrainData_get_ord_var_data",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_ord_var_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_get_ord_var_data" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_get_ord_var_data" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (CvPair32s32f *)(arg1)->get_ord_var_data(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvPair32s32f, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_get_child_buf_idx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_get_child_buf_idx",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_get_child_buf_idx" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_get_child_buf_idx" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  {
    try {
      result = (int)(arg1)->get_child_buf_idx(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_set_params(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeParams *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_set_params",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_set_params" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CvDTreeParams,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_set_params" "', argument " "2"" of type '" "CvDTreeParams const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvDTreeTrainData_set_params" "', argument " "2"" of type '" "CvDTreeParams const &""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeParams * >(argp2);
  {
    try {
      result = (bool)(arg1)->set_params((CvDTreeParams const &)*arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_new_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvDTreeTrainData_new_node",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_new_node" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_new_node" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_new_node" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CvDTreeTrainData_new_node" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvDTreeTrainData_new_node" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (CvDTreeNode *)(arg1)->new_node(arg2,arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_new_split_ord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CvDTreeSplit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvDTreeTrainData_new_split_ord",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_new_split_ord" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_new_split_ord" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_new_split_ord" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CvDTreeTrainData_new_split_ord" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvDTreeTrainData_new_split_ord" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CvDTreeTrainData_new_split_ord" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (CvDTreeSplit *)(arg1)->new_split_ord(arg2,arg3,arg4,arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_new_split_cat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvDTreeSplit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTreeTrainData_new_split_cat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_new_split_cat" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_new_split_cat" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTreeTrainData_new_split_cat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (CvDTreeSplit *)(arg1)->new_split_cat(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeSplit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_free_node_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_free_node_data",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_free_node_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_free_node_data" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  {
    try {
      (arg1)->free_node_data(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_free_train_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_free_train_data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_free_train_data" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    try {
      (arg1)->free_train_data(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_free_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_free_node",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_free_node" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_free_node" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  {
    try {
      (arg1)->free_node(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_sample_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_sample_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_sample_count_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_sample_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sample_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_sample_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_sample_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_sample_count_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (int) ((arg1)->sample_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_var_all_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_var_all_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_var_all_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_var_all_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->var_all = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_var_all_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_var_all_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_var_all_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (int) ((arg1)->var_all);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_var_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_var_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_var_count_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_var_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->var_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_var_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_var_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_var_count_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (int) ((arg1)->var_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_max_c_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_max_c_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_max_c_count_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_max_c_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->max_c_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_max_c_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_max_c_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_max_c_count_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (int) ((arg1)->max_c_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_ord_var_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_ord_var_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_ord_var_count_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_ord_var_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ord_var_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_ord_var_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_ord_var_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_ord_var_count_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (int) ((arg1)->ord_var_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cat_var_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_cat_var_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cat_var_count_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_cat_var_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->cat_var_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cat_var_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_cat_var_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cat_var_count_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (int) ((arg1)->cat_var_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_have_labels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_have_labels_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_have_labels_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_have_labels_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->have_labels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_have_labels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_have_labels_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_have_labels_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (bool) ((arg1)->have_labels);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_have_priors_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_have_priors_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_have_priors_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_have_priors_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->have_priors = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_have_priors_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_have_priors_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_have_priors_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (bool) ((arg1)->have_priors);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_is_classifier_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_is_classifier_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_is_classifier_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_is_classifier_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->is_classifier = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_is_classifier_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_is_classifier_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_is_classifier_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (bool) ((arg1)->is_classifier);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_buf_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_buf_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_buf_count_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_buf_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->buf_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_buf_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_buf_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_buf_count_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (int) ((arg1)->buf_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_buf_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_buf_size_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_buf_size_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_buf_size_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->buf_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_buf_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_buf_size_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_buf_size_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (int) ((arg1)->buf_size);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_shared_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_shared_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_shared_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvDTreeTrainData_shared_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->shared = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_shared_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_shared_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_shared_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (bool) ((arg1)->shared);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cat_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_cat_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cat_count_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_cat_count_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->cat_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cat_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_cat_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cat_count_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->cat_count);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cat_ofs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_cat_ofs_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cat_ofs_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_cat_ofs_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->cat_ofs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cat_ofs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_cat_ofs_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cat_ofs_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->cat_ofs);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cat_map_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_cat_map_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cat_map_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_cat_map_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->cat_map = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cat_map_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_cat_map_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cat_map_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->cat_map);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_counts_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_counts_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_counts_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_counts_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->counts = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_counts_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_counts_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_counts_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->counts);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_buf_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_buf_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_buf_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_buf_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->buf = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_buf_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_buf_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_buf_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->buf);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_direction_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_direction_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_direction_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_direction_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->direction = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_direction_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_direction_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_direction_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->direction);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_split_buf_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_split_buf_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_split_buf_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_split_buf_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->split_buf = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_split_buf_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_split_buf_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_split_buf_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->split_buf);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_var_idx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_var_idx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_var_idx_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_var_idx_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->var_idx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_var_idx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_var_idx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_var_idx_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->var_idx);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_var_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_var_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_var_type_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_var_type_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->var_type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_var_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_var_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_var_type_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->var_type);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_priors_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_priors_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_priors_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_priors_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->priors = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_priors_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_priors_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_priors_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->priors);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_priors_mult_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_priors_mult_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_priors_mult_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_priors_mult_set" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  if (arg1) (arg1)->priors_mult = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_priors_mult_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_priors_mult_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_priors_mult_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMat *) ((arg1)->priors_mult);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_params_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeParams *arg2 = (CvDTreeParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_params_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_params_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_params_set" "', argument " "2"" of type '" "CvDTreeParams *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeParams * >(argp2);
  if (arg1) (arg1)->params = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_params_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_params_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_params_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvDTreeParams *)& ((arg1)->params);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_tree_storage_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMemStorage *arg2 = (CvMemStorage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_tree_storage_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_tree_storage_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMemStorage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_tree_storage_set" "', argument " "2"" of type '" "CvMemStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvMemStorage * >(argp2);
  if (arg1) (arg1)->tree_storage = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_tree_storage_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMemStorage *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_tree_storage_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_tree_storage_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMemStorage *) ((arg1)->tree_storage);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMemStorage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_temp_storage_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvMemStorage *arg2 = (CvMemStorage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_temp_storage_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_temp_storage_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMemStorage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_temp_storage_set" "', argument " "2"" of type '" "CvMemStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvMemStorage * >(argp2);
  if (arg1) (arg1)->temp_storage = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_temp_storage_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMemStorage *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_temp_storage_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_temp_storage_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvMemStorage *) ((arg1)->temp_storage);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMemStorage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_data_root_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvDTreeNode *arg2 = (CvDTreeNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_data_root_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_data_root_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTreeTrainData_data_root_set" "', argument " "2"" of type '" "CvDTreeNode *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeNode * >(argp2);
  if (arg1) (arg1)->data_root = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_data_root_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_data_root_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_data_root_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvDTreeNode *) ((arg1)->data_root);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_node_heap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvSet *arg2 = (CvSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *ptr2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_node_heap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_node_heap_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    if( SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvSet, 0) == -1 &&
      SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvGraph, 0) == -1 &&
      SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvSubdiv2D, 0) == -1) 
    {
      SWIG_exception (SWIG_TypeError, "could not convert to CvSet");
      return NULL;
    }
    arg2 = (CvSet *)ptr2;
  }
  if (arg1) (arg1)->node_heap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_node_heap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSet *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_node_heap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_node_heap_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvSet *) ((arg1)->node_heap);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_split_heap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvSet *arg2 = (CvSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *ptr2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_split_heap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_split_heap_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    if( SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvSet, 0) == -1 &&
      SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvGraph, 0) == -1 &&
      SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvSubdiv2D, 0) == -1) 
    {
      SWIG_exception (SWIG_TypeError, "could not convert to CvSet");
      return NULL;
    }
    arg2 = (CvSet *)ptr2;
  }
  if (arg1) (arg1)->split_heap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_split_heap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSet *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_split_heap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_split_heap_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvSet *) ((arg1)->split_heap);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cv_heap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvSet *arg2 = (CvSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *ptr2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_cv_heap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cv_heap_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    if( SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvSet, 0) == -1 &&
      SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvGraph, 0) == -1 &&
      SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvSubdiv2D, 0) == -1) 
    {
      SWIG_exception (SWIG_TypeError, "could not convert to CvSet");
      return NULL;
    }
    arg2 = (CvSet *)ptr2;
  }
  if (arg1) (arg1)->cv_heap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_cv_heap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSet *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_cv_heap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_cv_heap_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvSet *) ((arg1)->cv_heap);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_nv_heap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvSet *arg2 = (CvSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *ptr2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_nv_heap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_nv_heap_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    if( SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvSet, 0) == -1 &&
      SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvGraph, 0) == -1 &&
      SWIG_ConvertPtr(obj1, &ptr2, SWIGTYPE_p_CvSubdiv2D, 0) == -1) 
    {
      SWIG_exception (SWIG_TypeError, "could not convert to CvSet");
      return NULL;
    }
    arg2 = (CvSet *)ptr2;
  }
  if (arg1) (arg1)->nv_heap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_nv_heap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSet *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_nv_heap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_nv_heap_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvSet *) ((arg1)->nv_heap);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_rng_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  CvRNG arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *vptr2 ;
  CvRNG_Wrapper *wrapper2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTreeTrainData_rng_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_rng_set" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  {
    if(SWIG_ConvertPtr(obj1, &vptr2, SWIGTYPE_p_CvRNG_Wrapper, 0)==-1){
      SWIG_exception( SWIG_TypeError, "could not convert Python object to C value");
      return NULL;
    }
    wrapper2 = (CvRNG_Wrapper *) vptr2;
    arg2 = wrapper2->ref();
  }
  if (arg1) (arg1)->rng = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTreeTrainData_rng_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTreeTrainData *arg1 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvRNG result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTreeTrainData_rng_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTreeTrainData_rng_get" "', argument " "1"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg1 = reinterpret_cast< CvDTreeTrainData * >(argp1);
  result = (CvRNG) ((arg1)->rng);
  {
    CvRNG_Wrapper * wrapper = new CvRNG_Wrapper( result );
    resultobj = SWIG_NewPointerObj( wrapper, SWIGTYPE_p_CvRNG_Wrapper, 1 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvDTreeTrainData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvDTreeTrainData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvDTree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvDTree")) SWIG_fail;
  {
    try {
      result = (CvDTree *)new CvDTree(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTree, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvDTree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvDTree",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvDTree" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvDTreeParams arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvDTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_train" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvDTree_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvDTreeParams,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvDTree_train" "', argument " "9"" of type '" "CvDTreeParams""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvDTree_train" "', argument " "9"" of type '" "CvDTreeParams""'");
    } else {
      CvDTreeParams * temp = reinterpret_cast< CvDTreeParams * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvDTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_train" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvDTree_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvDTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_train" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvDTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvDTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_train" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvDTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_train__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvDTree_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_train" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvDTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_train__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvDTree_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_train" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvDTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_train__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvDTreeTrainData *arg2 = (CvDTreeTrainData *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTree_train",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_train" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_train" "', argument " "2"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeTrainData * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTree_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (bool)(arg1)->train(arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvDTree_train__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvDTree_train__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvDTree_train__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvDTree_train__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CvDTree_train__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_CvDTree_train__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvDTreeParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_CvDTree_train__SWIG_0(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvDTree_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvDTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams)\n"
    "    train(CvDTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvDTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvDTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvDTree *,CvMat const *,int,CvMat const *,CvMat const *)\n"
    "    train(CvDTree *,CvMat const *,int,CvMat const *)\n"
    "    train(CvDTree *,CvDTreeTrainData *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_predict__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvDTree_predict",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_predict" "', argument " "1"" of type '" "CvDTree const *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTree_predict" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CvDTree_predict" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = (CvDTreeNode *)((CvDTree const *)arg1)->predict((CvMat const *)arg2,(CvMat const *)arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_predict__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTree_predict",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_predict" "', argument " "1"" of type '" "CvDTree const *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTree_predict" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (CvDTreeNode *)((CvDTree const *)arg1)->predict((CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_predict__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTree_predict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_predict" "', argument " "1"" of type '" "CvDTree const *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (CvDTreeNode *)((CvDTree const *)arg1)->predict((CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_predict(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvDTree_predict__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvDTree_predict__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CvDTree_predict__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvDTree_predict'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    predict(CvDTree const *,CvMat const *,CvMat const *,bool)\n"
    "    predict(CvDTree const *,CvMat const *,CvMat const *)\n"
    "    predict(CvDTree const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_get_var_importance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTree_get_var_importance",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_get_var_importance" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  {
    try {
      result = (CvMat *)(arg1)->get_var_importance(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTree_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_clear" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_read__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTree_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_read" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTree_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvDTree_write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_write" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_write" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTree_write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->write(arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_read__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  CvDTreeTrainData *arg4 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvDTree_read",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_read" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvDTree_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvDTree_read" "', argument " "4"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg4 = reinterpret_cast< CvDTreeTrainData * >(argp4);
  {
    try {
      (arg1)->read(arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_read(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvFileNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvDTree_read__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvFileNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvDTree_read__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvDTree_read'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    read(CvDTree *,CvFileStorage *,CvFileNode *)\n"
    "    read(CvDTree *,CvFileStorage *,CvFileNode *,CvDTreeTrainData *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvDTree_write",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_write" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvDTree_write" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  {
    try {
      (arg1)->write(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_write(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvDTree_write__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvDTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvDTree_write__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvDTree_write'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    write(CvDTree *,CvFileStorage *,char const *)\n"
    "    write(CvDTree *,CvFileStorage *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_get_root(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTree_get_root",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_get_root" "', argument " "1"" of type '" "CvDTree const *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  {
    try {
      result = (CvDTreeNode *)((CvDTree const *)arg1)->get_root(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_get_pruned_tree_idx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTree_get_pruned_tree_idx",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_get_pruned_tree_idx" "', argument " "1"" of type '" "CvDTree const *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  {
    try {
      result = (int)((CvDTree const *)arg1)->get_pruned_tree_idx(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvDTree_get_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvDTree *arg1 = (CvDTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvDTreeTrainData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvDTree_get_data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvDTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvDTree_get_data" "', argument " "1"" of type '" "CvDTree *""'"); 
  }
  arg1 = reinterpret_cast< CvDTree * >(argp1);
  {
    try {
      result = (CvDTreeTrainData *)(arg1)->get_data(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvDTree_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvDTree, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvForestTree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvForestTree")) SWIG_fail;
  {
    try {
      result = (CvForestTree *)new CvForestTree(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvForestTree, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvForestTree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvForestTree",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvForestTree" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvDTreeTrainData *arg2 = (CvDTreeTrainData *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvRTrees *arg4 = (CvRTrees *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvForestTree_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_train" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_train" "', argument " "2"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeTrainData * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvForestTree_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_train" "', argument " "4"" of type '" "CvRTrees *""'"); 
  }
  arg4 = reinterpret_cast< CvRTrees * >(argp4);
  {
    try {
      result = (bool)(arg1)->train(arg2,(CvMat const *)arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_get_var_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvForestTree_get_var_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_get_var_count" "', argument " "1"" of type '" "CvForestTree const *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  {
    try {
      result = (int)((CvForestTree const *)arg1)->get_var_count(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_read__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  CvRTrees *arg4 = (CvRTrees *) 0 ;
  CvDTreeTrainData *arg5 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvForestTree_read",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_read" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvForestTree_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_read" "', argument " "4"" of type '" "CvRTrees *""'"); 
  }
  arg4 = reinterpret_cast< CvRTrees * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvForestTree_read" "', argument " "5"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg5 = reinterpret_cast< CvDTreeTrainData * >(argp5);
  {
    try {
      (arg1)->read(arg2,arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvDTreeParams arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvForestTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_train" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvForestTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvForestTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvForestTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvForestTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvForestTree_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvDTreeParams,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvForestTree_train" "', argument " "9"" of type '" "CvDTreeParams""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvForestTree_train" "', argument " "9"" of type '" "CvDTreeParams""'");
    } else {
      CvDTreeParams * temp = reinterpret_cast< CvDTreeParams * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvForestTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_train" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvForestTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvForestTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvForestTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvForestTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvForestTree_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvForestTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_train" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvForestTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvForestTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvForestTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvForestTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvForestTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_train" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvForestTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvForestTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvForestTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvForestTree_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_train" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvForestTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvForestTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvForestTree_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_train" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvForestTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvDTreeTrainData *arg2 = (CvDTreeTrainData *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvForestTree_train",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_train" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_train" "', argument " "2"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeTrainData * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvForestTree_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (bool)(arg1)->train(arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvForestTree_train__SWIG_7(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvForestTree_train__SWIG_6(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvRTrees, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvForestTree_train__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvForestTree_train__SWIG_5(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvForestTree_train__SWIG_4(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CvForestTree_train__SWIG_3(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_CvForestTree_train__SWIG_2(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvDTreeParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_CvForestTree_train__SWIG_1(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvForestTree_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvForestTree *,CvDTreeTrainData *,CvMat const *,CvRTrees *)\n"
    "    train(CvForestTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams)\n"
    "    train(CvForestTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvForestTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvForestTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvForestTree *,CvMat const *,int,CvMat const *,CvMat const *)\n"
    "    train(CvForestTree *,CvMat const *,int,CvMat const *)\n"
    "    train(CvForestTree *,CvDTreeTrainData *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_read__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvForestTree_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_read" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvForestTree_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_read__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvForestTree *arg1 = (CvForestTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  CvDTreeTrainData *arg4 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvForestTree_read",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvForestTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvForestTree_read" "', argument " "1"" of type '" "CvForestTree *""'"); 
  }
  arg1 = reinterpret_cast< CvForestTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvForestTree_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvForestTree_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvForestTree_read" "', argument " "4"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg4 = reinterpret_cast< CvDTreeTrainData * >(argp4);
  {
    try {
      (arg1)->read(arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvForestTree_read(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvFileNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvForestTree_read__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvFileNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvForestTree_read__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvForestTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvFileNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvRTrees, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvForestTree_read__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvForestTree_read'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    read(CvForestTree *,CvFileStorage *,CvFileNode *,CvRTrees *,CvDTreeTrainData *)\n"
    "    read(CvForestTree *,CvFileStorage *,CvFileNode *)\n"
    "    read(CvForestTree *,CvFileStorage *,CvFileNode *,CvDTreeTrainData *)\n");
  return NULL;
}


SWIGINTERN PyObject *CvForestTree_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvForestTree, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvRTParams_calc_var_importance_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTParams *arg1 = (CvRTParams *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvRTParams_calc_var_importance_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTParams_calc_var_importance_set" "', argument " "1"" of type '" "CvRTParams *""'"); 
  }
  arg1 = reinterpret_cast< CvRTParams * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvRTParams_calc_var_importance_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->calc_var_importance = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTParams_calc_var_importance_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTParams *arg1 = (CvRTParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRTParams_calc_var_importance_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTParams_calc_var_importance_get" "', argument " "1"" of type '" "CvRTParams *""'"); 
  }
  arg1 = reinterpret_cast< CvRTParams * >(argp1);
  result = (bool) ((arg1)->calc_var_importance);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTParams_nactive_vars_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTParams *arg1 = (CvRTParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvRTParams_nactive_vars_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTParams_nactive_vars_set" "', argument " "1"" of type '" "CvRTParams *""'"); 
  }
  arg1 = reinterpret_cast< CvRTParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvRTParams_nactive_vars_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->nactive_vars = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTParams_nactive_vars_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTParams *arg1 = (CvRTParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRTParams_nactive_vars_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTParams_nactive_vars_get" "', argument " "1"" of type '" "CvRTParams *""'"); 
  }
  arg1 = reinterpret_cast< CvRTParams * >(argp1);
  result = (int) ((arg1)->nactive_vars);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTParams_term_crit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTParams *arg1 = (CvRTParams *) 0 ;
  CvTermCriteria *arg2 = (CvTermCriteria *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvRTParams_term_crit_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTParams_term_crit_set" "', argument " "1"" of type '" "CvRTParams *""'"); 
  }
  arg1 = reinterpret_cast< CvRTParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvTermCriteria, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTParams_term_crit_set" "', argument " "2"" of type '" "CvTermCriteria *""'"); 
  }
  arg2 = reinterpret_cast< CvTermCriteria * >(argp2);
  if (arg1) (arg1)->term_crit = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTParams_term_crit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTParams *arg1 = (CvRTParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvTermCriteria *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRTParams_term_crit_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTParams_term_crit_get" "', argument " "1"" of type '" "CvRTParams *""'"); 
  }
  arg1 = reinterpret_cast< CvRTParams * >(argp1);
  result = (CvTermCriteria *)& ((arg1)->term_crit);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvTermCriteria, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvRTParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvRTParams")) SWIG_fail;
  {
    try {
      result = (CvRTParams *)new CvRTParams(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvRTParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvRTParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  float arg3 ;
  bool arg4 ;
  int arg5 ;
  float *arg6 = (float *) 0 ;
  bool arg7 ;
  int arg8 ;
  int arg9 ;
  float arg10 ;
  int arg11 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  int val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  CvRTParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:new_CvRTParams",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvRTParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvRTParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvRTParams" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CvRTParams" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CvRTParams" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvRTParams" "', argument " "6"" of type '" "float const *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_CvRTParams" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_CvRTParams" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = static_cast< int >(val8);
  ecode9 = SWIG_AsVal_int(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_CvRTParams" "', argument " "9"" of type '" "int""'");
  } 
  arg9 = static_cast< int >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_CvRTParams" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_int(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_CvRTParams" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  {
    try {
      result = (CvRTParams *)new CvRTParams(arg1,arg2,arg3,arg4,arg5,(float const *)arg6,arg7,arg8,arg9,arg10,arg11); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvRTParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvRTParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[12];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 11); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvRTParams__SWIG_0(self, args);
  }
  if (argc == 11) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_float, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_int(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_int(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_int(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_new_CvRTParams__SWIG_1(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvRTParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvRTParams()\n"
    "    CvRTParams(int,int,float,bool,int,float const *,bool,int,int,float,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvRTParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTParams *arg1 = (CvRTParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvRTParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvRTParams" "', argument " "1"" of type '" "CvRTParams *""'"); 
  }
  arg1 = reinterpret_cast< CvRTParams * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvRTParams_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvRTParams, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvRTrees(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvRTrees")) SWIG_fail;
  {
    try {
      result = (CvRTrees *)new CvRTrees(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvRTrees, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvRTrees(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvRTrees",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvRTrees" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvRTParams arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvRTrees_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_train" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvRTrees_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvRTrees_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvRTrees_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvRTrees_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvRTrees_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvRTrees_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvRTParams,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvRTrees_train" "', argument " "9"" of type '" "CvRTParams""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvRTrees_train" "', argument " "9"" of type '" "CvRTParams""'");
    } else {
      CvRTParams * temp = reinterpret_cast< CvRTParams * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvRTrees_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_train" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvRTrees_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvRTrees_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvRTrees_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvRTrees_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvRTrees_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvRTrees_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvRTrees_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_train" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvRTrees_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvRTrees_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvRTrees_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvRTrees_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvRTrees_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvRTrees_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_train" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvRTrees_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvRTrees_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvRTrees_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvRTrees_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_train__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvRTrees_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_train" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvRTrees_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvRTrees_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvRTrees_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_train__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvRTrees_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_train" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvRTrees_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvRTrees_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvRTrees_train__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvRTrees_train__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvRTrees_train__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CvRTrees_train__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_CvRTrees_train__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvRTParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_CvRTrees_train__SWIG_0(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvRTrees_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvRTrees *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvRTParams)\n"
    "    train(CvRTrees *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvRTrees *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvRTrees *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvRTrees *,CvMat const *,int,CvMat const *,CvMat const *)\n"
    "    train(CvRTrees *,CvMat const *,int,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_predict__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvRTrees_predict",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_predict" "', argument " "1"" of type '" "CvRTrees const *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvRTrees_predict" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (float)((CvRTrees const *)arg1)->predict((CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_predict__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvRTrees_predict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_predict" "', argument " "1"" of type '" "CvRTrees const *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (float)((CvRTrees const *)arg1)->predict((CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_predict(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvRTrees_predict__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvRTrees_predict__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvRTrees_predict'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    predict(CvRTrees const *,CvMat const *,CvMat const *)\n"
    "    predict(CvRTrees const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRTrees_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_clear" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_var_importance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRTrees_get_var_importance",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_get_var_importance" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  {
    try {
      result = (CvMat *)(arg1)->get_var_importance(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_proximity__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvRTrees_get_proximity",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_get_proximity" "', argument " "1"" of type '" "CvRTrees const *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_get_proximity" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvRTrees_get_proximity" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvRTrees_get_proximity" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvRTrees_get_proximity" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (float)((CvRTrees const *)arg1)->get_proximity((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_proximity__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvRTrees_get_proximity",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_get_proximity" "', argument " "1"" of type '" "CvRTrees const *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_get_proximity" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvRTrees_get_proximity" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvRTrees_get_proximity" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (float)((CvRTrees const *)arg1)->get_proximity((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_proximity__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvRTrees_get_proximity",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_get_proximity" "', argument " "1"" of type '" "CvRTrees const *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_get_proximity" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvRTrees_get_proximity" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (float)((CvRTrees const *)arg1)->get_proximity((CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_proximity(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvRTrees_get_proximity__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvRTrees_get_proximity__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvRTrees, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvRTrees_get_proximity__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvRTrees_get_proximity'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    get_proximity(CvRTrees const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    get_proximity(CvRTrees const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    get_proximity(CvRTrees const *,CvMat const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvRTrees_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_read" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvRTrees_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvRTrees_write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_write" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvRTrees_write" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvRTrees_write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->write(arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_active_var_mask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRTrees_get_active_var_mask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_get_active_var_mask" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  {
    try {
      result = (CvMat *)(arg1)->get_active_var_mask(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_rng(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvRNG *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRTrees_get_rng",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_get_rng" "', argument " "1"" of type '" "CvRTrees *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  {
    try {
      result = (CvRNG *)(arg1)->get_rng(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  {
    CvRNG_Wrapper * wrapper = new CvRNG_Wrapper( *(result) );
    resultobj = SWIG_NewPointerObj( wrapper, SWIGTYPE_p_CvRNG_Wrapper, 1 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_tree_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvRTrees_get_tree_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_get_tree_count" "', argument " "1"" of type '" "CvRTrees const *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  {
    try {
      result = (int)((CvRTrees const *)arg1)->get_tree_count(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvRTrees_get_tree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvRTrees *arg1 = (CvRTrees *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvForestTree *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvRTrees_get_tree",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvRTrees, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvRTrees_get_tree" "', argument " "1"" of type '" "CvRTrees const *""'"); 
  }
  arg1 = reinterpret_cast< CvRTrees * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvRTrees_get_tree" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (CvForestTree *)((CvRTrees const *)arg1)->get_tree(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvForestTree, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvRTrees_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvRTrees, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CvBoostParams_boost_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvBoostParams_boost_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostParams_boost_type_set" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvBoostParams_boost_type_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->boost_type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostParams_boost_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoostParams_boost_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostParams_boost_type_get" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  result = (int) ((arg1)->boost_type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostParams_weak_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvBoostParams_weak_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostParams_weak_count_set" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvBoostParams_weak_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->weak_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostParams_weak_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoostParams_weak_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostParams_weak_count_get" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  result = (int) ((arg1)->weak_count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostParams_split_criteria_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvBoostParams_split_criteria_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostParams_split_criteria_set" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvBoostParams_split_criteria_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->split_criteria = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostParams_split_criteria_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoostParams_split_criteria_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostParams_split_criteria_get" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  result = (int) ((arg1)->split_criteria);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostParams_weight_trim_rate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvBoostParams_weight_trim_rate_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostParams_weight_trim_rate_set" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvBoostParams_weight_trim_rate_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->weight_trim_rate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostParams_weight_trim_rate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoostParams_weight_trim_rate_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostParams_weight_trim_rate_get" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  result = (double) ((arg1)->weight_trim_rate);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoostParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvBoostParams")) SWIG_fail;
  {
    try {
      result = (CvBoostParams *)new CvBoostParams(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoostParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoostParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  double arg3 ;
  int arg4 ;
  bool arg5 ;
  float *arg6 = (float *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CvBoostParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_CvBoostParams",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CvBoostParams" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvBoostParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvBoostParams" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CvBoostParams" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CvBoostParams" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvBoostParams" "', argument " "6"" of type '" "float const *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      result = (CvBoostParams *)new CvBoostParams(arg1,arg2,arg3,arg4,arg5,(float const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoostParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoostParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvBoostParams__SWIG_0(self, args);
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_float, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_CvBoostParams__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvBoostParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvBoostParams()\n"
    "    CvBoostParams(int,int,double,int,bool,float const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvBoostParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostParams *arg1 = (CvBoostParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvBoostParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvBoostParams" "', argument " "1"" of type '" "CvBoostParams *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostParams * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvBoostParams_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvBoostParams, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvBoostTree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvBoostTree")) SWIG_fail;
  {
    try {
      result = (CvBoostTree *)new CvBoostTree(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoostTree, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvBoostTree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvBoostTree",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvBoostTree" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvDTreeTrainData *arg2 = (CvDTreeTrainData *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvBoost *arg4 = (CvBoost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvBoostTree_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_train" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_train" "', argument " "2"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeTrainData * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoostTree_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_train" "', argument " "4"" of type '" "CvBoost *""'"); 
  }
  arg4 = reinterpret_cast< CvBoost * >(argp4);
  {
    try {
      result = (bool)(arg1)->train(arg2,(CvMat const *)arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvBoostTree_scale",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_scale" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvBoostTree_scale" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->scale(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_read__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  CvBoost *arg4 = (CvBoost *) 0 ;
  CvDTreeTrainData *arg5 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvBoostTree_read",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_read" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoostTree_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_read" "', argument " "4"" of type '" "CvBoost *""'"); 
  }
  arg4 = reinterpret_cast< CvBoost * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoostTree_read" "', argument " "5"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg5 = reinterpret_cast< CvDTreeTrainData * >(argp5);
  {
    try {
      (arg1)->read(arg2,arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoostTree_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_clear" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvDTreeParams arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvBoostTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_train" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoostTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoostTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoostTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvBoostTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvBoostTree_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvDTreeParams,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvBoostTree_train" "', argument " "9"" of type '" "CvDTreeParams""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvBoostTree_train" "', argument " "9"" of type '" "CvDTreeParams""'");
    } else {
      CvDTreeParams * temp = reinterpret_cast< CvDTreeParams * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvBoostTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_train" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoostTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoostTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoostTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvBoostTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvBoostTree_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvBoostTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_train" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoostTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoostTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoostTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvBoostTree_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvBoostTree_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_train" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoostTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoostTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoostTree_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvBoostTree_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_train" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoostTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoostTree_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvBoostTree_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_train" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoostTree_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvDTreeTrainData *arg2 = (CvDTreeTrainData *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvBoostTree_train",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_train" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_train" "', argument " "2"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg2 = reinterpret_cast< CvDTreeTrainData * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoostTree_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (bool)(arg1)->train(arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvBoostTree_train__SWIG_7(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvBoostTree_train__SWIG_6(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvBoost, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvBoostTree_train__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvBoostTree_train__SWIG_5(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvBoostTree_train__SWIG_4(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CvBoostTree_train__SWIG_3(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_CvBoostTree_train__SWIG_2(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvDTreeParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_CvBoostTree_train__SWIG_1(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvBoostTree_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvBoostTree *,CvDTreeTrainData *,CvMat const *,CvBoost *)\n"
    "    train(CvBoostTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvDTreeParams)\n"
    "    train(CvBoostTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvBoostTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvBoostTree *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvBoostTree *,CvMat const *,int,CvMat const *,CvMat const *)\n"
    "    train(CvBoostTree *,CvMat const *,int,CvMat const *)\n"
    "    train(CvBoostTree *,CvDTreeTrainData *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_read__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvBoostTree_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_read" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoostTree_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_read__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoostTree *arg1 = (CvBoostTree *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  CvDTreeTrainData *arg4 = (CvDTreeTrainData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvBoostTree_read",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoostTree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoostTree_read" "', argument " "1"" of type '" "CvBoostTree *""'"); 
  }
  arg1 = reinterpret_cast< CvBoostTree * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoostTree_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoostTree_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvDTreeTrainData, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoostTree_read" "', argument " "4"" of type '" "CvDTreeTrainData *""'"); 
  }
  arg4 = reinterpret_cast< CvDTreeTrainData * >(argp4);
  {
    try {
      (arg1)->read(arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoostTree_read(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvFileNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvBoostTree_read__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvFileNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvBoostTree_read__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoostTree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvFileStorage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvFileNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvBoost, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvDTreeTrainData, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvBoostTree_read__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvBoostTree_read'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    read(CvBoostTree *,CvFileStorage *,CvFileNode *,CvBoost *,CvDTreeTrainData *)\n"
    "    read(CvBoostTree *,CvFileStorage *,CvFileNode *)\n"
    "    read(CvBoostTree *,CvFileStorage *,CvFileNode *,CvDTreeTrainData *)\n");
  return NULL;
}


SWIGINTERN PyObject *CvBoostTree_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvBoostTree, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvBoost__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvBoost")) SWIG_fail;
  {
    try {
      result = (CvBoost *)new CvBoost(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoost, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvBoost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvBoost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvBoost" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoost__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvBoostParams arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  CvBoost *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_CvBoost",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvBoost" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvBoost" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvBoost" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvBoost" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvBoost" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvBoost" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_CvBoost" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_CvBoostParams,  0  | 0);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_CvBoost" "', argument " "8"" of type '" "CvBoostParams""'"); 
    }  
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvBoost" "', argument " "8"" of type '" "CvBoostParams""'");
    } else {
      CvBoostParams * temp = reinterpret_cast< CvBoostParams * >(argp8);
      arg8 = *temp;
      if (SWIG_IsNewObj(res8)) delete temp;
    }
  }
  {
    try {
      result = (CvBoost *)new CvBoost((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoost, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoost__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  CvBoost *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_CvBoost",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvBoost" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvBoost" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvBoost" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvBoost" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvBoost" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvBoost" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_CvBoost" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (CvBoost *)new CvBoost((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoost, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoost__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CvBoost *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_CvBoost",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvBoost" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvBoost" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvBoost" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvBoost" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvBoost" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CvBoost" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (CvBoost *)new CvBoost((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoost, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoost__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CvBoost *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CvBoost",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvBoost" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvBoost" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvBoost" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvBoost" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CvBoost" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (CvBoost *)new CvBoost((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoost, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoost__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvBoost *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvBoost",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvBoost" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvBoost" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvBoost" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CvBoost" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (CvBoost *)new CvBoost((CvMat const *)arg1,arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoost, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoost__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvBoost *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvBoost",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvBoost" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvBoost" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CvBoost" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (CvBoost *)new CvBoost((CvMat const *)arg1,arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoost, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvBoost(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 8); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvBoost__SWIG_0(self, args);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CvBoost__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_CvBoost__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_CvBoost__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_CvBoost__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_CvBoost__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_CvBoostParams, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_new_CvBoost__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvBoost'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvBoost()\n"
    "    CvBoost(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvBoostParams)\n"
    "    CvBoost(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvBoost(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvBoost(CvMat const *,int,CvMat const *,CvMat const *,CvMat const *)\n"
    "    CvBoost(CvMat const *,int,CvMat const *,CvMat const *)\n"
    "    CvBoost(CvMat const *,int,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvBoostParams arg9 ;
  bool arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:CvBoost_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_train" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoost_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoost_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoost_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvBoost_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvBoost_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvBoostParams,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvBoost_train" "', argument " "9"" of type '" "CvBoostParams""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvBoost_train" "', argument " "9"" of type '" "CvBoostParams""'");
    } else {
      CvBoostParams * temp = reinterpret_cast< CvBoostParams * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "CvBoost_train" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,arg9,arg10); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  CvBoostParams arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CvBoost_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_train" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoost_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoost_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoost_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvBoost_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvBoost_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_CvBoostParams,  0  | 0);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "CvBoost_train" "', argument " "9"" of type '" "CvBoostParams""'"); 
    }  
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvBoost_train" "', argument " "9"" of type '" "CvBoostParams""'");
    } else {
      CvBoostParams * temp = reinterpret_cast< CvBoostParams * >(argp9);
      arg9 = *temp;
      if (SWIG_IsNewObj(res9)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8,arg9); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  CvMat *arg8 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CvBoost_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_train" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoost_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoost_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoost_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvBoost_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CvBoost_train" "', argument " "8"" of type '" "CvMat const *""'"); 
  }
  arg8 = reinterpret_cast< CvMat * >(argp8);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7,(CvMat const *)arg8); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  CvMat *arg7 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvBoost_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_train" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoost_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoost_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoost_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CvBoost_train" "', argument " "7"" of type '" "CvMat const *""'"); 
  }
  arg7 = reinterpret_cast< CvMat * >(argp7);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6,(CvMat const *)arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_train__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvBoost_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_train" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoost_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoost_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvBoost_train" "', argument " "6"" of type '" "CvMat const *""'"); 
  }
  arg6 = reinterpret_cast< CvMat * >(argp6);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5,(CvMat const *)arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_train__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvBoost_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_train" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoost_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoost_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_train__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvBoost_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_train" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvBoost_train" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (bool)(arg1)->train((CvMat const *)arg2,arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[11];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 10); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvBoost_train__SWIG_6(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvBoost_train__SWIG_5(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvBoost_train__SWIG_4(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CvBoost_train__SWIG_3(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_CvBoost_train__SWIG_2(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvBoostParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_CvBoost_train__SWIG_1(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CvMat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CvMat, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CvMat, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_CvBoostParams, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_CvBoost_train__SWIG_0(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvBoost_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvBoost *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvBoostParams,bool)\n"
    "    train(CvBoost *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvBoostParams)\n"
    "    train(CvBoost *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvBoost *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvBoost *,CvMat const *,int,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvBoost *,CvMat const *,int,CvMat const *,CvMat const *)\n"
    "    train(CvBoost *,CvMat const *,int,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_predict__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvSlice arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvBoost_predict",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_predict" "', argument " "1"" of type '" "CvBoost const *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoost_predict" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_predict" "', argument " "4"" of type '" "CvMat *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_CvSlice,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoost_predict" "', argument " "5"" of type '" "CvSlice""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvBoost_predict" "', argument " "5"" of type '" "CvSlice""'");
    } else {
      CvSlice * temp = reinterpret_cast< CvSlice * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CvBoost_predict" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    try {
      result = (float)((CvBoost const *)arg1)->predict((CvMat const *)arg2,(CvMat const *)arg3,arg4,arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_predict__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvSlice arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvBoost_predict",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_predict" "', argument " "1"" of type '" "CvBoost const *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoost_predict" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_predict" "', argument " "4"" of type '" "CvMat *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_CvSlice,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvBoost_predict" "', argument " "5"" of type '" "CvSlice""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvBoost_predict" "', argument " "5"" of type '" "CvSlice""'");
    } else {
      CvSlice * temp = reinterpret_cast< CvSlice * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      result = (float)((CvBoost const *)arg1)->predict((CvMat const *)arg2,(CvMat const *)arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_predict__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvBoost_predict",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_predict" "', argument " "1"" of type '" "CvBoost const *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoost_predict" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvBoost_predict" "', argument " "4"" of type '" "CvMat *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (float)((CvBoost const *)arg1)->predict((CvMat const *)arg2,(CvMat const *)arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_predict__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvBoost_predict",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_predict" "', argument " "1"" of type '" "CvBoost const *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoost_predict" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (float)((CvBoost const *)arg1)->predict((CvMat const *)arg2,(CvMat const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_predict__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvBoost_predict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_predict" "', argument " "1"" of type '" "CvBoost const *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      result = (float)((CvBoost const *)arg1)->predict((CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_predict(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvBoost_predict__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CvBoost_predict__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvBoost_predict__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_CvSlice, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvBoost_predict__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvBoost, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_CvSlice, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_CvBoost_predict__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvBoost_predict'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    predict(CvBoost const *,CvMat const *,CvMat const *,CvMat *,CvSlice,bool)\n"
    "    predict(CvBoost const *,CvMat const *,CvMat const *,CvMat *,CvSlice)\n"
    "    predict(CvBoost const *,CvMat const *,CvMat const *,CvMat *)\n"
    "    predict(CvBoost const *,CvMat const *,CvMat const *)\n"
    "    predict(CvBoost const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_prune(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvSlice arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvBoost_prune",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_prune" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CvSlice,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_prune" "', argument " "2"" of type '" "CvSlice""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvBoost_prune" "', argument " "2"" of type '" "CvSlice""'");
    } else {
      CvSlice * temp = reinterpret_cast< CvSlice * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (arg1)->prune(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoost_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_clear" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvBoost_write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_write" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_write" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoost_write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->write(arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvBoost_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_read" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvBoost_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvBoost_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_get_weak_predictors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvSeq *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoost_get_weak_predictors",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_get_weak_predictors" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  {
    try {
      result = (CvSeq *)(arg1)->get_weak_predictors(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvSeq, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_get_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoost_get_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_get_weights" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  {
    try {
      result = (CvMat *)(arg1)->get_weights(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_get_subtree_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoost_get_subtree_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_get_subtree_weights" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  {
    try {
      result = (CvMat *)(arg1)->get_subtree_weights(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_get_weak_response(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoost_get_weak_response",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_get_weak_response" "', argument " "1"" of type '" "CvBoost *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  {
    try {
      result = (CvMat *)(arg1)->get_weak_response(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvBoost_get_params(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvBoost *arg1 = (CvBoost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvBoostParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvBoost_get_params",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvBoost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvBoost_get_params" "', argument " "1"" of type '" "CvBoost const *""'"); 
  }
  arg1 = reinterpret_cast< CvBoost * >(argp1);
  {
    try {
      {
        CvBoostParams const &_result_ref = ((CvBoost const *)arg1)->get_params();
        result = (CvBoostParams *) &_result_ref;
      } 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvBoostParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvBoost_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvBoost, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvANN_MLP_TrainParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvANN_MLP_TrainParams")) SWIG_fail;
  {
    try {
      result = (CvANN_MLP_TrainParams *)new CvANN_MLP_TrainParams(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvANN_MLP_TrainParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvANN_MLP_TrainParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvTermCriteria arg1 ;
  int arg2 ;
  double arg3 ;
  double arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvANN_MLP_TrainParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvANN_MLP_TrainParams",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CvTermCriteria,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvANN_MLP_TrainParams" "', argument " "1"" of type '" "CvTermCriteria""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvANN_MLP_TrainParams" "', argument " "1"" of type '" "CvTermCriteria""'");
    } else {
      CvTermCriteria * temp = reinterpret_cast< CvTermCriteria * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvANN_MLP_TrainParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvANN_MLP_TrainParams" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CvANN_MLP_TrainParams" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (CvANN_MLP_TrainParams *)new CvANN_MLP_TrainParams(arg1,arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvANN_MLP_TrainParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvANN_MLP_TrainParams__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvTermCriteria arg1 ;
  int arg2 ;
  double arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvANN_MLP_TrainParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvANN_MLP_TrainParams",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CvTermCriteria,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvANN_MLP_TrainParams" "', argument " "1"" of type '" "CvTermCriteria""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CvANN_MLP_TrainParams" "', argument " "1"" of type '" "CvTermCriteria""'");
    } else {
      CvTermCriteria * temp = reinterpret_cast< CvTermCriteria * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvANN_MLP_TrainParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvANN_MLP_TrainParams" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (CvANN_MLP_TrainParams *)new CvANN_MLP_TrainParams(arg1,arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvANN_MLP_TrainParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvANN_MLP_TrainParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvANN_MLP_TrainParams__SWIG_0(self, args);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_CvTermCriteria, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CvANN_MLP_TrainParams__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_CvTermCriteria, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_CvANN_MLP_TrainParams__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvANN_MLP_TrainParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvANN_MLP_TrainParams()\n"
    "    CvANN_MLP_TrainParams(CvTermCriteria,int,double,double)\n"
    "    CvANN_MLP_TrainParams(CvTermCriteria,int,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvANN_MLP_TrainParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvANN_MLP_TrainParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvANN_MLP_TrainParams" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_term_crit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  CvTermCriteria *arg2 = (CvTermCriteria *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_term_crit_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_term_crit_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvTermCriteria, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_TrainParams_term_crit_set" "', argument " "2"" of type '" "CvTermCriteria *""'"); 
  }
  arg2 = reinterpret_cast< CvTermCriteria * >(argp2);
  if (arg1) (arg1)->term_crit = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_term_crit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvTermCriteria *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_term_crit_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_term_crit_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (CvTermCriteria *)& ((arg1)->term_crit);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvTermCriteria, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_train_method_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_train_method_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_train_method_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_TrainParams_train_method_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->train_method = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_train_method_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_train_method_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_train_method_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (int) ((arg1)->train_method);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_bp_dw_scale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_bp_dw_scale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_bp_dw_scale_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_TrainParams_bp_dw_scale_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->bp_dw_scale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_bp_dw_scale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_bp_dw_scale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_bp_dw_scale_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (double) ((arg1)->bp_dw_scale);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_bp_moment_scale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_bp_moment_scale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_bp_moment_scale_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_TrainParams_bp_moment_scale_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->bp_moment_scale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_bp_moment_scale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_bp_moment_scale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_bp_moment_scale_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (double) ((arg1)->bp_moment_scale);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_rp_dw0_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw0_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_TrainParams_rp_dw0_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->rp_dw0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_rp_dw0_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw0_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (double) ((arg1)->rp_dw0);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw_plus_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_rp_dw_plus_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw_plus_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_TrainParams_rp_dw_plus_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->rp_dw_plus = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw_plus_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_rp_dw_plus_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw_plus_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (double) ((arg1)->rp_dw_plus);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw_minus_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_rp_dw_minus_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw_minus_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_TrainParams_rp_dw_minus_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->rp_dw_minus = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw_minus_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_rp_dw_minus_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw_minus_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (double) ((arg1)->rp_dw_minus);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw_min_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_rp_dw_min_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw_min_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_TrainParams_rp_dw_min_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->rp_dw_min = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw_min_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_rp_dw_min_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw_min_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (double) ((arg1)->rp_dw_min);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw_max_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_TrainParams_rp_dw_max_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw_max_set" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_TrainParams_rp_dw_max_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->rp_dw_max = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_TrainParams_rp_dw_max_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP_TrainParams *arg1 = (CvANN_MLP_TrainParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_TrainParams_rp_dw_max_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP_TrainParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_TrainParams_rp_dw_max_get" "', argument " "1"" of type '" "CvANN_MLP_TrainParams *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP_TrainParams * >(argp1);
  result = (double) ((arg1)->rp_dw_max);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvANN_MLP_TrainParams_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvANN_MLP_TrainParams, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CvANN_MLP__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CvANN_MLP")) SWIG_fail;
  {
    try {
      result = (CvANN_MLP *)new CvANN_MLP(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvANN_MLP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvANN_MLP__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CvANN_MLP *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CvANN_MLP",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvANN_MLP" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvANN_MLP" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvANN_MLP" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CvANN_MLP" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (CvANN_MLP *)new CvANN_MLP((CvMat const *)arg1,arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvANN_MLP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvANN_MLP__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CvANN_MLP *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CvANN_MLP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvANN_MLP" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvANN_MLP" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CvANN_MLP" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (CvANN_MLP *)new CvANN_MLP((CvMat const *)arg1,arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvANN_MLP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvANN_MLP__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CvANN_MLP *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CvANN_MLP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvANN_MLP" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CvANN_MLP" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (CvANN_MLP *)new CvANN_MLP((CvMat const *)arg1,arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvANN_MLP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvANN_MLP__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvANN_MLP *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CvANN_MLP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CvANN_MLP" "', argument " "1"" of type '" "CvMat const *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  {
    try {
      result = (CvANN_MLP *)new CvANN_MLP((CvMat const *)arg1); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvANN_MLP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CvANN_MLP(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CvANN_MLP__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CvANN_MLP__SWIG_4(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_CvANN_MLP__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CvANN_MLP__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_CvANN_MLP__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CvANN_MLP'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CvANN_MLP()\n"
    "    CvANN_MLP(CvMat const *,int,double,double)\n"
    "    CvANN_MLP(CvMat const *,int,double)\n"
    "    CvANN_MLP(CvMat const *,int)\n"
    "    CvANN_MLP(CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CvANN_MLP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CvANN_MLP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CvANN_MLP" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  {
    try {
      delete arg1; 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_create__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvANN_MLP_create",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_create" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_create" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvANN_MLP_create" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CvANN_MLP_create" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CvANN_MLP_create" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      (arg1)->create((CvMat const *)arg2,arg3,arg4,arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_create__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvANN_MLP_create",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_create" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_create" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvANN_MLP_create" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CvANN_MLP_create" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      (arg1)->create((CvMat const *)arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_create__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvANN_MLP_create",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_create" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_create" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CvANN_MLP_create" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      (arg1)->create((CvMat const *)arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_create__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_create",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_create" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_create" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  {
    try {
      (arg1)->create((CvMat const *)arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_create(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvANN_MLP, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CvANN_MLP_create__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvANN_MLP, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CvANN_MLP_create__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvANN_MLP, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CvANN_MLP_create__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvANN_MLP, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CvANN_MLP_create__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvANN_MLP_create'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    create(CvANN_MLP *,CvMat const *,int,double,double)\n"
    "    create(CvANN_MLP *,CvMat const *,int,double)\n"
    "    create(CvANN_MLP *,CvMat const *,int)\n"
    "    create(CvANN_MLP *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_train__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvANN_MLP_TrainParams arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CvANN_MLP_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_train" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvANN_MLP_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvANN_MLP_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvANN_MLP_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvANN_MLP_TrainParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvANN_MLP_train" "', argument " "6"" of type '" "CvANN_MLP_TrainParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvANN_MLP_train" "', argument " "6"" of type '" "CvANN_MLP_TrainParams""'");
    } else {
      CvANN_MLP_TrainParams * temp = reinterpret_cast< CvANN_MLP_TrainParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CvANN_MLP_train" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (int)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6,arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_train__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvANN_MLP_TrainParams arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CvANN_MLP_train",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_train" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvANN_MLP_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvANN_MLP_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvANN_MLP_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_CvANN_MLP_TrainParams,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CvANN_MLP_train" "', argument " "6"" of type '" "CvANN_MLP_TrainParams""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CvANN_MLP_train" "', argument " "6"" of type '" "CvANN_MLP_TrainParams""'");
    } else {
      CvANN_MLP_TrainParams * temp = reinterpret_cast< CvANN_MLP_TrainParams * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  {
    try {
      result = (int)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_train__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  CvMat *arg5 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CvANN_MLP_train",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_train" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvANN_MLP_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvANN_MLP_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CvANN_MLP_train" "', argument " "5"" of type '" "CvMat const *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  {
    try {
      result = (int)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4,(CvMat const *)arg5); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_train__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvMat *arg4 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CvANN_MLP_train",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_train" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_train" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvANN_MLP_train" "', argument " "3"" of type '" "CvMat const *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CvANN_MLP_train" "', argument " "4"" of type '" "CvMat const *""'"); 
  }
  arg4 = reinterpret_cast< CvMat * >(argp4);
  {
    try {
      result = (int)(arg1)->train((CvMat const *)arg2,(CvMat const *)arg3,(CvMat const *)arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_train(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 7); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvANN_MLP, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CvANN_MLP_train__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvANN_MLP, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CvANN_MLP_train__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvANN_MLP, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvANN_MLP_TrainParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CvANN_MLP_train__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CvANN_MLP, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CvMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CvMat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CvMat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CvMat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_CvANN_MLP_TrainParams, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_CvANN_MLP_train__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CvANN_MLP_train'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    train(CvANN_MLP *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvANN_MLP_TrainParams,int)\n"
    "    train(CvANN_MLP *,CvMat const *,CvMat const *,CvMat const *,CvMat const *,CvANN_MLP_TrainParams)\n"
    "    train(CvANN_MLP *,CvMat const *,CvMat const *,CvMat const *,CvMat const *)\n"
    "    train(CvANN_MLP *,CvMat const *,CvMat const *,CvMat const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_predict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvANN_MLP_predict",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_predict" "', argument " "1"" of type '" "CvANN_MLP const *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_predict" "', argument " "2"" of type '" "CvMat const *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvANN_MLP_predict" "', argument " "3"" of type '" "CvMat *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  {
    try {
      result = (float)((CvANN_MLP const *)arg1)->predict((CvMat const *)arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_clear" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  {
    try {
      (arg1)->clear(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  CvFileNode *arg3 = (CvFileNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvANN_MLP_read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_read" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_read" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvFileNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvANN_MLP_read" "', argument " "3"" of type '" "CvFileNode *""'"); 
  }
  arg3 = reinterpret_cast< CvFileNode * >(argp3);
  {
    try {
      (arg1)->read(arg2,arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CvANN_MLP_write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_write" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvFileStorage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CvANN_MLP_write" "', argument " "2"" of type '" "CvFileStorage *""'"); 
  }
  arg2 = reinterpret_cast< CvFileStorage * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CvANN_MLP_write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->write(arg2,(char const *)arg3); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_get_layer_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_get_layer_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_get_layer_count" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  {
    try {
      result = (int)(arg1)->get_layer_count(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_get_layer_sizes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CvMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CvANN_MLP_get_layer_sizes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_get_layer_sizes" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  {
    try {
      result = (CvMat *)(arg1)->get_layer_sizes(); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CvMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CvANN_MLP_get_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvANN_MLP *arg1 = (CvANN_MLP *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CvANN_MLP_get_weights",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvANN_MLP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CvANN_MLP_get_weights" "', argument " "1"" of type '" "CvANN_MLP *""'"); 
  }
  arg1 = reinterpret_cast< CvANN_MLP * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CvANN_MLP_get_weights" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (double *)(arg1)->get_weights(arg2); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CvANN_MLP_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CvANN_MLP, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_cvRandMVNormal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat *arg1 = (CvMat *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  CvMat *arg3 = (CvMat *) 0 ;
  CvRNG *arg4 = (CvRNG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *vptr4 ;
  CvRNG_Wrapper *wrapper4 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO|O:cvRandMVNormal",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cvRandMVNormal" "', argument " "1"" of type '" "CvMat *""'"); 
  }
  arg1 = reinterpret_cast< CvMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cvRandMVNormal" "', argument " "2"" of type '" "CvMat *""'"); 
  }
  arg2 = reinterpret_cast< CvMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "cvRandMVNormal" "', argument " "3"" of type '" "CvMat *""'"); 
  }
  arg3 = reinterpret_cast< CvMat * >(argp3);
  if (obj3) {
    {
      if(SWIG_ConvertPtr(obj3, &vptr4, SWIGTYPE_p_CvRNG_Wrapper, 0)==-1){
        SWIG_exception( SWIG_TypeError, "could not convert Python object to C value");
        return NULL;
      }
      wrapper4 = (CvRNG_Wrapper *) vptr4;
      arg4 = wrapper4->ptr();
    }
  }
  {
    try {
      cvRandMVNormal(arg1,arg2,arg3,arg4); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_cvRandGaussMixture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CvMat **arg1 ;
  CvMat **arg2 ;
  float *arg3 ;
  int arg4 ;
  CvMat *arg5 = (CvMat *) 0 ;
  CvMat *arg6 = (CvMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO|O:cvRandGaussMixture",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cvRandGaussMixture" "', argument " "1"" of type '" "CvMat *[]""'"); 
  } 
  arg1 = reinterpret_cast< CvMat ** >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cvRandGaussMixture" "', argument " "2"" of type '" "CvMat *[]""'"); 
  } 
  arg2 = reinterpret_cast< CvMat ** >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "cvRandGaussMixture" "', argument " "3"" of type '" "float []""'"); 
  } 
  arg3 = reinterpret_cast< float * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "cvRandGaussMixture" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "cvRandGaussMixture" "', argument " "5"" of type '" "CvMat *""'"); 
  }
  arg5 = reinterpret_cast< CvMat * >(argp5);
  if (obj5) {
    res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CvMat, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "cvRandGaussMixture" "', argument " "6"" of type '" "CvMat *""'"); 
    }
    arg6 = reinterpret_cast< CvMat * >(argp6);
  }
  {
    try {
      cvRandGaussMixture(arg1,arg2,arg3,arg4,arg5,arg6); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_cvCreateTestSet__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  CvMat **arg2 = (CvMat **) 0 ;
  int arg3 ;
  int arg4 ;
  CvMat **arg5 = (CvMat **) 0 ;
  int arg6 ;
  void *arg7 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:cvCreateTestSet",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "cvCreateTestSet" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cvCreateTestSet" "', argument " "2"" of type '" "CvMat **""'"); 
  }
  arg2 = reinterpret_cast< CvMat ** >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "cvCreateTestSet" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "cvCreateTestSet" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_p_CvMat, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "cvCreateTestSet" "', argument " "5"" of type '" "CvMat **""'"); 
  }
  arg5 = reinterpret_cast< CvMat ** >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "cvCreateTestSet" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      cvCreateTestSet(arg1,arg2,arg3,arg4,arg5,arg6,arg7); 
    } 
    catch (...) 
    {
      SWIG_fail;
    } 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_cvCreateTestSet(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,6);
  varargs = PyTuple_GetSlice(args,6,PyTuple_Size(args)+1);
  resultobj = _wrap_cvCreateTestSet__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"new_CvRNG_Wrapper", _wrap_new_CvRNG_Wrapper, METH_VARARGS, NULL},
	 { (char *)"CvRNG_Wrapper_ptr", _wrap_CvRNG_Wrapper_ptr, METH_VARARGS, NULL},
	 { (char *)"CvRNG_Wrapper_ref", _wrap_CvRNG_Wrapper_ref, METH_VARARGS, NULL},
	 { (char *)"CvRNG_Wrapper___eq__", _wrap_CvRNG_Wrapper___eq__, METH_VARARGS, NULL},
	 { (char *)"CvRNG_Wrapper___ne__", _wrap_CvRNG_Wrapper___ne__, METH_VARARGS, NULL},
	 { (char *)"delete_CvRNG_Wrapper", _wrap_delete_CvRNG_Wrapper, METH_VARARGS, NULL},
	 { (char *)"CvRNG_Wrapper_swigregister", CvRNG_Wrapper_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvSubdiv2DEdge_Wrapper", _wrap_new_CvSubdiv2DEdge_Wrapper, METH_VARARGS, NULL},
	 { (char *)"CvSubdiv2DEdge_Wrapper_ptr", _wrap_CvSubdiv2DEdge_Wrapper_ptr, METH_VARARGS, NULL},
	 { (char *)"CvSubdiv2DEdge_Wrapper_ref", _wrap_CvSubdiv2DEdge_Wrapper_ref, METH_VARARGS, NULL},
	 { (char *)"CvSubdiv2DEdge_Wrapper___eq__", _wrap_CvSubdiv2DEdge_Wrapper___eq__, METH_VARARGS, NULL},
	 { (char *)"CvSubdiv2DEdge_Wrapper___ne__", _wrap_CvSubdiv2DEdge_Wrapper___ne__, METH_VARARGS, NULL},
	 { (char *)"delete_CvSubdiv2DEdge_Wrapper", _wrap_delete_CvSubdiv2DEdge_Wrapper, METH_VARARGS, NULL},
	 { (char *)"CvSubdiv2DEdge_Wrapper_swigregister", CvSubdiv2DEdge_Wrapper_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvVectors_type_set", _wrap_CvVectors_type_set, METH_VARARGS, NULL},
	 { (char *)"CvVectors_type_get", _wrap_CvVectors_type_get, METH_VARARGS, NULL},
	 { (char *)"CvVectors_dims_set", _wrap_CvVectors_dims_set, METH_VARARGS, NULL},
	 { (char *)"CvVectors_dims_get", _wrap_CvVectors_dims_get, METH_VARARGS, NULL},
	 { (char *)"CvVectors_count_set", _wrap_CvVectors_count_set, METH_VARARGS, NULL},
	 { (char *)"CvVectors_count_get", _wrap_CvVectors_count_get, METH_VARARGS, NULL},
	 { (char *)"CvVectors_next_set", _wrap_CvVectors_next_set, METH_VARARGS, NULL},
	 { (char *)"CvVectors_next_get", _wrap_CvVectors_next_get, METH_VARARGS, NULL},
	 { (char *)"CvVectors_data_get", _wrap_CvVectors_data_get, METH_VARARGS, NULL},
	 { (char *)"new_CvVectors", _wrap_new_CvVectors, METH_VARARGS, NULL},
	 { (char *)"delete_CvVectors", _wrap_delete_CvVectors, METH_VARARGS, NULL},
	 { (char *)"CvVectors_swigregister", CvVectors_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvVectors_data_ptr_set", _wrap_CvVectors_data_ptr_set, METH_VARARGS, NULL},
	 { (char *)"CvVectors_data_ptr_get", _wrap_CvVectors_data_ptr_get, METH_VARARGS, NULL},
	 { (char *)"CvVectors_data_fl_set", _wrap_CvVectors_data_fl_set, METH_VARARGS, NULL},
	 { (char *)"CvVectors_data_fl_get", _wrap_CvVectors_data_fl_get, METH_VARARGS, NULL},
	 { (char *)"CvVectors_data_db_set", _wrap_CvVectors_data_db_set, METH_VARARGS, NULL},
	 { (char *)"CvVectors_data_db_get", _wrap_CvVectors_data_db_get, METH_VARARGS, NULL},
	 { (char *)"new_CvVectors_data", _wrap_new_CvVectors_data, METH_VARARGS, NULL},
	 { (char *)"delete_CvVectors_data", _wrap_delete_CvVectors_data, METH_VARARGS, NULL},
	 { (char *)"CvVectors_data_swigregister", CvVectors_data_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvStatModel", _wrap_new_CvStatModel, METH_VARARGS, NULL},
	 { (char *)"delete_CvStatModel", _wrap_delete_CvStatModel, METH_VARARGS, NULL},
	 { (char *)"CvStatModel_clear", _wrap_CvStatModel_clear, METH_VARARGS, NULL},
	 { (char *)"CvStatModel_save", _wrap_CvStatModel_save, METH_VARARGS, NULL},
	 { (char *)"CvStatModel_load", _wrap_CvStatModel_load, METH_VARARGS, NULL},
	 { (char *)"CvStatModel_write", _wrap_CvStatModel_write, METH_VARARGS, NULL},
	 { (char *)"CvStatModel_read", _wrap_CvStatModel_read, METH_VARARGS, NULL},
	 { (char *)"CvStatModel_swigregister", CvStatModel_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvParamGrid", _wrap_new_CvParamGrid, METH_VARARGS, NULL},
	 { (char *)"CvParamGrid_check", _wrap_CvParamGrid_check, METH_VARARGS, NULL},
	 { (char *)"CvParamGrid_min_val_set", _wrap_CvParamGrid_min_val_set, METH_VARARGS, NULL},
	 { (char *)"CvParamGrid_min_val_get", _wrap_CvParamGrid_min_val_get, METH_VARARGS, NULL},
	 { (char *)"CvParamGrid_max_val_set", _wrap_CvParamGrid_max_val_set, METH_VARARGS, NULL},
	 { (char *)"CvParamGrid_max_val_get", _wrap_CvParamGrid_max_val_get, METH_VARARGS, NULL},
	 { (char *)"CvParamGrid_step_set", _wrap_CvParamGrid_step_set, METH_VARARGS, NULL},
	 { (char *)"CvParamGrid_step_get", _wrap_CvParamGrid_step_get, METH_VARARGS, NULL},
	 { (char *)"delete_CvParamGrid", _wrap_delete_CvParamGrid, METH_VARARGS, NULL},
	 { (char *)"CvParamGrid_swigregister", CvParamGrid_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_CvNormalBayesClassifier", _wrap_delete_CvNormalBayesClassifier, METH_VARARGS, NULL},
	 { (char *)"new_CvNormalBayesClassifier", _wrap_new_CvNormalBayesClassifier, METH_VARARGS, NULL},
	 { (char *)"CvNormalBayesClassifier_train", _wrap_CvNormalBayesClassifier_train, METH_VARARGS, NULL},
	 { (char *)"CvNormalBayesClassifier_predict", _wrap_CvNormalBayesClassifier_predict, METH_VARARGS, NULL},
	 { (char *)"CvNormalBayesClassifier_clear", _wrap_CvNormalBayesClassifier_clear, METH_VARARGS, NULL},
	 { (char *)"CvNormalBayesClassifier_write", _wrap_CvNormalBayesClassifier_write, METH_VARARGS, NULL},
	 { (char *)"CvNormalBayesClassifier_read", _wrap_CvNormalBayesClassifier_read, METH_VARARGS, NULL},
	 { (char *)"CvNormalBayesClassifier_swigregister", CvNormalBayesClassifier_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_CvKNearest", _wrap_delete_CvKNearest, METH_VARARGS, NULL},
	 { (char *)"new_CvKNearest", _wrap_new_CvKNearest, METH_VARARGS, NULL},
	 { (char *)"CvKNearest_train", _wrap_CvKNearest_train, METH_VARARGS, NULL},
	 { (char *)"CvKNearest_find_nearest", _wrap_CvKNearest_find_nearest, METH_VARARGS, NULL},
	 { (char *)"CvKNearest_clear", _wrap_CvKNearest_clear, METH_VARARGS, NULL},
	 { (char *)"CvKNearest_get_max_k", _wrap_CvKNearest_get_max_k, METH_VARARGS, NULL},
	 { (char *)"CvKNearest_get_var_count", _wrap_CvKNearest_get_var_count, METH_VARARGS, NULL},
	 { (char *)"CvKNearest_get_sample_count", _wrap_CvKNearest_get_sample_count, METH_VARARGS, NULL},
	 { (char *)"CvKNearest_is_regression", _wrap_CvKNearest_is_regression, METH_VARARGS, NULL},
	 { (char *)"CvKNearest_swigregister", CvKNearest_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvSVMParams", _wrap_new_CvSVMParams, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_svm_type_set", _wrap_CvSVMParams_svm_type_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_svm_type_get", _wrap_CvSVMParams_svm_type_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_kernel_type_set", _wrap_CvSVMParams_kernel_type_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_kernel_type_get", _wrap_CvSVMParams_kernel_type_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_degree_set", _wrap_CvSVMParams_degree_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_degree_get", _wrap_CvSVMParams_degree_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_gamma_set", _wrap_CvSVMParams_gamma_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_gamma_get", _wrap_CvSVMParams_gamma_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_coef0_set", _wrap_CvSVMParams_coef0_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_coef0_get", _wrap_CvSVMParams_coef0_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_C_set", _wrap_CvSVMParams_C_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_C_get", _wrap_CvSVMParams_C_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_nu_set", _wrap_CvSVMParams_nu_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_nu_get", _wrap_CvSVMParams_nu_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_p_set", _wrap_CvSVMParams_p_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_p_get", _wrap_CvSVMParams_p_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_class_weights_set", _wrap_CvSVMParams_class_weights_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_class_weights_get", _wrap_CvSVMParams_class_weights_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_term_crit_set", _wrap_CvSVMParams_term_crit_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_term_crit_get", _wrap_CvSVMParams_term_crit_get, METH_VARARGS, NULL},
	 { (char *)"delete_CvSVMParams", _wrap_delete_CvSVMParams, METH_VARARGS, NULL},
	 { (char *)"CvSVMParams_swigregister", CvSVMParams_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvSVMKernel", _wrap_new_CvSVMKernel, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_create", _wrap_CvSVMKernel_create, METH_VARARGS, NULL},
	 { (char *)"delete_CvSVMKernel", _wrap_delete_CvSVMKernel, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_clear", _wrap_CvSVMKernel_clear, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_calc", _wrap_CvSVMKernel_calc, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_params_set", _wrap_CvSVMKernel_params_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_params_get", _wrap_CvSVMKernel_params_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_calc_func_set", _wrap_CvSVMKernel_calc_func_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_calc_func_get", _wrap_CvSVMKernel_calc_func_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_calc_non_rbf_base", _wrap_CvSVMKernel_calc_non_rbf_base, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_calc_linear", _wrap_CvSVMKernel_calc_linear, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_calc_rbf", _wrap_CvSVMKernel_calc_rbf, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_calc_poly", _wrap_CvSVMKernel_calc_poly, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_calc_sigmoid", _wrap_CvSVMKernel_calc_sigmoid, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernel_swigregister", CvSVMKernel_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernelRow_prev_set", _wrap_CvSVMKernelRow_prev_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernelRow_prev_get", _wrap_CvSVMKernelRow_prev_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernelRow_next_set", _wrap_CvSVMKernelRow_next_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernelRow_next_get", _wrap_CvSVMKernelRow_next_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernelRow_data_set", _wrap_CvSVMKernelRow_data_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernelRow_data_get", _wrap_CvSVMKernelRow_data_get, METH_VARARGS, NULL},
	 { (char *)"new_CvSVMKernelRow", _wrap_new_CvSVMKernelRow, METH_VARARGS, NULL},
	 { (char *)"delete_CvSVMKernelRow", _wrap_delete_CvSVMKernelRow, METH_VARARGS, NULL},
	 { (char *)"CvSVMKernelRow_swigregister", CvSVMKernelRow_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_obj_set", _wrap_CvSVMSolutionInfo_obj_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_obj_get", _wrap_CvSVMSolutionInfo_obj_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_rho_set", _wrap_CvSVMSolutionInfo_rho_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_rho_get", _wrap_CvSVMSolutionInfo_rho_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_upper_bound_p_set", _wrap_CvSVMSolutionInfo_upper_bound_p_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_upper_bound_p_get", _wrap_CvSVMSolutionInfo_upper_bound_p_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_upper_bound_n_set", _wrap_CvSVMSolutionInfo_upper_bound_n_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_upper_bound_n_get", _wrap_CvSVMSolutionInfo_upper_bound_n_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_r_set", _wrap_CvSVMSolutionInfo_r_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_r_get", _wrap_CvSVMSolutionInfo_r_get, METH_VARARGS, NULL},
	 { (char *)"new_CvSVMSolutionInfo", _wrap_new_CvSVMSolutionInfo, METH_VARARGS, NULL},
	 { (char *)"delete_CvSVMSolutionInfo", _wrap_delete_CvSVMSolutionInfo, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolutionInfo_swigregister", CvSVMSolutionInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvSVMSolver", _wrap_new_CvSVMSolver, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_create", _wrap_CvSVMSolver_create, METH_VARARGS, NULL},
	 { (char *)"delete_CvSVMSolver", _wrap_delete_CvSVMSolver, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_clear", _wrap_CvSVMSolver_clear, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_solve_generic", _wrap_CvSVMSolver_solve_generic, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_solve_c_svc", _wrap_CvSVMSolver_solve_c_svc, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_solve_nu_svc", _wrap_CvSVMSolver_solve_nu_svc, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_solve_one_class", _wrap_CvSVMSolver_solve_one_class, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_solve_eps_svr", _wrap_CvSVMSolver_solve_eps_svr, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_solve_nu_svr", _wrap_CvSVMSolver_solve_nu_svr, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_get_row_base", _wrap_CvSVMSolver_get_row_base, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_get_row", _wrap_CvSVMSolver_get_row, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_sample_count_set", _wrap_CvSVMSolver_sample_count_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_sample_count_get", _wrap_CvSVMSolver_sample_count_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_var_count_set", _wrap_CvSVMSolver_var_count_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_var_count_get", _wrap_CvSVMSolver_var_count_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_cache_size_set", _wrap_CvSVMSolver_cache_size_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_cache_size_get", _wrap_CvSVMSolver_cache_size_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_cache_line_size_set", _wrap_CvSVMSolver_cache_line_size_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_cache_line_size_get", _wrap_CvSVMSolver_cache_line_size_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_samples_set", _wrap_CvSVMSolver_samples_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_samples_get", _wrap_CvSVMSolver_samples_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_params_set", _wrap_CvSVMSolver_params_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_params_get", _wrap_CvSVMSolver_params_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_storage_set", _wrap_CvSVMSolver_storage_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_storage_get", _wrap_CvSVMSolver_storage_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_lru_list_set", _wrap_CvSVMSolver_lru_list_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_lru_list_get", _wrap_CvSVMSolver_lru_list_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_rows_set", _wrap_CvSVMSolver_rows_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_rows_get", _wrap_CvSVMSolver_rows_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_alpha_count_set", _wrap_CvSVMSolver_alpha_count_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_alpha_count_get", _wrap_CvSVMSolver_alpha_count_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_G_set", _wrap_CvSVMSolver_G_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_G_get", _wrap_CvSVMSolver_G_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_alpha_set", _wrap_CvSVMSolver_alpha_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_alpha_get", _wrap_CvSVMSolver_alpha_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_alpha_status_set", _wrap_CvSVMSolver_alpha_status_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_alpha_status_get", _wrap_CvSVMSolver_alpha_status_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_y_set", _wrap_CvSVMSolver_y_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_y_get", _wrap_CvSVMSolver_y_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_b_set", _wrap_CvSVMSolver_b_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_b_get", _wrap_CvSVMSolver_b_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_buf_set", _wrap_CvSVMSolver_buf_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_buf_get", _wrap_CvSVMSolver_buf_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_eps_set", _wrap_CvSVMSolver_eps_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_eps_get", _wrap_CvSVMSolver_eps_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_max_iter_set", _wrap_CvSVMSolver_max_iter_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_max_iter_get", _wrap_CvSVMSolver_max_iter_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_C_set", _wrap_CvSVMSolver_C_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_C_get", _wrap_CvSVMSolver_C_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_kernel_set", _wrap_CvSVMSolver_kernel_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_kernel_get", _wrap_CvSVMSolver_kernel_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_select_working_set_func_set", _wrap_CvSVMSolver_select_working_set_func_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_select_working_set_func_get", _wrap_CvSVMSolver_select_working_set_func_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_calc_rho_func_set", _wrap_CvSVMSolver_calc_rho_func_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_calc_rho_func_get", _wrap_CvSVMSolver_calc_rho_func_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_get_row_func_set", _wrap_CvSVMSolver_get_row_func_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_get_row_func_get", _wrap_CvSVMSolver_get_row_func_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_select_working_set", _wrap_CvSVMSolver_select_working_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_select_working_set_nu_svm", _wrap_CvSVMSolver_select_working_set_nu_svm, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_calc_rho", _wrap_CvSVMSolver_calc_rho, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_calc_rho_nu_svm", _wrap_CvSVMSolver_calc_rho_nu_svm, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_get_row_svc", _wrap_CvSVMSolver_get_row_svc, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_get_row_one_class", _wrap_CvSVMSolver_get_row_one_class, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_get_row_svr", _wrap_CvSVMSolver_get_row_svr, METH_VARARGS, NULL},
	 { (char *)"CvSVMSolver_swigregister", CvSVMSolver_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_rho_set", _wrap_CvSVMDecisionFunc_rho_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_rho_get", _wrap_CvSVMDecisionFunc_rho_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_sv_count_set", _wrap_CvSVMDecisionFunc_sv_count_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_sv_count_get", _wrap_CvSVMDecisionFunc_sv_count_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_alpha_set", _wrap_CvSVMDecisionFunc_alpha_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_alpha_get", _wrap_CvSVMDecisionFunc_alpha_get, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_sv_index_set", _wrap_CvSVMDecisionFunc_sv_index_set, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_sv_index_get", _wrap_CvSVMDecisionFunc_sv_index_get, METH_VARARGS, NULL},
	 { (char *)"new_CvSVMDecisionFunc", _wrap_new_CvSVMDecisionFunc, METH_VARARGS, NULL},
	 { (char *)"delete_CvSVMDecisionFunc", _wrap_delete_CvSVMDecisionFunc, METH_VARARGS, NULL},
	 { (char *)"CvSVMDecisionFunc_swigregister", CvSVMDecisionFunc_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_CvSVM", _wrap_delete_CvSVM, METH_VARARGS, NULL},
	 { (char *)"new_CvSVM", _wrap_new_CvSVM, METH_VARARGS, NULL},
	 { (char *)"CvSVM_train", _wrap_CvSVM_train, METH_VARARGS, NULL},
	 { (char *)"CvSVM_train_auto", _wrap_CvSVM_train_auto, METH_VARARGS, NULL},
	 { (char *)"CvSVM_predict", _wrap_CvSVM_predict, METH_VARARGS, NULL},
	 { (char *)"CvSVM_get_support_vector_count", _wrap_CvSVM_get_support_vector_count, METH_VARARGS, NULL},
	 { (char *)"CvSVM_get_support_vector", _wrap_CvSVM_get_support_vector, METH_VARARGS, NULL},
	 { (char *)"CvSVM_get_params", _wrap_CvSVM_get_params, METH_VARARGS, NULL},
	 { (char *)"CvSVM_clear", _wrap_CvSVM_clear, METH_VARARGS, NULL},
	 { (char *)"CvSVM_get_default_grid", _wrap_CvSVM_get_default_grid, METH_VARARGS, NULL},
	 { (char *)"CvSVM_write", _wrap_CvSVM_write, METH_VARARGS, NULL},
	 { (char *)"CvSVM_read", _wrap_CvSVM_read, METH_VARARGS, NULL},
	 { (char *)"CvSVM_get_var_count", _wrap_CvSVM_get_var_count, METH_VARARGS, NULL},
	 { (char *)"CvSVM_swigregister", CvSVM_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvEMParams", _wrap_new_CvEMParams, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_nclusters_set", _wrap_CvEMParams_nclusters_set, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_nclusters_get", _wrap_CvEMParams_nclusters_get, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_cov_mat_type_set", _wrap_CvEMParams_cov_mat_type_set, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_cov_mat_type_get", _wrap_CvEMParams_cov_mat_type_get, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_start_step_set", _wrap_CvEMParams_start_step_set, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_start_step_get", _wrap_CvEMParams_start_step_get, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_probs_set", _wrap_CvEMParams_probs_set, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_probs_get", _wrap_CvEMParams_probs_get, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_weights_set", _wrap_CvEMParams_weights_set, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_weights_get", _wrap_CvEMParams_weights_get, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_means_set", _wrap_CvEMParams_means_set, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_means_get", _wrap_CvEMParams_means_get, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_covs_set", _wrap_CvEMParams_covs_set, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_covs_get", _wrap_CvEMParams_covs_get, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_term_crit_set", _wrap_CvEMParams_term_crit_set, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_term_crit_get", _wrap_CvEMParams_term_crit_get, METH_VARARGS, NULL},
	 { (char *)"delete_CvEMParams", _wrap_delete_CvEMParams, METH_VARARGS, NULL},
	 { (char *)"CvEMParams_swigregister", CvEMParams_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvEM", _wrap_new_CvEM, METH_VARARGS, NULL},
	 { (char *)"delete_CvEM", _wrap_delete_CvEM, METH_VARARGS, NULL},
	 { (char *)"CvEM_train", _wrap_CvEM_train, METH_VARARGS, NULL},
	 { (char *)"CvEM_predict", _wrap_CvEM_predict, METH_VARARGS, NULL},
	 { (char *)"CvEM_clear", _wrap_CvEM_clear, METH_VARARGS, NULL},
	 { (char *)"CvEM_get_nclusters", _wrap_CvEM_get_nclusters, METH_VARARGS, NULL},
	 { (char *)"CvEM_get_means", _wrap_CvEM_get_means, METH_VARARGS, NULL},
	 { (char *)"CvEM_get_weights", _wrap_CvEM_get_weights, METH_VARARGS, NULL},
	 { (char *)"CvEM_get_probs", _wrap_CvEM_get_probs, METH_VARARGS, NULL},
	 { (char *)"CvEM_get_log_likelihood", _wrap_CvEM_get_log_likelihood, METH_VARARGS, NULL},
	 { (char *)"CvEM_get_covs", _wrap_CvEM_get_covs, METH_VARARGS, NULL},
	 { (char *)"CvEM_swigregister", CvEM_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvPair32s32f_i_set", _wrap_CvPair32s32f_i_set, METH_VARARGS, NULL},
	 { (char *)"CvPair32s32f_i_get", _wrap_CvPair32s32f_i_get, METH_VARARGS, NULL},
	 { (char *)"CvPair32s32f_val_set", _wrap_CvPair32s32f_val_set, METH_VARARGS, NULL},
	 { (char *)"CvPair32s32f_val_get", _wrap_CvPair32s32f_val_get, METH_VARARGS, NULL},
	 { (char *)"new_CvPair32s32f", _wrap_new_CvPair32s32f, METH_VARARGS, NULL},
	 { (char *)"delete_CvPair32s32f", _wrap_delete_CvPair32s32f, METH_VARARGS, NULL},
	 { (char *)"CvPair32s32f_swigregister", CvPair32s32f_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_var_idx_set", _wrap_CvDTreeSplit_var_idx_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_var_idx_get", _wrap_CvDTreeSplit_var_idx_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_inversed_set", _wrap_CvDTreeSplit_inversed_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_inversed_get", _wrap_CvDTreeSplit_inversed_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_quality_set", _wrap_CvDTreeSplit_quality_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_quality_get", _wrap_CvDTreeSplit_quality_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_next_set", _wrap_CvDTreeSplit_next_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_next_get", _wrap_CvDTreeSplit_next_get, METH_VARARGS, NULL},
	 { (char *)"new_CvDTreeSplit", _wrap_new_CvDTreeSplit, METH_VARARGS, NULL},
	 { (char *)"delete_CvDTreeSplit", _wrap_delete_CvDTreeSplit, METH_VARARGS, NULL},
	 { (char *)"CvDTreeSplit_swigregister", CvDTreeSplit_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_class_idx_set", _wrap_CvDTreeNode_class_idx_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_class_idx_get", _wrap_CvDTreeNode_class_idx_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_Tn_set", _wrap_CvDTreeNode_Tn_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_Tn_get", _wrap_CvDTreeNode_Tn_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_value_set", _wrap_CvDTreeNode_value_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_value_get", _wrap_CvDTreeNode_value_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_parent_set", _wrap_CvDTreeNode_parent_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_parent_get", _wrap_CvDTreeNode_parent_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_left_set", _wrap_CvDTreeNode_left_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_left_get", _wrap_CvDTreeNode_left_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_right_set", _wrap_CvDTreeNode_right_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_right_get", _wrap_CvDTreeNode_right_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_split_set", _wrap_CvDTreeNode_split_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_split_get", _wrap_CvDTreeNode_split_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_sample_count_set", _wrap_CvDTreeNode_sample_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_sample_count_get", _wrap_CvDTreeNode_sample_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_depth_set", _wrap_CvDTreeNode_depth_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_depth_get", _wrap_CvDTreeNode_depth_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_num_valid_set", _wrap_CvDTreeNode_num_valid_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_num_valid_get", _wrap_CvDTreeNode_num_valid_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_offset_set", _wrap_CvDTreeNode_offset_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_offset_get", _wrap_CvDTreeNode_offset_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_buf_idx_set", _wrap_CvDTreeNode_buf_idx_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_buf_idx_get", _wrap_CvDTreeNode_buf_idx_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_maxlr_set", _wrap_CvDTreeNode_maxlr_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_maxlr_get", _wrap_CvDTreeNode_maxlr_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_complexity_set", _wrap_CvDTreeNode_complexity_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_complexity_get", _wrap_CvDTreeNode_complexity_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_alpha_set", _wrap_CvDTreeNode_alpha_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_alpha_get", _wrap_CvDTreeNode_alpha_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_node_risk_set", _wrap_CvDTreeNode_node_risk_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_node_risk_get", _wrap_CvDTreeNode_node_risk_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_tree_risk_set", _wrap_CvDTreeNode_tree_risk_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_tree_risk_get", _wrap_CvDTreeNode_tree_risk_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_tree_error_set", _wrap_CvDTreeNode_tree_error_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_tree_error_get", _wrap_CvDTreeNode_tree_error_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_cv_Tn_set", _wrap_CvDTreeNode_cv_Tn_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_cv_Tn_get", _wrap_CvDTreeNode_cv_Tn_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_cv_node_risk_set", _wrap_CvDTreeNode_cv_node_risk_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_cv_node_risk_get", _wrap_CvDTreeNode_cv_node_risk_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_cv_node_error_set", _wrap_CvDTreeNode_cv_node_error_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_cv_node_error_get", _wrap_CvDTreeNode_cv_node_error_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_get_num_valid", _wrap_CvDTreeNode_get_num_valid, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_set_num_valid", _wrap_CvDTreeNode_set_num_valid, METH_VARARGS, NULL},
	 { (char *)"new_CvDTreeNode", _wrap_new_CvDTreeNode, METH_VARARGS, NULL},
	 { (char *)"delete_CvDTreeNode", _wrap_delete_CvDTreeNode, METH_VARARGS, NULL},
	 { (char *)"CvDTreeNode_swigregister", CvDTreeNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_max_categories_set", _wrap_CvDTreeParams_max_categories_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_max_categories_get", _wrap_CvDTreeParams_max_categories_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_max_depth_set", _wrap_CvDTreeParams_max_depth_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_max_depth_get", _wrap_CvDTreeParams_max_depth_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_min_sample_count_set", _wrap_CvDTreeParams_min_sample_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_min_sample_count_get", _wrap_CvDTreeParams_min_sample_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_cv_folds_set", _wrap_CvDTreeParams_cv_folds_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_cv_folds_get", _wrap_CvDTreeParams_cv_folds_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_use_surrogates_set", _wrap_CvDTreeParams_use_surrogates_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_use_surrogates_get", _wrap_CvDTreeParams_use_surrogates_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_use_1se_rule_set", _wrap_CvDTreeParams_use_1se_rule_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_use_1se_rule_get", _wrap_CvDTreeParams_use_1se_rule_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_truncate_pruned_tree_set", _wrap_CvDTreeParams_truncate_pruned_tree_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_truncate_pruned_tree_get", _wrap_CvDTreeParams_truncate_pruned_tree_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_regression_accuracy_set", _wrap_CvDTreeParams_regression_accuracy_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_regression_accuracy_get", _wrap_CvDTreeParams_regression_accuracy_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_priors_set", _wrap_CvDTreeParams_priors_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_priors_get", _wrap_CvDTreeParams_priors_get, METH_VARARGS, NULL},
	 { (char *)"new_CvDTreeParams", _wrap_new_CvDTreeParams, METH_VARARGS, NULL},
	 { (char *)"delete_CvDTreeParams", _wrap_delete_CvDTreeParams, METH_VARARGS, NULL},
	 { (char *)"CvDTreeParams_swigregister", CvDTreeParams_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvDTreeTrainData", _wrap_new_CvDTreeTrainData, METH_VARARGS, NULL},
	 { (char *)"delete_CvDTreeTrainData", _wrap_delete_CvDTreeTrainData, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_set_data", _wrap_CvDTreeTrainData_set_data, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_vectors", _wrap_CvDTreeTrainData_get_vectors, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_subsample_data", _wrap_CvDTreeTrainData_subsample_data, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_write_params", _wrap_CvDTreeTrainData_write_params, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_read_params", _wrap_CvDTreeTrainData_read_params, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_clear", _wrap_CvDTreeTrainData_clear, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_num_classes", _wrap_CvDTreeTrainData_get_num_classes, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_var_type", _wrap_CvDTreeTrainData_get_var_type, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_work_var_count", _wrap_CvDTreeTrainData_get_work_var_count, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_class_labels", _wrap_CvDTreeTrainData_get_class_labels, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_ord_responses", _wrap_CvDTreeTrainData_get_ord_responses, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_labels", _wrap_CvDTreeTrainData_get_labels, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_cat_var_data", _wrap_CvDTreeTrainData_get_cat_var_data, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_ord_var_data", _wrap_CvDTreeTrainData_get_ord_var_data, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_get_child_buf_idx", _wrap_CvDTreeTrainData_get_child_buf_idx, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_set_params", _wrap_CvDTreeTrainData_set_params, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_new_node", _wrap_CvDTreeTrainData_new_node, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_new_split_ord", _wrap_CvDTreeTrainData_new_split_ord, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_new_split_cat", _wrap_CvDTreeTrainData_new_split_cat, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_free_node_data", _wrap_CvDTreeTrainData_free_node_data, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_free_train_data", _wrap_CvDTreeTrainData_free_train_data, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_free_node", _wrap_CvDTreeTrainData_free_node, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_sample_count_set", _wrap_CvDTreeTrainData_sample_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_sample_count_get", _wrap_CvDTreeTrainData_sample_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_var_all_set", _wrap_CvDTreeTrainData_var_all_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_var_all_get", _wrap_CvDTreeTrainData_var_all_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_var_count_set", _wrap_CvDTreeTrainData_var_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_var_count_get", _wrap_CvDTreeTrainData_var_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_max_c_count_set", _wrap_CvDTreeTrainData_max_c_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_max_c_count_get", _wrap_CvDTreeTrainData_max_c_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_ord_var_count_set", _wrap_CvDTreeTrainData_ord_var_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_ord_var_count_get", _wrap_CvDTreeTrainData_ord_var_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cat_var_count_set", _wrap_CvDTreeTrainData_cat_var_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cat_var_count_get", _wrap_CvDTreeTrainData_cat_var_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_have_labels_set", _wrap_CvDTreeTrainData_have_labels_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_have_labels_get", _wrap_CvDTreeTrainData_have_labels_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_have_priors_set", _wrap_CvDTreeTrainData_have_priors_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_have_priors_get", _wrap_CvDTreeTrainData_have_priors_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_is_classifier_set", _wrap_CvDTreeTrainData_is_classifier_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_is_classifier_get", _wrap_CvDTreeTrainData_is_classifier_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_buf_count_set", _wrap_CvDTreeTrainData_buf_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_buf_count_get", _wrap_CvDTreeTrainData_buf_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_buf_size_set", _wrap_CvDTreeTrainData_buf_size_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_buf_size_get", _wrap_CvDTreeTrainData_buf_size_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_shared_set", _wrap_CvDTreeTrainData_shared_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_shared_get", _wrap_CvDTreeTrainData_shared_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cat_count_set", _wrap_CvDTreeTrainData_cat_count_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cat_count_get", _wrap_CvDTreeTrainData_cat_count_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cat_ofs_set", _wrap_CvDTreeTrainData_cat_ofs_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cat_ofs_get", _wrap_CvDTreeTrainData_cat_ofs_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cat_map_set", _wrap_CvDTreeTrainData_cat_map_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cat_map_get", _wrap_CvDTreeTrainData_cat_map_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_counts_set", _wrap_CvDTreeTrainData_counts_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_counts_get", _wrap_CvDTreeTrainData_counts_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_buf_set", _wrap_CvDTreeTrainData_buf_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_buf_get", _wrap_CvDTreeTrainData_buf_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_direction_set", _wrap_CvDTreeTrainData_direction_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_direction_get", _wrap_CvDTreeTrainData_direction_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_split_buf_set", _wrap_CvDTreeTrainData_split_buf_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_split_buf_get", _wrap_CvDTreeTrainData_split_buf_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_var_idx_set", _wrap_CvDTreeTrainData_var_idx_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_var_idx_get", _wrap_CvDTreeTrainData_var_idx_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_var_type_set", _wrap_CvDTreeTrainData_var_type_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_var_type_get", _wrap_CvDTreeTrainData_var_type_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_priors_set", _wrap_CvDTreeTrainData_priors_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_priors_get", _wrap_CvDTreeTrainData_priors_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_priors_mult_set", _wrap_CvDTreeTrainData_priors_mult_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_priors_mult_get", _wrap_CvDTreeTrainData_priors_mult_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_params_set", _wrap_CvDTreeTrainData_params_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_params_get", _wrap_CvDTreeTrainData_params_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_tree_storage_set", _wrap_CvDTreeTrainData_tree_storage_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_tree_storage_get", _wrap_CvDTreeTrainData_tree_storage_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_temp_storage_set", _wrap_CvDTreeTrainData_temp_storage_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_temp_storage_get", _wrap_CvDTreeTrainData_temp_storage_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_data_root_set", _wrap_CvDTreeTrainData_data_root_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_data_root_get", _wrap_CvDTreeTrainData_data_root_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_node_heap_set", _wrap_CvDTreeTrainData_node_heap_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_node_heap_get", _wrap_CvDTreeTrainData_node_heap_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_split_heap_set", _wrap_CvDTreeTrainData_split_heap_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_split_heap_get", _wrap_CvDTreeTrainData_split_heap_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cv_heap_set", _wrap_CvDTreeTrainData_cv_heap_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_cv_heap_get", _wrap_CvDTreeTrainData_cv_heap_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_nv_heap_set", _wrap_CvDTreeTrainData_nv_heap_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_nv_heap_get", _wrap_CvDTreeTrainData_nv_heap_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_rng_set", _wrap_CvDTreeTrainData_rng_set, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_rng_get", _wrap_CvDTreeTrainData_rng_get, METH_VARARGS, NULL},
	 { (char *)"CvDTreeTrainData_swigregister", CvDTreeTrainData_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvDTree", _wrap_new_CvDTree, METH_VARARGS, NULL},
	 { (char *)"delete_CvDTree", _wrap_delete_CvDTree, METH_VARARGS, NULL},
	 { (char *)"CvDTree_train", _wrap_CvDTree_train, METH_VARARGS, NULL},
	 { (char *)"CvDTree_predict", _wrap_CvDTree_predict, METH_VARARGS, NULL},
	 { (char *)"CvDTree_get_var_importance", _wrap_CvDTree_get_var_importance, METH_VARARGS, NULL},
	 { (char *)"CvDTree_clear", _wrap_CvDTree_clear, METH_VARARGS, NULL},
	 { (char *)"CvDTree_read", _wrap_CvDTree_read, METH_VARARGS, NULL},
	 { (char *)"CvDTree_write", _wrap_CvDTree_write, METH_VARARGS, NULL},
	 { (char *)"CvDTree_get_root", _wrap_CvDTree_get_root, METH_VARARGS, NULL},
	 { (char *)"CvDTree_get_pruned_tree_idx", _wrap_CvDTree_get_pruned_tree_idx, METH_VARARGS, NULL},
	 { (char *)"CvDTree_get_data", _wrap_CvDTree_get_data, METH_VARARGS, NULL},
	 { (char *)"CvDTree_swigregister", CvDTree_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvForestTree", _wrap_new_CvForestTree, METH_VARARGS, NULL},
	 { (char *)"delete_CvForestTree", _wrap_delete_CvForestTree, METH_VARARGS, NULL},
	 { (char *)"CvForestTree_get_var_count", _wrap_CvForestTree_get_var_count, METH_VARARGS, NULL},
	 { (char *)"CvForestTree_train", _wrap_CvForestTree_train, METH_VARARGS, NULL},
	 { (char *)"CvForestTree_read", _wrap_CvForestTree_read, METH_VARARGS, NULL},
	 { (char *)"CvForestTree_swigregister", CvForestTree_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvRTParams_calc_var_importance_set", _wrap_CvRTParams_calc_var_importance_set, METH_VARARGS, NULL},
	 { (char *)"CvRTParams_calc_var_importance_get", _wrap_CvRTParams_calc_var_importance_get, METH_VARARGS, NULL},
	 { (char *)"CvRTParams_nactive_vars_set", _wrap_CvRTParams_nactive_vars_set, METH_VARARGS, NULL},
	 { (char *)"CvRTParams_nactive_vars_get", _wrap_CvRTParams_nactive_vars_get, METH_VARARGS, NULL},
	 { (char *)"CvRTParams_term_crit_set", _wrap_CvRTParams_term_crit_set, METH_VARARGS, NULL},
	 { (char *)"CvRTParams_term_crit_get", _wrap_CvRTParams_term_crit_get, METH_VARARGS, NULL},
	 { (char *)"new_CvRTParams", _wrap_new_CvRTParams, METH_VARARGS, NULL},
	 { (char *)"delete_CvRTParams", _wrap_delete_CvRTParams, METH_VARARGS, NULL},
	 { (char *)"CvRTParams_swigregister", CvRTParams_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvRTrees", _wrap_new_CvRTrees, METH_VARARGS, NULL},
	 { (char *)"delete_CvRTrees", _wrap_delete_CvRTrees, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_train", _wrap_CvRTrees_train, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_predict", _wrap_CvRTrees_predict, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_clear", _wrap_CvRTrees_clear, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_get_var_importance", _wrap_CvRTrees_get_var_importance, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_get_proximity", _wrap_CvRTrees_get_proximity, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_read", _wrap_CvRTrees_read, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_write", _wrap_CvRTrees_write, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_get_active_var_mask", _wrap_CvRTrees_get_active_var_mask, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_get_rng", _wrap_CvRTrees_get_rng, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_get_tree_count", _wrap_CvRTrees_get_tree_count, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_get_tree", _wrap_CvRTrees_get_tree, METH_VARARGS, NULL},
	 { (char *)"CvRTrees_swigregister", CvRTrees_swigregister, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_boost_type_set", _wrap_CvBoostParams_boost_type_set, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_boost_type_get", _wrap_CvBoostParams_boost_type_get, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_weak_count_set", _wrap_CvBoostParams_weak_count_set, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_weak_count_get", _wrap_CvBoostParams_weak_count_get, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_split_criteria_set", _wrap_CvBoostParams_split_criteria_set, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_split_criteria_get", _wrap_CvBoostParams_split_criteria_get, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_weight_trim_rate_set", _wrap_CvBoostParams_weight_trim_rate_set, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_weight_trim_rate_get", _wrap_CvBoostParams_weight_trim_rate_get, METH_VARARGS, NULL},
	 { (char *)"new_CvBoostParams", _wrap_new_CvBoostParams, METH_VARARGS, NULL},
	 { (char *)"delete_CvBoostParams", _wrap_delete_CvBoostParams, METH_VARARGS, NULL},
	 { (char *)"CvBoostParams_swigregister", CvBoostParams_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvBoostTree", _wrap_new_CvBoostTree, METH_VARARGS, NULL},
	 { (char *)"delete_CvBoostTree", _wrap_delete_CvBoostTree, METH_VARARGS, NULL},
	 { (char *)"CvBoostTree_scale", _wrap_CvBoostTree_scale, METH_VARARGS, NULL},
	 { (char *)"CvBoostTree_clear", _wrap_CvBoostTree_clear, METH_VARARGS, NULL},
	 { (char *)"CvBoostTree_train", _wrap_CvBoostTree_train, METH_VARARGS, NULL},
	 { (char *)"CvBoostTree_read", _wrap_CvBoostTree_read, METH_VARARGS, NULL},
	 { (char *)"CvBoostTree_swigregister", CvBoostTree_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_CvBoost", _wrap_delete_CvBoost, METH_VARARGS, NULL},
	 { (char *)"new_CvBoost", _wrap_new_CvBoost, METH_VARARGS, NULL},
	 { (char *)"CvBoost_train", _wrap_CvBoost_train, METH_VARARGS, NULL},
	 { (char *)"CvBoost_predict", _wrap_CvBoost_predict, METH_VARARGS, NULL},
	 { (char *)"CvBoost_prune", _wrap_CvBoost_prune, METH_VARARGS, NULL},
	 { (char *)"CvBoost_clear", _wrap_CvBoost_clear, METH_VARARGS, NULL},
	 { (char *)"CvBoost_write", _wrap_CvBoost_write, METH_VARARGS, NULL},
	 { (char *)"CvBoost_read", _wrap_CvBoost_read, METH_VARARGS, NULL},
	 { (char *)"CvBoost_get_weak_predictors", _wrap_CvBoost_get_weak_predictors, METH_VARARGS, NULL},
	 { (char *)"CvBoost_get_weights", _wrap_CvBoost_get_weights, METH_VARARGS, NULL},
	 { (char *)"CvBoost_get_subtree_weights", _wrap_CvBoost_get_subtree_weights, METH_VARARGS, NULL},
	 { (char *)"CvBoost_get_weak_response", _wrap_CvBoost_get_weak_response, METH_VARARGS, NULL},
	 { (char *)"CvBoost_get_params", _wrap_CvBoost_get_params, METH_VARARGS, NULL},
	 { (char *)"CvBoost_swigregister", CvBoost_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvANN_MLP_TrainParams", _wrap_new_CvANN_MLP_TrainParams, METH_VARARGS, NULL},
	 { (char *)"delete_CvANN_MLP_TrainParams", _wrap_delete_CvANN_MLP_TrainParams, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_term_crit_set", _wrap_CvANN_MLP_TrainParams_term_crit_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_term_crit_get", _wrap_CvANN_MLP_TrainParams_term_crit_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_train_method_set", _wrap_CvANN_MLP_TrainParams_train_method_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_train_method_get", _wrap_CvANN_MLP_TrainParams_train_method_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_bp_dw_scale_set", _wrap_CvANN_MLP_TrainParams_bp_dw_scale_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_bp_dw_scale_get", _wrap_CvANN_MLP_TrainParams_bp_dw_scale_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_bp_moment_scale_set", _wrap_CvANN_MLP_TrainParams_bp_moment_scale_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_bp_moment_scale_get", _wrap_CvANN_MLP_TrainParams_bp_moment_scale_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw0_set", _wrap_CvANN_MLP_TrainParams_rp_dw0_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw0_get", _wrap_CvANN_MLP_TrainParams_rp_dw0_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw_plus_set", _wrap_CvANN_MLP_TrainParams_rp_dw_plus_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw_plus_get", _wrap_CvANN_MLP_TrainParams_rp_dw_plus_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw_minus_set", _wrap_CvANN_MLP_TrainParams_rp_dw_minus_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw_minus_get", _wrap_CvANN_MLP_TrainParams_rp_dw_minus_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw_min_set", _wrap_CvANN_MLP_TrainParams_rp_dw_min_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw_min_get", _wrap_CvANN_MLP_TrainParams_rp_dw_min_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw_max_set", _wrap_CvANN_MLP_TrainParams_rp_dw_max_set, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_rp_dw_max_get", _wrap_CvANN_MLP_TrainParams_rp_dw_max_get, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_TrainParams_swigregister", CvANN_MLP_TrainParams_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CvANN_MLP", _wrap_new_CvANN_MLP, METH_VARARGS, NULL},
	 { (char *)"delete_CvANN_MLP", _wrap_delete_CvANN_MLP, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_create", _wrap_CvANN_MLP_create, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_train", _wrap_CvANN_MLP_train, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_predict", _wrap_CvANN_MLP_predict, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_clear", _wrap_CvANN_MLP_clear, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_read", _wrap_CvANN_MLP_read, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_write", _wrap_CvANN_MLP_write, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_get_layer_count", _wrap_CvANN_MLP_get_layer_count, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_get_layer_sizes", _wrap_CvANN_MLP_get_layer_sizes, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_get_weights", _wrap_CvANN_MLP_get_weights, METH_VARARGS, NULL},
	 { (char *)"CvANN_MLP_swigregister", CvANN_MLP_swigregister, METH_VARARGS, NULL},
	 { (char *)"cvRandMVNormal", _wrap_cvRandMVNormal, METH_VARARGS, NULL},
	 { (char *)"cvRandGaussMixture", _wrap_cvRandGaussMixture, METH_VARARGS, NULL},
	 { (char *)"cvCreateTestSet", _wrap_cvCreateTestSet, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_CvNormalBayesClassifierTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *)  ((CvNormalBayesClassifier *) x));
}
static void *_p_CvSVMTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *)  ((CvSVM *) x));
}
static void *_p_CvANN_MLPTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *)  ((CvANN_MLP *) x));
}
static void *_p_CvKNearestTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *)  ((CvKNearest *) x));
}
static void *_p_CvForestTreeTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *) (CvDTree *) ((CvForestTree *) x));
}
static void *_p_CvRTreesTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *)  ((CvRTrees *) x));
}
static void *_p_CvBoostTreeTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *) (CvDTree *) ((CvBoostTree *) x));
}
static void *_p_CvEMTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *)  ((CvEM *) x));
}
static void *_p_CvDTreeTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *)  ((CvDTree *) x));
}
static void *_p_CvBoostTo_p_CvStatModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvStatModel *)  ((CvBoost *) x));
}
static void *_p_CvRTParamsTo_p_CvDTreeParams(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvDTreeParams *)  ((CvRTParams *) x));
}
static void *_p_CvBoostParamsTo_p_CvDTreeParams(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvDTreeParams *)  ((CvBoostParams *) x));
}
static void *_p_CvForestTreeTo_p_CvDTree(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvDTree *)  ((CvForestTree *) x));
}
static void *_p_CvBoostTreeTo_p_CvDTree(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CvDTree *)  ((CvBoostTree *) x));
}
static swig_type_info _swigt__m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void = {"_m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void", "void (CvSVMKernel::*)(int,int,float const **,float const *,float *)|CvSVMKernel::Calc", 0, 0, (void*)0, 0};
static swig_type_info _swigt__m_CvSVMSolver__f_int_p_float_p_float_bool__p_float = {"_m_CvSVMSolver__f_int_p_float_p_float_bool__p_float", "CvSVMSolver::GetRow|float *(CvSVMSolver::*)(int,float *,float *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__m_CvSVMSolver__f_r_double_r_double__void = {"_m_CvSVMSolver__f_r_double_r_double__void", "void (CvSVMSolver::*)(double &,double &)|CvSVMSolver::CalcRho", 0, 0, (void*)0, 0};
static swig_type_info _swigt__m_CvSVMSolver__f_r_int_r_int__bool = {"_m_CvSVMSolver__f_r_int_r_int__bool", "CvSVMSolver::SelectWorkingSet|bool (CvSVMSolver::*)(int &,int &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Calc = {"_p_Calc", "Calc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CalcRho = {"_p_CalcRho", "CalcRho *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Cv32suf = {"_p_Cv32suf", "Cv32suf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Cv64suf = {"_p_Cv64suf", "Cv64suf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvANN_MLP = {"_p_CvANN_MLP", "CvANN_MLP *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvANN_MLP_TrainParams = {"_p_CvANN_MLP_TrainParams", "CvANN_MLP_TrainParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvAttrList = {"_p_CvAttrList", "CvAttrList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvAvgComp = {"_p_CvAvgComp", "CvAvgComp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvBoost = {"_p_CvBoost", "CvBoost *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvBoostParams = {"_p_CvBoostParams", "CvBoostParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvBoostTree = {"_p_CvBoostTree", "CvBoostTree *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvBox2D = {"_p_CvBox2D", "CvBox2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvChain = {"_p_CvChain", "CvChain *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvChainPtReader = {"_p_CvChainPtReader", "CvChainPtReader *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvConDensation = {"_p_CvConDensation", "CvConDensation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvConnectedComp = {"_p_CvConnectedComp", "CvConnectedComp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvContour = {"_p_CvContour", "CvPoint2DSeq *|CvContour *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvContourTree = {"_p_CvContourTree", "CvContourTree *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvConvexityDefect = {"_p_CvConvexityDefect", "CvConvexityDefect *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvDTree = {"_p_CvDTree", "CvDTree *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvDTreeNode = {"_p_CvDTreeNode", "CvDTreeNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvDTreeParams = {"_p_CvDTreeParams", "CvDTreeParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvDTreeSplit = {"_p_CvDTreeSplit", "CvDTreeSplit *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvDTreeTrainData = {"_p_CvDTreeTrainData", "CvDTreeTrainData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvEM = {"_p_CvEM", "CvEM *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvEMParams = {"_p_CvEMParams", "CvEMParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvFileNode = {"_p_CvFileNode", "CvFileNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvFileStorage = {"_p_CvFileStorage", "CvFileStorage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvFilter = {"_p_CvFilter", "enum CvFilter *|CvFilter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvFont = {"_p_CvFont", "CvFont *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvForestTree = {"_p_CvForestTree", "CvForestTree *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvGenericHash = {"_p_CvGenericHash", "CvGenericHash *|CvFileNodeHash *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvGraph = {"_p_CvGraph", "CvGraph *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvGraphEdge = {"_p_CvGraphEdge", "CvGraphEdge *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvGraphScanner = {"_p_CvGraphScanner", "CvGraphScanner *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvGraphVtx = {"_p_CvGraphVtx", "CvGraphVtx *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvGraphVtx2D = {"_p_CvGraphVtx2D", "CvGraphVtx2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvHaarClassifier = {"_p_CvHaarClassifier", "CvHaarClassifier *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvHaarClassifierCascade = {"_p_CvHaarClassifierCascade", "CvHaarClassifierCascade *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvHaarFeature = {"_p_CvHaarFeature", "CvHaarFeature *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvHaarStageClassifier = {"_p_CvHaarStageClassifier", "CvHaarStageClassifier *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvHidHaarClassifierCascade = {"_p_CvHidHaarClassifierCascade", "CvHidHaarClassifierCascade *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvHistogram = {"_p_CvHistogram", "CvHistogram *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvHuMoments = {"_p_CvHuMoments", "CvHuMoments *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvKNearest = {"_p_CvKNearest", "CvKNearest *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvKalman = {"_p_CvKalman", "CvKalman *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvLineIterator = {"_p_CvLineIterator", "CvLineIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvMat = {"_p_CvMat", "CvMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvMatND = {"_p_CvMatND", "CvMatND *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvMatrix3 = {"_p_CvMatrix3", "CvMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvMemBlock = {"_p_CvMemBlock", "CvMemBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvMemStorage = {"_p_CvMemStorage", "CvMemStorage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvMemStoragePos = {"_p_CvMemStoragePos", "CvMemStoragePos *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvModuleInfo = {"_p_CvModuleInfo", "CvModuleInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvMoments = {"_p_CvMoments", "CvMoments *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvNArrayIterator = {"_p_CvNArrayIterator", "CvNArrayIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvNextEdgeType = {"_p_CvNextEdgeType", "enum CvNextEdgeType *|CvNextEdgeType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvNormalBayesClassifier = {"_p_CvNormalBayesClassifier", "CvNormalBayesClassifier *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvPOSITObject = {"_p_CvPOSITObject", "CvPOSITObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvPair32s32f = {"_p_CvPair32s32f", "CvPair32s32f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvParamGrid = {"_p_CvParamGrid", "CvParamGrid *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvPluginFuncInfo = {"_p_CvPluginFuncInfo", "CvPluginFuncInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvPoint = {"_p_CvPoint", "CvPoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvPoint2D32f = {"_p_CvPoint2D32f", "CvPoint2D32f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvPoint2D64f = {"_p_CvPoint2D64f", "CvPoint2D64f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvPoint3D32f = {"_p_CvPoint3D32f", "CvPoint3D32f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvPoint3D64f = {"_p_CvPoint3D64f", "CvPoint3D64f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvQuadEdge2D = {"_p_CvQuadEdge2D", "CvQuadEdge2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvRNG_Wrapper = {"_p_CvRNG_Wrapper", "CvRNG_Wrapper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvRTParams = {"_p_CvRTParams", "CvRTParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvRTrees = {"_p_CvRTrees", "CvRTrees *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvRect = {"_p_CvRect", "CvRect *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSURFParams = {"_p_CvSURFParams", "CvSURFParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSURFPoint = {"_p_CvSURFPoint", "CvSURFPoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSVM = {"_p_CvSVM", "CvSVM *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSVMDecisionFunc = {"_p_CvSVMDecisionFunc", "CvSVMDecisionFunc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSVMKernel = {"_p_CvSVMKernel", "CvSVMKernel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSVMKernelRow = {"_p_CvSVMKernelRow", "CvSVMKernelRow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSVMParams = {"_p_CvSVMParams", "CvSVMParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSVMSolutionInfo = {"_p_CvSVMSolutionInfo", "CvSVMSolutionInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSVMSolver = {"_p_CvSVMSolver", "CvSVMSolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvScalar = {"_p_CvScalar", "CvScalar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSeq = {"_p_CvSeq", "CvSeq *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSeqBlock = {"_p_CvSeqBlock", "CvSeqBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSeqReader = {"_p_CvSeqReader", "CvSeqReader *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSeqWriter = {"_p_CvSeqWriter", "CvSeqWriter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSet = {"_p_CvSet", "CvSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSetElem = {"_p_CvSetElem", "CvSetElem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSize = {"_p_CvSize", "CvSize *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSize2D32f = {"_p_CvSize2D32f", "CvSize2D32f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSlice = {"_p_CvSlice", "CvSlice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSparseMat = {"_p_CvSparseMat", "CvSparseMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSparseMatIterator = {"_p_CvSparseMatIterator", "CvSparseMatIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSparseNode = {"_p_CvSparseNode", "CvSparseNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvStatModel = {"_p_CvStatModel", "CvStatModel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvStereoBMState = {"_p_CvStereoBMState", "CvStereoBMState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvStereoGCState = {"_p_CvStereoGCState", "CvStereoGCState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvString = {"_p_CvString", "CvString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvStringHashNode = {"_p_CvStringHashNode", "CvStringHashNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSubdiv2D = {"_p_CvSubdiv2D", "CvSubdiv2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSubdiv2DEdge_Wrapper = {"_p_CvSubdiv2DEdge_Wrapper", "CvSubdiv2DEdge_Wrapper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSubdiv2DPoint = {"_p_CvSubdiv2DPoint", "CvSubdiv2DPoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvSubdiv2DPointLocation = {"_p_CvSubdiv2DPointLocation", "enum CvSubdiv2DPointLocation *|CvSubdiv2DPointLocation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvTermCriteria = {"_p_CvTermCriteria", "CvTermCriteria *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvTreeNodeIterator = {"_p_CvTreeNodeIterator", "CvTreeNodeIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvTypeInfo = {"_p_CvTypeInfo", "CvTypeInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvVectors = {"_p_CvVectors", "CvVectors *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CvVectors_data = {"_p_CvVectors_data", "CvVectors_data *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GetRow = {"_p_GetRow", "GetRow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectWorkingSet = {"_p_SelectWorkingSet", "SelectWorkingSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__IplConvKernel = {"_p__IplConvKernel", "_IplConvKernel *|IplConvKernel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__IplConvKernelFP = {"_p__IplConvKernelFP", "_IplConvKernelFP *|IplConvKernelFP *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__IplImage = {"_p__IplImage", "_IplImage *|IplImage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__IplROI = {"_p__IplROI", "_IplROI *|IplROI *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__IplTileInfo = {"_p__IplTileInfo", "_IplTileInfo *|IplTileInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "CvHistType *|int *|CVStatus *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "int64 *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_CvMat = {"_p_p_CvMat", "CvMat **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_double = {"_p_p_double", "double **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_float = {"_p_p_float", "float **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_char = {"_p_p_unsigned_char", "unsigned char **|uchar **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "schar *|signed char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "size_t *|CvSubdiv2DEdge *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "uchar *|unsigned char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "uint64 *|unsigned long long *|CvRNG *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|ushort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "CvArr *|void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void,
  &_swigt__m_CvSVMSolver__f_int_p_float_p_float_bool__p_float,
  &_swigt__m_CvSVMSolver__f_r_double_r_double__void,
  &_swigt__m_CvSVMSolver__f_r_int_r_int__bool,
  &_swigt__p_Calc,
  &_swigt__p_CalcRho,
  &_swigt__p_Cv32suf,
  &_swigt__p_Cv64suf,
  &_swigt__p_CvANN_MLP,
  &_swigt__p_CvANN_MLP_TrainParams,
  &_swigt__p_CvAttrList,
  &_swigt__p_CvAvgComp,
  &_swigt__p_CvBoost,
  &_swigt__p_CvBoostParams,
  &_swigt__p_CvBoostTree,
  &_swigt__p_CvBox2D,
  &_swigt__p_CvChain,
  &_swigt__p_CvChainPtReader,
  &_swigt__p_CvConDensation,
  &_swigt__p_CvConnectedComp,
  &_swigt__p_CvContour,
  &_swigt__p_CvContourTree,
  &_swigt__p_CvConvexityDefect,
  &_swigt__p_CvDTree,
  &_swigt__p_CvDTreeNode,
  &_swigt__p_CvDTreeParams,
  &_swigt__p_CvDTreeSplit,
  &_swigt__p_CvDTreeTrainData,
  &_swigt__p_CvEM,
  &_swigt__p_CvEMParams,
  &_swigt__p_CvFileNode,
  &_swigt__p_CvFileStorage,
  &_swigt__p_CvFilter,
  &_swigt__p_CvFont,
  &_swigt__p_CvForestTree,
  &_swigt__p_CvGenericHash,
  &_swigt__p_CvGraph,
  &_swigt__p_CvGraphEdge,
  &_swigt__p_CvGraphScanner,
  &_swigt__p_CvGraphVtx,
  &_swigt__p_CvGraphVtx2D,
  &_swigt__p_CvHaarClassifier,
  &_swigt__p_CvHaarClassifierCascade,
  &_swigt__p_CvHaarFeature,
  &_swigt__p_CvHaarStageClassifier,
  &_swigt__p_CvHidHaarClassifierCascade,
  &_swigt__p_CvHistogram,
  &_swigt__p_CvHuMoments,
  &_swigt__p_CvKNearest,
  &_swigt__p_CvKalman,
  &_swigt__p_CvLineIterator,
  &_swigt__p_CvMat,
  &_swigt__p_CvMatND,
  &_swigt__p_CvMatrix3,
  &_swigt__p_CvMemBlock,
  &_swigt__p_CvMemStorage,
  &_swigt__p_CvMemStoragePos,
  &_swigt__p_CvModuleInfo,
  &_swigt__p_CvMoments,
  &_swigt__p_CvNArrayIterator,
  &_swigt__p_CvNextEdgeType,
  &_swigt__p_CvNormalBayesClassifier,
  &_swigt__p_CvPOSITObject,
  &_swigt__p_CvPair32s32f,
  &_swigt__p_CvParamGrid,
  &_swigt__p_CvPluginFuncInfo,
  &_swigt__p_CvPoint,
  &_swigt__p_CvPoint2D32f,
  &_swigt__p_CvPoint2D64f,
  &_swigt__p_CvPoint3D32f,
  &_swigt__p_CvPoint3D64f,
  &_swigt__p_CvQuadEdge2D,
  &_swigt__p_CvRNG_Wrapper,
  &_swigt__p_CvRTParams,
  &_swigt__p_CvRTrees,
  &_swigt__p_CvRect,
  &_swigt__p_CvSURFParams,
  &_swigt__p_CvSURFPoint,
  &_swigt__p_CvSVM,
  &_swigt__p_CvSVMDecisionFunc,
  &_swigt__p_CvSVMKernel,
  &_swigt__p_CvSVMKernelRow,
  &_swigt__p_CvSVMParams,
  &_swigt__p_CvSVMSolutionInfo,
  &_swigt__p_CvSVMSolver,
  &_swigt__p_CvScalar,
  &_swigt__p_CvSeq,
  &_swigt__p_CvSeqBlock,
  &_swigt__p_CvSeqReader,
  &_swigt__p_CvSeqWriter,
  &_swigt__p_CvSet,
  &_swigt__p_CvSetElem,
  &_swigt__p_CvSize,
  &_swigt__p_CvSize2D32f,
  &_swigt__p_CvSlice,
  &_swigt__p_CvSparseMat,
  &_swigt__p_CvSparseMatIterator,
  &_swigt__p_CvSparseNode,
  &_swigt__p_CvStatModel,
  &_swigt__p_CvStereoBMState,
  &_swigt__p_CvStereoGCState,
  &_swigt__p_CvString,
  &_swigt__p_CvStringHashNode,
  &_swigt__p_CvSubdiv2D,
  &_swigt__p_CvSubdiv2DEdge_Wrapper,
  &_swigt__p_CvSubdiv2DPoint,
  &_swigt__p_CvSubdiv2DPointLocation,
  &_swigt__p_CvTermCriteria,
  &_swigt__p_CvTreeNodeIterator,
  &_swigt__p_CvTypeInfo,
  &_swigt__p_CvVectors,
  &_swigt__p_CvVectors_data,
  &_swigt__p_GetRow,
  &_swigt__p_SelectWorkingSet,
  &_swigt__p__IplConvKernel,
  &_swigt__p__IplConvKernelFP,
  &_swigt__p__IplImage,
  &_swigt__p__IplROI,
  &_swigt__p__IplTileInfo,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_long_long,
  &_swigt__p_p_CvMat,
  &_swigt__p_p_double,
  &_swigt__p_p_float,
  &_swigt__p_p_unsigned_char,
  &_swigt__p_signed_char,
  &_swigt__p_size_t,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_void,
};

static swig_cast_info _swigc__m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void[] = {  {&_swigt__m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__m_CvSVMSolver__f_int_p_float_p_float_bool__p_float[] = {  {&_swigt__m_CvSVMSolver__f_int_p_float_p_float_bool__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__m_CvSVMSolver__f_r_double_r_double__void[] = {  {&_swigt__m_CvSVMSolver__f_r_double_r_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__m_CvSVMSolver__f_r_int_r_int__bool[] = {  {&_swigt__m_CvSVMSolver__f_r_int_r_int__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Calc[] = {  {&_swigt__p_Calc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CalcRho[] = {  {&_swigt__p_CalcRho, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Cv32suf[] = {  {&_swigt__p_Cv32suf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Cv64suf[] = {  {&_swigt__p_Cv64suf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvANN_MLP[] = {  {&_swigt__p_CvANN_MLP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvANN_MLP_TrainParams[] = {  {&_swigt__p_CvANN_MLP_TrainParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvAttrList[] = {  {&_swigt__p_CvAttrList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvAvgComp[] = {  {&_swigt__p_CvAvgComp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvBoost[] = {  {&_swigt__p_CvBoost, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvBoostParams[] = {  {&_swigt__p_CvBoostParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvBoostTree[] = {  {&_swigt__p_CvBoostTree, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvBox2D[] = {  {&_swigt__p_CvBox2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvChain[] = {  {&_swigt__p_CvChain, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvChainPtReader[] = {  {&_swigt__p_CvChainPtReader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvConDensation[] = {  {&_swigt__p_CvConDensation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvConnectedComp[] = {  {&_swigt__p_CvConnectedComp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvContour[] = {  {&_swigt__p_CvContour, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvContourTree[] = {  {&_swigt__p_CvContourTree, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvConvexityDefect[] = {  {&_swigt__p_CvConvexityDefect, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvDTree[] = {  {&_swigt__p_CvForestTree, _p_CvForestTreeTo_p_CvDTree, 0, 0},  {&_swigt__p_CvBoostTree, _p_CvBoostTreeTo_p_CvDTree, 0, 0},  {&_swigt__p_CvDTree, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvDTreeNode[] = {  {&_swigt__p_CvDTreeNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvDTreeParams[] = {  {&_swigt__p_CvRTParams, _p_CvRTParamsTo_p_CvDTreeParams, 0, 0},  {&_swigt__p_CvBoostParams, _p_CvBoostParamsTo_p_CvDTreeParams, 0, 0},  {&_swigt__p_CvDTreeParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvDTreeSplit[] = {  {&_swigt__p_CvDTreeSplit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvDTreeTrainData[] = {  {&_swigt__p_CvDTreeTrainData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvEM[] = {  {&_swigt__p_CvEM, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvEMParams[] = {  {&_swigt__p_CvEMParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvFileNode[] = {  {&_swigt__p_CvFileNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvFileStorage[] = {  {&_swigt__p_CvFileStorage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvFilter[] = {  {&_swigt__p_CvFilter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvFont[] = {  {&_swigt__p_CvFont, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvForestTree[] = {  {&_swigt__p_CvForestTree, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvGenericHash[] = {  {&_swigt__p_CvGenericHash, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvGraph[] = {  {&_swigt__p_CvGraph, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvGraphEdge[] = {  {&_swigt__p_CvGraphEdge, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvGraphScanner[] = {  {&_swigt__p_CvGraphScanner, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvGraphVtx[] = {  {&_swigt__p_CvGraphVtx, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvGraphVtx2D[] = {  {&_swigt__p_CvGraphVtx2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvHaarClassifier[] = {  {&_swigt__p_CvHaarClassifier, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvHaarClassifierCascade[] = {  {&_swigt__p_CvHaarClassifierCascade, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvHaarFeature[] = {  {&_swigt__p_CvHaarFeature, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvHaarStageClassifier[] = {  {&_swigt__p_CvHaarStageClassifier, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvHidHaarClassifierCascade[] = {  {&_swigt__p_CvHidHaarClassifierCascade, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvHistogram[] = {  {&_swigt__p_CvHistogram, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvHuMoments[] = {  {&_swigt__p_CvHuMoments, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvKNearest[] = {  {&_swigt__p_CvKNearest, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvKalman[] = {  {&_swigt__p_CvKalman, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvLineIterator[] = {  {&_swigt__p_CvLineIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvMat[] = {  {&_swigt__p_CvMat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvMatND[] = {  {&_swigt__p_CvMatND, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvMatrix3[] = {  {&_swigt__p_CvMatrix3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvMemBlock[] = {  {&_swigt__p_CvMemBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvMemStorage[] = {  {&_swigt__p_CvMemStorage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvMemStoragePos[] = {  {&_swigt__p_CvMemStoragePos, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvModuleInfo[] = {  {&_swigt__p_CvModuleInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvMoments[] = {  {&_swigt__p_CvMoments, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvNArrayIterator[] = {  {&_swigt__p_CvNArrayIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvNextEdgeType[] = {  {&_swigt__p_CvNextEdgeType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvNormalBayesClassifier[] = {  {&_swigt__p_CvNormalBayesClassifier, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvPOSITObject[] = {  {&_swigt__p_CvPOSITObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvPair32s32f[] = {  {&_swigt__p_CvPair32s32f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvParamGrid[] = {  {&_swigt__p_CvParamGrid, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvPluginFuncInfo[] = {  {&_swigt__p_CvPluginFuncInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvPoint[] = {  {&_swigt__p_CvPoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvPoint2D32f[] = {  {&_swigt__p_CvPoint2D32f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvPoint2D64f[] = {  {&_swigt__p_CvPoint2D64f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvPoint3D32f[] = {  {&_swigt__p_CvPoint3D32f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvPoint3D64f[] = {  {&_swigt__p_CvPoint3D64f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvQuadEdge2D[] = {  {&_swigt__p_CvQuadEdge2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvRNG_Wrapper[] = {  {&_swigt__p_CvRNG_Wrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvRTParams[] = {  {&_swigt__p_CvRTParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvRTrees[] = {  {&_swigt__p_CvRTrees, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvRect[] = {  {&_swigt__p_CvRect, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSURFParams[] = {  {&_swigt__p_CvSURFParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSURFPoint[] = {  {&_swigt__p_CvSURFPoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSVM[] = {  {&_swigt__p_CvSVM, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSVMDecisionFunc[] = {  {&_swigt__p_CvSVMDecisionFunc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSVMKernel[] = {  {&_swigt__p_CvSVMKernel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSVMKernelRow[] = {  {&_swigt__p_CvSVMKernelRow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSVMParams[] = {  {&_swigt__p_CvSVMParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSVMSolutionInfo[] = {  {&_swigt__p_CvSVMSolutionInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSVMSolver[] = {  {&_swigt__p_CvSVMSolver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvScalar[] = {  {&_swigt__p_CvScalar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSeq[] = {  {&_swigt__p_CvSeq, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSeqBlock[] = {  {&_swigt__p_CvSeqBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSeqReader[] = {  {&_swigt__p_CvSeqReader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSeqWriter[] = {  {&_swigt__p_CvSeqWriter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSet[] = {  {&_swigt__p_CvSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSetElem[] = {  {&_swigt__p_CvSetElem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSize[] = {  {&_swigt__p_CvSize, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSize2D32f[] = {  {&_swigt__p_CvSize2D32f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSlice[] = {  {&_swigt__p_CvSlice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSparseMat[] = {  {&_swigt__p_CvSparseMat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSparseMatIterator[] = {  {&_swigt__p_CvSparseMatIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSparseNode[] = {  {&_swigt__p_CvSparseNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvStatModel[] = {  {&_swigt__p_CvNormalBayesClassifier, _p_CvNormalBayesClassifierTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvANN_MLP, _p_CvANN_MLPTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvStatModel, 0, 0, 0},  {&_swigt__p_CvKNearest, _p_CvKNearestTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvForestTree, _p_CvForestTreeTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvRTrees, _p_CvRTreesTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvBoostTree, _p_CvBoostTreeTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvEM, _p_CvEMTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvSVM, _p_CvSVMTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvDTree, _p_CvDTreeTo_p_CvStatModel, 0, 0},  {&_swigt__p_CvBoost, _p_CvBoostTo_p_CvStatModel, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvStereoBMState[] = {  {&_swigt__p_CvStereoBMState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvStereoGCState[] = {  {&_swigt__p_CvStereoGCState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvString[] = {  {&_swigt__p_CvString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvStringHashNode[] = {  {&_swigt__p_CvStringHashNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSubdiv2D[] = {  {&_swigt__p_CvSubdiv2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSubdiv2DEdge_Wrapper[] = {  {&_swigt__p_CvSubdiv2DEdge_Wrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSubdiv2DPoint[] = {  {&_swigt__p_CvSubdiv2DPoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvSubdiv2DPointLocation[] = {  {&_swigt__p_CvSubdiv2DPointLocation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvTermCriteria[] = {  {&_swigt__p_CvTermCriteria, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvTreeNodeIterator[] = {  {&_swigt__p_CvTreeNodeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvTypeInfo[] = {  {&_swigt__p_CvTypeInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvVectors[] = {  {&_swigt__p_CvVectors, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CvVectors_data[] = {  {&_swigt__p_CvVectors_data, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GetRow[] = {  {&_swigt__p_GetRow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectWorkingSet[] = {  {&_swigt__p_SelectWorkingSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__IplConvKernel[] = {  {&_swigt__p__IplConvKernel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__IplConvKernelFP[] = {  {&_swigt__p__IplConvKernelFP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__IplImage[] = {  {&_swigt__p__IplImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__IplROI[] = {  {&_swigt__p__IplROI, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__IplTileInfo[] = {  {&_swigt__p__IplTileInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_CvMat[] = {  {&_swigt__p_p_CvMat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_double[] = {  {&_swigt__p_p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_float[] = {  {&_swigt__p_p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_char[] = {  {&_swigt__p_p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__m_CvSVMKernel__f_int_int_p_p_q_const__float_p_q_const__float_p_float__void,
  _swigc__m_CvSVMSolver__f_int_p_float_p_float_bool__p_float,
  _swigc__m_CvSVMSolver__f_r_double_r_double__void,
  _swigc__m_CvSVMSolver__f_r_int_r_int__bool,
  _swigc__p_Calc,
  _swigc__p_CalcRho,
  _swigc__p_Cv32suf,
  _swigc__p_Cv64suf,
  _swigc__p_CvANN_MLP,
  _swigc__p_CvANN_MLP_TrainParams,
  _swigc__p_CvAttrList,
  _swigc__p_CvAvgComp,
  _swigc__p_CvBoost,
  _swigc__p_CvBoostParams,
  _swigc__p_CvBoostTree,
  _swigc__p_CvBox2D,
  _swigc__p_CvChain,
  _swigc__p_CvChainPtReader,
  _swigc__p_CvConDensation,
  _swigc__p_CvConnectedComp,
  _swigc__p_CvContour,
  _swigc__p_CvContourTree,
  _swigc__p_CvConvexityDefect,
  _swigc__p_CvDTree,
  _swigc__p_CvDTreeNode,
  _swigc__p_CvDTreeParams,
  _swigc__p_CvDTreeSplit,
  _swigc__p_CvDTreeTrainData,
  _swigc__p_CvEM,
  _swigc__p_CvEMParams,
  _swigc__p_CvFileNode,
  _swigc__p_CvFileStorage,
  _swigc__p_CvFilter,
  _swigc__p_CvFont,
  _swigc__p_CvForestTree,
  _swigc__p_CvGenericHash,
  _swigc__p_CvGraph,
  _swigc__p_CvGraphEdge,
  _swigc__p_CvGraphScanner,
  _swigc__p_CvGraphVtx,
  _swigc__p_CvGraphVtx2D,
  _swigc__p_CvHaarClassifier,
  _swigc__p_CvHaarClassifierCascade,
  _swigc__p_CvHaarFeature,
  _swigc__p_CvHaarStageClassifier,
  _swigc__p_CvHidHaarClassifierCascade,
  _swigc__p_CvHistogram,
  _swigc__p_CvHuMoments,
  _swigc__p_CvKNearest,
  _swigc__p_CvKalman,
  _swigc__p_CvLineIterator,
  _swigc__p_CvMat,
  _swigc__p_CvMatND,
  _swigc__p_CvMatrix3,
  _swigc__p_CvMemBlock,
  _swigc__p_CvMemStorage,
  _swigc__p_CvMemStoragePos,
  _swigc__p_CvModuleInfo,
  _swigc__p_CvMoments,
  _swigc__p_CvNArrayIterator,
  _swigc__p_CvNextEdgeType,
  _swigc__p_CvNormalBayesClassifier,
  _swigc__p_CvPOSITObject,
  _swigc__p_CvPair32s32f,
  _swigc__p_CvParamGrid,
  _swigc__p_CvPluginFuncInfo,
  _swigc__p_CvPoint,
  _swigc__p_CvPoint2D32f,
  _swigc__p_CvPoint2D64f,
  _swigc__p_CvPoint3D32f,
  _swigc__p_CvPoint3D64f,
  _swigc__p_CvQuadEdge2D,
  _swigc__p_CvRNG_Wrapper,
  _swigc__p_CvRTParams,
  _swigc__p_CvRTrees,
  _swigc__p_CvRect,
  _swigc__p_CvSURFParams,
  _swigc__p_CvSURFPoint,
  _swigc__p_CvSVM,
  _swigc__p_CvSVMDecisionFunc,
  _swigc__p_CvSVMKernel,
  _swigc__p_CvSVMKernelRow,
  _swigc__p_CvSVMParams,
  _swigc__p_CvSVMSolutionInfo,
  _swigc__p_CvSVMSolver,
  _swigc__p_CvScalar,
  _swigc__p_CvSeq,
  _swigc__p_CvSeqBlock,
  _swigc__p_CvSeqReader,
  _swigc__p_CvSeqWriter,
  _swigc__p_CvSet,
  _swigc__p_CvSetElem,
  _swigc__p_CvSize,
  _swigc__p_CvSize2D32f,
  _swigc__p_CvSlice,
  _swigc__p_CvSparseMat,
  _swigc__p_CvSparseMatIterator,
  _swigc__p_CvSparseNode,
  _swigc__p_CvStatModel,
  _swigc__p_CvStereoBMState,
  _swigc__p_CvStereoGCState,
  _swigc__p_CvString,
  _swigc__p_CvStringHashNode,
  _swigc__p_CvSubdiv2D,
  _swigc__p_CvSubdiv2DEdge_Wrapper,
  _swigc__p_CvSubdiv2DPoint,
  _swigc__p_CvSubdiv2DPointLocation,
  _swigc__p_CvTermCriteria,
  _swigc__p_CvTreeNodeIterator,
  _swigc__p_CvTypeInfo,
  _swigc__p_CvVectors,
  _swigc__p_CvVectors_data,
  _swigc__p_GetRow,
  _swigc__p_SelectWorkingSet,
  _swigc__p__IplConvKernel,
  _swigc__p__IplConvKernelFP,
  _swigc__p__IplImage,
  _swigc__p__IplROI,
  _swigc__p__IplTileInfo,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_long_long,
  _swigc__p_p_CvMat,
  _swigc__p_p_double,
  _swigc__p_p_float,
  _swigc__p_p_unsigned_char,
  _swigc__p_signed_char,
  _swigc__p_size_t,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
    return PyString_FromString("<Swig global variables>");
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
    PyObject *str = PyString_FromString("(");
    swig_globalvar  *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", PyString_AsString(str));
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      varlink_type.ob_type = &PyType_Type;
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
  PyObject *m, *d;
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  SWIG_Python_SetConstant(d, "CV_LOG2PI",SWIG_From_double(static_cast< double >((1.8378770664093454835606594728112))));
  SWIG_Python_SetConstant(d, "CV_COL_SAMPLE",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "CV_ROW_SAMPLE",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "CV_VAR_NUMERICAL",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "CV_VAR_ORDERED",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "CV_VAR_CATEGORICAL",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_SVM",SWIG_FromCharPtr("opencv-ml-svm"));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_KNN",SWIG_FromCharPtr("opencv-ml-knn"));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_NBAYES",SWIG_FromCharPtr("opencv-ml-bayesian"));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_EM",SWIG_FromCharPtr("opencv-ml-em"));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_BOOSTING",SWIG_FromCharPtr("opencv-ml-boost-tree"));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_TREE",SWIG_FromCharPtr("opencv-ml-tree"));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_ANN_MLP",SWIG_FromCharPtr("opencv-ml-ann-mlp"));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_CNN",SWIG_FromCharPtr("opencv-ml-cnn"));
  SWIG_Python_SetConstant(d, "CV_TYPE_NAME_ML_RTREES",SWIG_FromCharPtr("opencv-ml-random-trees"));
  SWIG_Python_SetConstant(d, "CvParamGrid_SVM_C",SWIG_From_int(static_cast< int >(CvParamGrid::SVM_C)));
  SWIG_Python_SetConstant(d, "CvParamGrid_SVM_GAMMA",SWIG_From_int(static_cast< int >(CvParamGrid::SVM_GAMMA)));
  SWIG_Python_SetConstant(d, "CvParamGrid_SVM_P",SWIG_From_int(static_cast< int >(CvParamGrid::SVM_P)));
  SWIG_Python_SetConstant(d, "CvParamGrid_SVM_NU",SWIG_From_int(static_cast< int >(CvParamGrid::SVM_NU)));
  SWIG_Python_SetConstant(d, "CvParamGrid_SVM_COEF",SWIG_From_int(static_cast< int >(CvParamGrid::SVM_COEF)));
  SWIG_Python_SetConstant(d, "CvParamGrid_SVM_DEGREE",SWIG_From_int(static_cast< int >(CvParamGrid::SVM_DEGREE)));
  SWIG_Python_SetConstant(d, "CvSVM_C_SVC",SWIG_From_int(static_cast< int >(CvSVM::C_SVC)));
  SWIG_Python_SetConstant(d, "CvSVM_NU_SVC",SWIG_From_int(static_cast< int >(CvSVM::NU_SVC)));
  SWIG_Python_SetConstant(d, "CvSVM_ONE_CLASS",SWIG_From_int(static_cast< int >(CvSVM::ONE_CLASS)));
  SWIG_Python_SetConstant(d, "CvSVM_EPS_SVR",SWIG_From_int(static_cast< int >(CvSVM::EPS_SVR)));
  SWIG_Python_SetConstant(d, "CvSVM_NU_SVR",SWIG_From_int(static_cast< int >(CvSVM::NU_SVR)));
  SWIG_Python_SetConstant(d, "CvSVM_LINEAR",SWIG_From_int(static_cast< int >(CvSVM::LINEAR)));
  SWIG_Python_SetConstant(d, "CvSVM_POLY",SWIG_From_int(static_cast< int >(CvSVM::POLY)));
  SWIG_Python_SetConstant(d, "CvSVM_RBF",SWIG_From_int(static_cast< int >(CvSVM::RBF)));
  SWIG_Python_SetConstant(d, "CvSVM_SIGMOID",SWIG_From_int(static_cast< int >(CvSVM::SIGMOID)));
  SWIG_Python_SetConstant(d, "CvSVM_C",SWIG_From_int(static_cast< int >(CvSVM::C)));
  SWIG_Python_SetConstant(d, "CvSVM_GAMMA",SWIG_From_int(static_cast< int >(CvSVM::GAMMA)));
  SWIG_Python_SetConstant(d, "CvSVM_P",SWIG_From_int(static_cast< int >(CvSVM::P)));
  SWIG_Python_SetConstant(d, "CvSVM_NU",SWIG_From_int(static_cast< int >(CvSVM::NU)));
  SWIG_Python_SetConstant(d, "CvSVM_COEF",SWIG_From_int(static_cast< int >(CvSVM::COEF)));
  SWIG_Python_SetConstant(d, "CvSVM_DEGREE",SWIG_From_int(static_cast< int >(CvSVM::DEGREE)));
  SWIG_Python_SetConstant(d, "CvEM_COV_MAT_SPHERICAL",SWIG_From_int(static_cast< int >(CvEM::COV_MAT_SPHERICAL)));
  SWIG_Python_SetConstant(d, "CvEM_COV_MAT_DIAGONAL",SWIG_From_int(static_cast< int >(CvEM::COV_MAT_DIAGONAL)));
  SWIG_Python_SetConstant(d, "CvEM_COV_MAT_GENERIC",SWIG_From_int(static_cast< int >(CvEM::COV_MAT_GENERIC)));
  SWIG_Python_SetConstant(d, "CvEM_START_E_STEP",SWIG_From_int(static_cast< int >(CvEM::START_E_STEP)));
  SWIG_Python_SetConstant(d, "CvEM_START_M_STEP",SWIG_From_int(static_cast< int >(CvEM::START_M_STEP)));
  SWIG_Python_SetConstant(d, "CvEM_START_AUTO_STEP",SWIG_From_int(static_cast< int >(CvEM::START_AUTO_STEP)));
  SWIG_Python_SetConstant(d, "CvBoost_DISCRETE",SWIG_From_int(static_cast< int >(CvBoost::DISCRETE)));
  SWIG_Python_SetConstant(d, "CvBoost_REAL",SWIG_From_int(static_cast< int >(CvBoost::REAL)));
  SWIG_Python_SetConstant(d, "CvBoost_LOGIT",SWIG_From_int(static_cast< int >(CvBoost::LOGIT)));
  SWIG_Python_SetConstant(d, "CvBoost_GENTLE",SWIG_From_int(static_cast< int >(CvBoost::GENTLE)));
  SWIG_Python_SetConstant(d, "CvBoost_DEFAULT",SWIG_From_int(static_cast< int >(CvBoost::DEFAULT)));
  SWIG_Python_SetConstant(d, "CvBoost_GINI",SWIG_From_int(static_cast< int >(CvBoost::GINI)));
  SWIG_Python_SetConstant(d, "CvBoost_MISCLASS",SWIG_From_int(static_cast< int >(CvBoost::MISCLASS)));
  SWIG_Python_SetConstant(d, "CvBoost_SQERR",SWIG_From_int(static_cast< int >(CvBoost::SQERR)));
  SWIG_Python_SetConstant(d, "CvANN_MLP_TrainParams_BACKPROP",SWIG_From_int(static_cast< int >(CvANN_MLP_TrainParams::BACKPROP)));
  SWIG_Python_SetConstant(d, "CvANN_MLP_TrainParams_RPROP",SWIG_From_int(static_cast< int >(CvANN_MLP_TrainParams::RPROP)));
  SWIG_Python_SetConstant(d, "CvANN_MLP_IDENTITY",SWIG_From_int(static_cast< int >(CvANN_MLP::IDENTITY)));
  SWIG_Python_SetConstant(d, "CvANN_MLP_SIGMOID_SYM",SWIG_From_int(static_cast< int >(CvANN_MLP::SIGMOID_SYM)));
  SWIG_Python_SetConstant(d, "CvANN_MLP_GAUSSIAN",SWIG_From_int(static_cast< int >(CvANN_MLP::GAUSSIAN)));
  SWIG_Python_SetConstant(d, "CvANN_MLP_UPDATE_WEIGHTS",SWIG_From_int(static_cast< int >(CvANN_MLP::UPDATE_WEIGHTS)));
  SWIG_Python_SetConstant(d, "CvANN_MLP_NO_INPUT_SCALE",SWIG_From_int(static_cast< int >(CvANN_MLP::NO_INPUT_SCALE)));
  SWIG_Python_SetConstant(d, "CvANN_MLP_NO_OUTPUT_SCALE",SWIG_From_int(static_cast< int >(CvANN_MLP::NO_OUTPUT_SCALE)));
  SWIG_Python_SetConstant(d, "CV_TS_CONCENTRIC_SPHERES",SWIG_From_int(static_cast< int >(0)));
}

